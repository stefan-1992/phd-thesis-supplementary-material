file,number,text,lrml
lrml/NZ_NZBC-G4AS1#4.0.lrml,r1.2.2.1,1.2.2 Natural ventilation of occupied spaces must be achieved by providing a net openable area of windows or other openings to the outside of no less than 5% of the floor area,"if(and(expr(fun(greaterThan),expr(fun(count),atom(rel(occupantLoad),var(space))),data(0)),expr(fun(greaterThan),expr(fun(count),atom(rel(opening),var(wall))),data(0)),expr(fun(is),atom(rel(isExternal),var(wall)),data(true)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(ratio),var(ventAreaToFloorArea)),data(0.05))))"
lrml/NZ_NZBC-G14AS1#2.6.lrml,r1.1.0.1,1.1.1 A fence erected to ensure security against unauthorised access to storage and treatment facilities shall comply with F5/AS1 Construction and Demolition Hazards.,"if(and(atom(rel(storageFacility),var(industrialLiquidWaste),data(securityFence),operator(has)),atom(rel(treatmentFacility),var(industrialLiquidWaste),data(securityFence),operator(has)))),then(and(obligation(atom(rel(construction),var(securityFence),data(nzbc_f5_as1),operator(complyWith))),atom(rel(construction),var(securityFence),data(nzbc_f5_as1),operator(complyWith))))"
lrml/NZ_NZBC-G14AS1#2.6.lrml,r1.2.0.1,"1.2.1 Discharge to the sewer without pre-treatment – Where the network utility operator accepts the discharge of industrial liquid waste to a sewer without pre-treatment, the disposal system shall comply with Acceptable Solution G13/AS2.","if(and(permission(atom(var(industrialLiquidWaste),data(sewer),operator(dischargeInto)))),and(atom(rel(treatedForSewer),var(industrialLiquidWaste),data(FALSE),operator(is))),and(atom(rel(disposalMethod),var(industrialLiquidWaste),data(nuo),operator(approvedBy)))),then(obligation(atom(var(disposalSystem),data(nzbc_g13_as2),operator(complyWith))))"
lrml/NZ_NZBC-G14AS1#2.6.lrml,r1.2.0.2,"1.2.1 Discharge to the sewer without pre-treatment – Where the network utility operator accepts the discharge of industrial liquid waste to a sewer without pre-treatment, the disposal system shall comply with Acceptable Solution G13/AS2.","if(and(permission(atom(var(industrialLiquidWaste),data(sewer),operator(dischargeInto))),atom(rel(treatedForSewer),var(industrialLiquidWaste),data(TRUE),operator(is)),atom(rel(disposalMethod),var(industrialLiquidWaste),data(nuo),operator(approvedBy)))),then(obligation(atom(rel(postTreatment),var(disposalSystem),data(nzbc_g13_as2),operator(complyWith))))"
lrml/NZ_NZBC-CVM2#0.5.lrml,r2.3.3.1.0.1,"However, note that for the full burnout design fire (see Paragraph 2.4), calculations of fire resistance shall be based on burnout without sprinkler or other intervention, except that the design FLED may be modified as described in Paragraph 2.4.1 where sprinklers are installed. The following parameters shall apply: a) Post-flashover species yield for soot is Ysoot = 0.14 kg/kgfuel b) Post-flashover species yield for CO is YCO = 0.40 kg/kgfuel, and c) Design FLEDs shall be as specified in Table 2.2 for activities within buildings.","if(expr(fun(equal),atom(rel(resistance),var(fire)),data(required))),then(and(obligation(expr(fun(equal),atom(var(ysoot)),data(0.14kg/(kgoffuel)))),expr(fun(equal),atom(var(yco)),data(0.4kg/(kgoffuel))),expr(fun(complyWith),atom(var(fled)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_2.2))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.0.1, This Acceptable Solution is one of three Acceptable Solutions that provide a means of establishing compliance with NZBC Clauses C1 to C6 Protection from Fire. It can be used for the building activities covered by risk groups specified in Paragraph 1.1.1 and described in Table 1.1.,"if(and(or(obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_c1))),obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_c2))),obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_c3))),obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_c5))),obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_c6)))),expr(fun(asPer),atom(rel(riskGroup),var(building)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_1.1)),expr(fun(asPer),atom(rel(riskGroup),var(building)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(1.1.1)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.0.2,"For risk group SH, please refer to Acceptable Solution C/AS1.","if(obligation(expr(fun(is),atom(rel(riskGroup),var(building)),data(SH)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(nzbc_cas1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.0.3,"For backcountry huts, please refer to Acceptable Solution BCH/AS1.","if(obligation(expr(fun(is),atom(rel(activity),var(building)),data(backcountryHut)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(nzbc_bch/as1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.1,1.1.1 The scope of this Acceptable Solution is restricted to all risk groups listed in Table 1.1 except for risk group SH (refer to C/AS1).,"if(and(expr(fun(asPer),atom(rel(riskGroup),var(building)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_1.1)),not(expr(fun(is),atom(rel(riskGroup),var(building)),data(SH))))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.2,It covers buildings or parts of buildings where people: Sleep (SM),"if(or(expr(fun(is),atom(rel(activity),var(building)),data(sleeping)),expr(fun(equal),atom(rel(riskGroup),var(building)),data(SM)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.3,"It covers buildings or parts of buildings where people: a) Sleep (SM), and b) Are unable to self-evacuate without assistance through requiring special care or treatment, or they are restrained, or their liberties are restricted (SI)","if(or(or(expr(fun(is),atom(rel(activity),var(building)),data(care)),expr(fun(is),atom(rel(activity),var(building)),data(detention))),expr(fun(equal),atom(rel(riskGroup),var(building)),data(SI)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.4,"It covers buildings or parts of buildings where people: Congregate, participate in group activities or where professional services or retail are provided (CA)","if(or(or(expr(fun(is),atom(rel(activity),var(building)),data(crowd)),expr(fun(is),atom(rel(activity),var(building)),data(educational)),expr(fun(is),atom(rel(activity),var(building)),data(personalService))),expr(fun(equal),atom(rel(riskGroup),var(building)),data(CA)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.5,It covers buildings or parts of buildings where people: Work (WB),"if(or(or(expr(fun(is),atom(rel(activity),var(building)),data(business)),expr(fun(is),atom(rel(activity),var(building)),data(professionalService)),expr(fun(is),atom(rel(activity),var(building)),data(industrial))),expr(fun(equal),atom(rel(riskGroup),var(building)),data(WB)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.6,It covers buildings or parts of buildings where people: Store goods and other materials (WS),"if(or(or(expr(fun(is),atom(rel(activity),var(building)),data(storage)),expr(fun(is),atom(rel(activity),var(building)),data(tradeService))),expr(fun(equal),atom(rel(riskGroup),var(building)),data(WS)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.1.1.0.7,It covers buildings or parts of buildings where people: Park vehicles (VP).,"if(or(expr(fun(is),atom(rel(activity),var(building)),data(vehicleParking)),expr(fun(equal),atom(rel(riskGroup),var(building)),data(VP)))),then(obligation(expr(fun(complyWith),atom(rel(fireProtection),var(building)),data(thisDocument))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.2.2.0.1,"1.2.2 If a building contains a number of different activities which individually may be categorised in different risk groups, the risk group designated for a particular firecell within a building shall be that of the primary risk group.","if(and(expr(fun(greaterThan),expr(fun(count),atom(rel(activity),var(building))),data(1)),expr(rulestatement(expr(fun(in),expr(fun(max),atom(var(activity))),data(building))),appliedstatement(expr(fun(define),atom(rel(stringency),var(riskGroup)),data(primaryRiskGroup)))))),then(obligation(expr(fun(is),atom(rel(riskGroup),var(building)),data(primaryRiskGroup))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.2.2.0.2,"If a building contains a number of different activities which individually may be categorised in different risk groups, the risk group designated for a particular firecell within a building shall be that of the primary risk group.","if(and(expr(fun(greaterThan),expr(fun(count),atom(rel(activity),var(firecell))),data(1)),expr(rulestatement(expr(fun(in),expr(fun(max),atom(var(activity))),data(firecell))),appliedstatement(expr(fun(define),atom(rel(stringency),var(riskGroup)),data(primaryRiskGroup)))))),then(obligation(expr(fun(is),atom(rel(riskGroup),var(firecell)),data(primaryRiskGroup))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.2.2.0.3,"1.2.2 If a building contains a number of different activities which individually may be categorised in different risk groups, the risk group designated for a particular firecell within a building shall be that of the primary risk group.","if(and(expr(fun(greaterThan),expr(fun(count),atom(rel(activity),var(space))),data(1)),expr(rulestatement(expr(fun(in),expr(fun(max),atom(var(activity))),data(space))),appliedstatement(expr(fun(define),atom(rel(stringency),var(riskGroup)),data(primaryRiskGroup)))))),then(obligation(expr(fun(is),atom(rel(riskGroup),var(space)),data(primaryRiskGroup))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.2.2.0.4,"Other risk groups may be able to be incorporated within the same space provided these are ancillary to, and support, the primary risk groups.","if(and(expr(fun(is),atom(rel(activity),var(space)),data(ancillary)),expr(fun(partOf),atom(var(space)),data(firecell)),expr(fun(is),atom(rel(riskGroup),var(firecell)),data(primaryRiskGroup)))),then(obligation(expr(fun(equal),atom(rel(riskGroup),var(space)),data(primaryRiskGroup))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.2.3.0.1,"1.2.3 Depending on the particular building and the uses or activities within that building, there may be several primary risk groups, with one or more on each floor.","if(expr(fun(has),atom(var(building)),data(primaryRiskGroup))),then(permission(expr(fun(greaterThan),expr(fun(count),atom(var(primaryRiskGroup))),data(1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.1.0.1,"1.4.1 The occupant load shall be determined from the risk group and number of people in each space of the building The occupant load may need to be evaluated not only for each risk group but also for: a) A space or open floor area involving one or more activities, and b) A floor containing more than one risk group, and c) A single firecell, and d) Each floor within a firecell.","if(or(expr(rulestatement(expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(firecell))),appliedstatement(and(expr(fun(define),expr(fun(count),atom(rel(occupant),var(space))),data(p1)),expr(fun(define),atom(rel(riskGroup),var(space)),data(rg1)),expr(fun(include),atom(var(space)),data(openFloorArea)),expr(fun(greaterThan),expr(fun(count),atom(rel(activities),var(space))),data(1))))),expr(rulestatement(expr(fun(in),expr(fun(forEach),atom(var(space))),data(firecell))),appliedstatement(and(expr(fun(define),expr(fun(count),atom(rel(occupant),var(space))),data(p2)),expr(fun(define),atom(rel(riskGroup),var(space)),data(rg2)),expr(fun(include),atom(var(space)),data(openFloorArea)),expr(fun(greaterThan),expr(fun(count),atom(rel(activities),var(space))),data(1))))))),then(and(obligation(expr(fun(include),atom(rel(calculation),var(occupantLoad)),data(p1))),obligation(expr(fun(include),atom(rel(calculation),var(occupantLoad)),data(p2))),obligation(expr(fun(include),atom(rel(calculation),var(occupantLoad)),data(rg1))),obligation(expr(fun(include),atom(rel(calculation),var(occupantLoad)),data(rg2)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.2.0.1,1.4.2 Occupant loads shall be calculated from the occupant densities given in Table 1.2 based on the floor area of the part of the building housing the activity.,"if(and(expr(fun(define),atom(rel(floorArea),var(space)),data(A)),expr(fun(define),atom(var(occupantLoadDensity)),data(d)),obligation(expr(fun(from),atom(var(d)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_1.2))))),then(obligation(expr(fun(equal),atom(rel(occupantLoad),var(space)),data(A/d))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.3.0.1,"1.4.3 Duplication shall be avoided by: a) Ensuring that, where people may be involved in more than one activity, they are counted only once, and b) Not including an occupant load for exitways, or for the occupant load determined for areas such as lift lobbies or sanitary facilities that are used intermittently by people already counted elsewhere in the building. Fixed seating","if(and(expr(fun(has),atom(var(space)),data(occupant)),not(expr(fun(is),atom(rel(use),var(space)),data(intermittent))))),then(and(obligation(expr(fun(in),atom(rel(occupant),var(space)),data(building))),expr(fun(define),atom(rel(occupantLoad),var(space)),data(p1)),obligation(expr(fun(for),atom(var(p1)),data(fireSafetyDesign)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.4.0.1,"1.4.4 Occupant load assessment shall take account of the actual arrangement and number of seats for fixed seating (see Paragraph 3.7.4). Where additional floor area abuts the fixed seating, additional occupants are permitted in that floor area based on standing space density, provided the escape route is not obstructed.","if(and(expr(fun(define),expr(fun(count),atom(rel(seat),var(fixedSeating))),data(s1)),expr(fun(adjoin),atom(var(space)),data(fixedSeating)),expr(fun(has),atom(var(space)),data(occupant)),expr(fun(define),atom(rel(occupantLoad),var(space)),data(p2)),not(expr(fun(is),atom(var(escapeRoute)),data(obstructed))))),then(and(obligation(expr(fun(is),atom(rel(activity),var(space)),data(standing))),obligation(expr(fun(from),atom(var(p2)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_1.2))),obligation(expr(fun(equal),atom(var(occupantLoad)),data(s1+p2)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.5.0.1,1.4.5 The requirements of this Acceptable Solution account for the fact that other people may be present in the building or firecell and additional calculations are not required when an occupant load is derived by bed spaces (i.e. for risk groups SM and SI).,"if(and(or(expr(fun(is),atom(rel(activity),var(space)),data(sleeping)),or(expr(fun(is),atom(rel(riskGroup),var(space)),data(SM)),expr(fun(is),atom(rel(riskGroup),var(space)),data(SI)))),expr(fun(define),expr(fun(count),atom(var(bed))),data(b)),or(expr(fun(include),atom(var(bed)),data(recliner)),expr(fun(include),atom(var(bed)),data(loungeChair)),expr(fun(include),atom(var(bed)),data(dentistChair)),expr(fun(include),atom(var(bed)),data(treatmentTable)),expr(fun(include),atom(var(bed)),data(treatmentFurniture))),expr(fun(is),atom(var(b)),data(occupantLoad)),expr(fun(for),atom(var(b)),data(fireSafetyDesign)),expr(fun(define),expr(fun(count),atom(rel(occupant),var(space))),data(p)))),then(and(expr(fun(equal),atom(rel(occupantLoad),var(space)),data(b)),obligation(not(expr(fun(is),atom(var(p)),data(calculated))))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.6.0.1,"1.4.6 For the purposes of risk group SI the term 'bed' means the number of people that are under care or detention. It can include people on: a) Beds, or b) Recliner or lounge chairs, or c) Dentist chairs, or d) Treatment tables, or e) Any other furniture where an occupant may be for a period of treatment, in care or detention.","if(and(or(expr(fun(is),atom(rel(activity),var(space)),data(sleeping)),expr(fun(is),atom(rel(riskGroup),var(space)),data(SI))),expr(fun(define),expr(fun(count),atom(var(bed))),data(b)),or(expr(fun(include),atom(var(bed)),data(recliner)),expr(fun(include),atom(var(bed)),data(loungeChair)),expr(fun(include),atom(var(bed)),data(dentistChair)),expr(fun(include),atom(var(bed)),data(treatmentTable)),expr(fun(include),atom(var(bed)),data(treatmentFurniture))))),then(and(obligation(expr(fun(is),atom(var(b)),data(occupantLoad))),expr(fun(for),atom(var(b)),data(fireSafetyDesign))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.7.0.1,"1.4.7 If, in a particular situation, the occupant load derived from Table 1.2 is clearly more than that which will occur, the basis of any proposal for a lesser occupant load shall be substantiated to the building consent authority.","if(and(expr(fun(define),atom(var(occupantLoadDensity)),data(d2)),expr(fun(from),atom(var(d2)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_1.2)),expr(fun(define),atom(rel(occupantLoad),var(space)),data(d1)),or(expr(fun(is),atom(var(d1)),data(actual)),expr(fun(is),atom(var(d1)),data(expected))),expr(fun(greaterThan),atom(var(d2)),data(d1)),expr(fun(for),atom(var(d1)),data(fireSafetyDesign)))),then(obligation(expr(fun(is),atom(var(d1)),data(justified))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r1.4.8.0.1,"1.4.8 If the maximum occupant load is greater than that calculated from Table 1.2, the higher number shall be used as the basis for the fire safety design and will need to be justified to the building consent authority.","if(and(expr(fun(define),atom(var(occupantLoadDensity)),data(d2)),expr(fun(from),atom(var(d2)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_1.2)),expr(fun(define),atom(rel(occupantLoad),var(space)),data(d1)),or(expr(fun(is),atom(var(d1)),data(actual)),expr(fun(is),atom(var(d1)),data(expected))),expr(fun(greaterThan),atom(var(d1)),data(d2)))),then(and(obligation(expr(fun(for),atom(var(d1)),data(fireSafetyDesign))),obligation(expr(fun(is),atom(var(d1)),data(justified)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.1.1.0.1,2.1.1 The floor area of firecells shall be limited in accordance with Table 2.1.,"if(expr(fun(is),atom(var(space)),data(firecell))),then(and(obligation(expr(fun(complyWith),atom(rel(floorArea),var(firecell)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_2.1)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.1.0.5,A direct connection to Fire and Emergency New Zealand is not required if automatic heat or smoke detection systems are provided in addition to the systems required by this Acceptable Solution.,"if(and(expr(fun(is),atom(rel(fireSafetySystem),var(space)),data(supplementary)),expr(fun(is),atom(rel(type),var(fireSafetySystem)),data(detection)),expr(fun(is),atom(rel(method),var(detection)),data(automatic)),or(expr(fun(is),atom(rel(type),var(detection)),data(heat)),expr(fun(is),atom(rel(type),var(detection)),data(smoke))))),then(obligation(not(expr(fun(has),atom(var(fireSafetySystem)),data(fireServiceDirectConnection)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.2.0.a.1,"a) In single storey early childhood centres, dedicated sleeping areas shall be protected with supplementary smoke detectors. The alarm system and any smoke detection system shall comply with NZS 4512.","if(and(expr(fun(is),atom(rel(activity),var(space)),data(earlyChildhood)),expr(fun(equal),expr(fun(count),atom(var(buildingStorey))),data(1)),expr(fun(is),atom(rel(activity),var(space)),data(sleeping)))),then(expr(rulestatement(expr(fun(is),expr(fun(forEach),atom(rel(activity),var(space))),data(sleeping))),appliedstatement(and(obligation(expr(fun(has),atom(var(space)),data(smokeDetector))),obligation(expr(fun(is),atom(var(smokeDetector)),data(supplementary))),obligation(expr(fun(complyWith),atom(var(smokeDetector)),data(nzs_4512)))))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.2.0.b.1,"2.2.2 In addition to Paragraph 2.2.1, the fire safety systems required for firecells in early childhood centres shall be as follows: Where the escape height of the early childhood centre is greater than 2.0 m, a Type 7 system shall be installed throughout the building.","if(and(expr(fun(is),atom(rel(activity),var(space)),data(earlyChildhood)),expr(fun(greaterThan),atom(rel(escapeHeight),var(space)),data(baseUnit(kind(metre)),value(2.0))))),then(obligation(expr(fun(is),atom(rel(fireSafetySystem),var(building)),data(type7))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.2.0.c.1,"2.2.2 In addition to Paragraph 2.2.1, the fire safety systems required for firecells in early childhood centres shall be as follows: If the early childhood centre is not located on the ground floor at least two separate places of safety shall be provided. Each place of safety shall be separated with fire separations designed to the property rating and have direct access to a safe path or final exit.","if(and(expr(fun(is),atom(rel(activity),var(space)),data(earlyChildhood)),expr(fun(define),atom(rel(elevation),var(groundLevel)),data(elev1)),expr(fun(greaterThan),atom(rel(elevation),var(space)),data(elev1)))),then(and(obligation(expr(fun(greaterThanEqual),expr(fun(count),atom(var(placeOfSafety))),data(2))),obligation(expr(fun(has),atom(var(placeOfSafety)),data(fireResistanceRating))),obligation(expr(fun(is),atom(rel(frrType),var(fireResistanceRating)),data(propertyRating))),or(obligation(expr(fun(to),atom(rel(directAccess),var(placeOfSafety)),data(safePath))),obligation(expr(fun(to),atom(rel(directAccess),var(placeOfSafety)),data(finalExit))))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.4.0.1,"2.2.4 For risk group VP firecells that require a fire sprinkler system (refer to Table 2.2d), the fire sprinkler system does not need to be extended throughout the remainder of the building where the risk group VP firecells are fire separated from the adjacent firecells. The fire separation between adjacent firecells is required to be provided with the greater of the property rating of the adjacent firecells (refer to Table 2.4).","if(and(expr(fun(is),atom(rel(riskGroup),var(space)),data(VP)),expr(fun(is),atom(var(space)),data(firecell)),obligation(expr(fun(has),atom(var(firecell)),data(fireSprinklerSystem))),obligation(expr(fun(complyWith),atom(rel(fireSafetySystem),var(firecell)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_2.2.d)))),then(and(permission(not(expr(fun(throughout),atom(rel(installation),var(fireSprinklerSystem)),data(building)))),obligation(expr(fun(is),atom(rel(type),var(fireResistanceRating)),data(propertyRating)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.6.0.1,"2.2.6 Where fire separations are not needed between different risk groups on the same floor level, the fire safety systems adopted for the firecell shall be those of the primary risk group (as defined in Paragraph 1.2.2).","if(and(expr(fun(has),atom(var(buildingStorey)),data(riskGroup)),expr(fun(greaterThan),expr(fun(count),atom(rel(riskGroup),var(buildingStorey))),data(1)),obligation(not(expr(fun(has),atom(var(riskGroup)),data(fireSeparation)))))),then(obligation(expr(fun(for),atom(rel(type),var(fireSafetySystem)),data(primaryRiskGroup))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.8.0.1,2.2.8 The alarm systems required in a building shall be configured to alert all building occupants in the event of fire,"if(and(obligation(expr(fun(has),atom(var(building)),data(fireAlarmSystem))),expr(fun(is),atom(rel(activation),var(fireAlarmSystem)),data(true)),expr(fun(has),atom(var(fireAlarmSystem)),data(alertingDevice)))),then(and(obligation(expr(fun(reach),atom(rel(output),var(alertingDevice)),data(occupant))),expr(fun(is),atom(rel(type),var(occupant)),data(all))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.2.9.0.1,2.2.9 In risk group SI alerting all building occupants in the event of fire is not required where it is deemed appropriate to alert management and staff without notifying other occupants.,"if(and(expr(fun(is),atom(rel(type),var(riskGroup)),data(SI)),expr(fun(has),atom(var(building)),data(fireAlarmSystem)),expr(fun(has),atom(var(fireAlarmSystem)),data(alertingDevice)),obligation(expr(fun(reach),atom(rel(output),var(alertingDevice)),data(occupant))),obligation(expr(fun(is),atom(rel(type),var(occupant)),data(staff))))),then(and(permission(expr(fun(reach),atom(rel(output),var(alertingDevice)),data(occupant))),permission(expr(fun(is),atom(rel(type),var(occupant)),data(all)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.1.0.1,"2.3.1 Unless explicitly stated otherwise in this Acceptable Solution, the fire resistance ratings (FRRs) that apply for each risk group shall be in accordance with Table 2.4.","if(not(expr(fun(complyWith),atom(rel(fireResistanceRating),var(riskGroup)),data(other)))),then(and(obligation(expr(fun(complyWith),atom(rel(fireResistanceRating),var(riskGroup)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_2.4))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.2.0.1,2.3.2 Structural elements in a single storey building need not be fire rated if FRRs are not required for any other reason.,"if(and(expr(fun(equal),expr(fun(count),atom(var(buildingStorey))),data(1)),not(expr(fun(is),atom(var(fireResistanceRating)),data(required))))),then(permission(not(expr(fun(is),atom(rel(element),var(structural)),data(fireRated)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.3.0.1,"2.3.3 If there is more than one risk group on one floor in the building, the highest required FRR shall be applied to common spaces and shared escape routes for that floor level.","if(and(expr(fun(greaterThan),expr(fun(count),atom(rel(riskGroup),var(buildingStorey))),data(1)),expr(rulestatement(expr(fun(in),expr(fun(forEach),atom(var(riskGroup))),data(buildingStorey))),appliedstatement(expr(fun(define),expr(fun(max),atom(rel(fireResistanceRating),var(riskGroup))),data(frr)))),or(expr(fun(is),atom(rel(type),var(space)),data(common)),expr(fun(is),atom(rel(type),var(space)),data(sharedEscapeRoute))))),then(obligation(expr(fun(is),atom(rel(fireResistanceRating),var(space)),data(frr))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.4.0.1,2.3.4 FRRs shall apply to the sides of primary elements and secondary elements which are exposed to fire.,"if(and(expr(fun(has),expr(fun(sideOf),atom(rel(element),var(building))),data(exposure)),expr(fun(is),atom(rel(type),var(exposure)),data(fire)))),then(obligation(expr(fun(has),expr(fun(sideOf),atom(rel(element),var(building))),data(fireResistanceRating))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.6.0.1,2.3.6 Floors shall have an FRR for exposure from the underside.,"if(expr(fun(is),atom(rel(element),var(building)),data(floor))),then(obligation(expr(fun(has),expr(fun(undersideOf),atom(var(floor))),data(fireResistanceRating))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.7.0.1,2.3.7 The FRR of a primary element integral with a fire separation shall be no less than that of the fire separation.,"if(and(expr(fun(is),atom(rel(element),var(building)),data(primary)),expr(fun(integralWith),atom(rel(element),var(building)),data(fireSeparation)),expr(fun(define),atom(rel(fireResistanceRating),var(fireSeparation)),data(frr)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(element),var(fireResistanceRating)),data(frr))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r2.3.11.0.1,2.3.11 Structural framing members connected to building elements with an FRR shall be rated at no less than the building elements to which they are connected. Alternatively their connections and supports shall be designed so that their collapse during fire will not cause collapse of the fire rated elements.,"then(obligation(expr(fun(greaterThanEqual),atom(rel(fireResistanceRating),var(structuralFramingMember)),data(frr))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.1.0.1,3.1.1 All buildings shall have means of escape from fire which include escape routes. An escape route (see Figure 3.1) shall provide protection to any occupant escaping to a safe place from a fire within a building.,"if(and(expr(fun(in),atom(var(fire)),data(building)),expr(fun(has),atom(var(building)),data(occupant)))),then(and(obligation(expr(fun(has),atom(var(occupant)),data(meansOfEscape))),obligation(expr(fun(include),atom(var(meansOfEscape)),data(escapeRoute))),obligation(expr(fun(to),atom(var(escapeRoute)),data(safePlace)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.2.0.1,"3.1.2 The components of an escape route, in ascending order of protection, are the: a) Open paths, and b) Exitways (these may comprise of smoke lobbies and safe paths), and c) Final exits (see Figure 3.1).","if(and(and(expr(fun(include),atom(rel(component),var(escapeRoute)),data(openPath)),expr(fun(include),atom(rel(component),var(escapeRoute)),data(exitway)),expr(fun(include),atom(rel(component),var(escapeRoute)),data(finalExit))),expr(fun(define),atom(rel(degreeOfProtection),var(openPath)),data(p1)),expr(fun(define),atom(rel(degreeOfProtection),var(exitways)),data(p2)),expr(fun(define),atom(rel(degreeOfProtection),var(finalExit)),data(p3)))),then(and(obligation(expr(fun(lessThan),atom(var(p1)),data(p2))),obligation(expr(fun(lessThan),atom(var(p2)),data(p3))),expr(fun(greaterThan),expr(fun(count),atom(rel(component),var(escapeRoute))),data(1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.2.0.2,"3.1.2 The components of an escape route, in ascending order of protection, are the: Exitways (these may comprise of smoke lobbies and safe paths)","if(expr(fun(is),atom(rel(component),var(escapeRoute)),data(exitway))),then(or(obligation(expr(fun(is),atom(var(exitway)),data(smokeLobby))),obligation(expr(fun(is),atom(var(exitway)),data(safePath))),and(obligation(expr(fun(is),atom(var(exitway)),data(smokeLobby))),obligation(expr(fun(is),atom(var(exitway)),data(safePath))))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.2.0.3,"3.1.2 The components of an escape route, in ascending order of protection, are the: a) Open paths, and b) Exitways (these may comprise of smoke lobbies and safe paths), and c) Final exits (see Figure 3.1).","if(and(expr(fun(define),atom(rel(origin),var(escapeRoute)),data(e1)),expr(fun(define),atom(rel(destination),var(escapeRoute)),data(e2)),expr(fun(define),atom(rel(degreeOfProtection),var(e1)),data(p1)),expr(fun(define),atom(rel(degreeOfProtection),var(e2)),data(p2)))),then(obligation(expr(fun(greaterThan),atom(var(p2)),data(p1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.3.0.1,"3.1.3 Provided the allowable lengths of open paths are not exceeded, an escape route may comprise only an open path and final exit.","if(and(expr(fun(define),atom(rel(length),var(openPath)),data(e1)),expr(fun(complyWith),atom(rel(length),var(openPath)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_3.2)))),then(and(permission(expr(fun(include),atom(rel(component),var(escapeRoute)),data(openPath))),permission(expr(fun(include),atom(rel(component),var(escapeRoute)),data(finalExit)))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.4.0.1,3.1.4 Escape routes shall comply with NZBC D1.,"if(expr(fun(in),atom(var(escapeRoute)),data(building))),then(obligation(expr(fun(complyWith),atom(var(escapeRoute)),data(nzbc_d1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.1.4.0.2,"Ramps, stairs, ladders, landings, handrails, doors, vision panels and openings shall comply with Acceptable Solution D1/AS1.","if(or(expr(fun(is),atom(rel(element),var(building)),data(ramp)),expr(fun(is),atom(rel(element),var(building)),data(stair)),expr(fun(is),atom(rel(element),var(building)),data(ladder)),expr(fun(is),atom(rel(element),var(building)),data(landing)),expr(fun(is),atom(rel(element),var(building)),data(handrail)),expr(fun(is),atom(rel(element),var(building)),data(door)),expr(fun(is),atom(rel(element),var(building)),data(visionPanel)),expr(fun(is),atom(rel(element),var(building)),data(opening)))),then(obligation(expr(fun(complyWith),atom(rel(element),var(building)),data(nzbc_d1_as1))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r3.2.1.0.1,"3.2.1 Except where Paragraph 3.13 allows the use of single escape routes, every occupied space in a building shall be served by two or more escape routes (see Figure 3.2).","if(and(expr(fun(define),expr(fun(count),atom(var(escapeRoute))),data(n1)),expr(fun(greaterThan),atom(var(n1)),data(1)),expr(fun(complyWith),atom(var(n1)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(3.13)))),then(expr(rulestatement(expr(fun(greaterThanEqual),expr(fun(forEach),atom(rel(occupantLoad),var(space))),data(1))),appliedstatement(obligation(expr(fun(greaterThanEqual),expr(fun(count),atom(var(escapeRoute))),data(2))))))"
lrml/NZ_NZBC-CAS2#1.1.lrml,r4.1.1.0.1,"4.1.1 Adjoining firecells are required to be fire separated from each other by the highest: a) Life rating specified in Paragraph 2.3 if both firecells are under common ownership, or b) Property rating specified in Paragraph 2.3 if both firecells are under different ownership","if(and(expr(fun(adjoin),atom(var(space1)),data(space2)),expr(fun(is),atom(var(space1)),data(firecell)),expr(fun(is),atom(var(space2)),data(firecell)),expr(fun(define),atom(rel(owner),var(space1)),data(owner1)),expr(fun(define),atom(rel(owner),var(space2)),data(owner2)))),then(and(expr(rulestatement(expr(expr(fun(max),atom(rel(rating),var(fireSeparation))))),appliedstatement(or(and(obligation(expr(fun(is),atom(rel(rating),var(fireSeparation)),data(lifeRating))),expr(fun(equal),atom(var(owner1)),data(owner2))),and(expr(fun(is),atom(rel(rating),var(fireSeparation)),data(propertyRating)),not(expr(fun(equal),atom(var(owner1)),data(owner2))))))),expr(fun(asPer),atom(var(lifeRating)),data(rule)),expr(fun(asPer),atom(var(propertyRating)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(2.3.0))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r1.0.1.0.1,1.0.1 This acceptable solution applies to below ground and above ground piped water supply systems.,"if(or(expr(fun(is),atom(var(pipedWaterSupplySystem)),data(belowGround)),expr(fun(is),atom(var(pipedWaterSupplySystem)),data(aboveGround)))),then(obligation(expr(fun(complyWith),atom(var(pipedWaterSupplySystem)),data(nzbc_g12_as1))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r2.1.1.0.1,2.1.1 Components of the water supply system shall not contaminate potable water.,"if(expr(fun(equal),atom(var(pipedWaterSupplySystem)),data(TRUE))),then(prohibition(not(expr(fun(contaminate),atom(var(waterSupplyComponents)),data(potableWater)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r2.2.1.0.1,2.2.1 Pipe and pipe fitting materials shall comply with Table 1.,"if(expr(fun(equal),atom(var(pipedWaterSupplySystem)),data(TRUE))),then(and(obligation(expr(fun(complyWith),atom(var(pipeMaterials)),data(nzbc_g12_as1_t_1))),obligation(expr(fun(complyWith),atom(var(pipeFittingMaterials)),data(nzbc_g12_as1_t_1)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.4.1.0.1,3.4.1 Backflow protection shall be provided where it is possible for water or contaminants to backflow into the potable water supply system.,"if(expr(fun(canBackflowInto),atom(var(waterOrContaminants)),data(potableWaterSupplySystem))),then(obligation(expr(fun(equal),atom(var(backflowProtection)),data(provided))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.4.5.0.1,3.4.5 The selection of the appropriate backflow protection for the cross connection hazard is given in Table 2.,"if(expr(fun(equal),atom(var(crossConnectionHazard)),data(TRUE))),then(permission(expr(fun(selectedFrom),atom(var(backflowProtection)),data(nzbc_g12_as1_t_2))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.4.6.0.1,3.4.6 All backflow prevention devices must be testable in service to verify effective performance.,"if(expr(fun(equal),atom(var(backflowProtection)),data(TRUE))),then(obligation(expr(fun(is),atom(var(backflowProtectionDevices)),data(testableInService))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.5.2.0.1,3.5.2 To ensure the air gap distance is maintained the overflow pipe discharge flow rate shall be no less than the inlet pipe flow rate.,"if(expr(fun(equal),atom(var(pipedWaterSupplySystem)),data(TRUE))),then(obligation(not(expr(fun(lessThan),atom(var(overflowPipeDischargeFlowRate)),data(inletPipeFlowRate)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.5.4.0.1,"3.5.4 Where any fixture or tank has more than one supply pipe, the air gap separation shall be the greater of 25 mm or twice the sum of the inlet pipe diameters and shall also comply with Paragraph 3.5.2.","if(expr(fun(hasMoreThan),atom(var(fixtureortank)),data(1supplyPipe))),then(and(obligation(expr(fun(equal),expr(fun(max),atom(var(25mm,2xsum(inletPipeDiameters)))),data(airGapSeparation))),obligation(expr(fun(complyWith),atom(var(airGapSeparation)),data(nzbc_g12_as1_3.5.2)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.6.2.0.1.a.1,3.6.2 Manufacture Backflow prevention devices shall be manufactured as follows: a) Reduced pressure zone devices to AS/NZS 2845.1 Section 12 (see Figure 2 (a)),"if(expr(fun(is),atom(var(backflowPreventionDevice)),data(reducedPressureZoneDevice))),then(obligation(expr(fun(complyWith),atom(var(reducedPressureZoneDevice)),data(nzs_2845.1_section_12))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.6.2.0.1.b.1,3.6.2 Manufacture Backflow prevention devices shall be manufactured as follows: Double check valve devices to AS/NZS 2845.1 Section 10 (see Figure 2 (b)),"if(expr(fun(is),atom(var(backflowPreventionDevice)),data(doubleCheckValveDevice))),then(obligation(expr(fun(complyWith),atom(var(doubleCheckValveDevice)),data(nzs_2845.1_section_10))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.6.2.0.1.c.1,"3.6.2 Manufacture Backflow prevention devices shall be manufactured as follows: Pressure type vacuum breakers to AS/NZS 2845.1 Section 9, (see Figure 2 (c))","if(expr(fun(is),atom(var(backflowPreventionDevice)),data(pressureTypeVacuumBreaker))),then(obligation(expr(fun(complyWith),atom(var(pressureTypeVacuumBreaker)),data(nzs_2845.1_section_9))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.6.2.0.1.d.1,"Backflow prevention devices shall be manufactured as follows: Atmospheric vacuum breakers to AS/NZS 2845.1 Section 4 for atmospheric vacuum breakers (see Figure 2 (d)), and Section 5 for hose tap vacuum breakers.","if(expr(fun(is),atom(var(backflowPreventionDevice)),data(atmosphericVacuumBreaker))),then(obligation(expr(fun(complyWith),atom(var(atmosphericVacuumBreaker)),data(nzs_2845.1_section_4))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.6.2.0.1.e.1,3.6.2 Manufacture Backflow prevention devices shall be manufactured as follows: Section 5 for hose tap vacuum breakers.,"if(expr(fun(is),atom(var(backflowPreventionDevice)),data(hoseTapVacuumBreaker))),then(obligation(expr(fun(complyWith),atom(var(hoseTapVacuumBreaker)),data(nzs_2845.1_section_5))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.7.2.0.1.1,3.7.2 Reduced pressure zone devices shall be tested and verified as meeting the test requirements of AS 2845.3 or NZ backflow testing standard.,"if(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(reducedPressureZoneDevice))),then(or(obligation(expr(fun(complyWith),atom(var(reducedPressureZoneDevice)),data(as_2845.3))),obligation(expr(fun(complyWith),atom(var(reducedPressureZoneDevice)),data(NZ_backflowTestingStandard)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.7.2.0.1.2,3.7.2 Double check valves shall be tested and verified as meeting the test requirements of AS 2845.3 or NZ backflow testing standard.,"if(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(doubleCheckValve))),then(or(obligation(expr(fun(complyWith),atom(var(doubleCheckValve)),data(as_2845.3))),obligation(expr(fun(complyWith),atom(var(doubleCheckValve)),data(NZ_backflowTestingStandard)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r3.7.2.0.1.3,3.7.2 Pressure vacuum breakers shall be tested and verified as meeting the test requirements of AS 2845.3 or NZ backflow testing standard.,"if(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(pressureVacuumBreaker))),then(or(obligation(expr(fun(complyWith),atom(var(pressureVacuumBreaker)),data(as_2845.3))),obligation(expr(fun(complyWith),atom(var(pressureVacuumBreaker)),data(NZ_backflowTestingStandard)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.1.1.0.1,"5.1.1 To ensure the health and safety of people in the event of the water main supply being interrupted, buildings having the classification of Community Care (e.g. hospitals, old people's homes, prisons) shall be provided with cold water storage of no less than 50 litres per person.","if(expr(fun(equal),atom(var(buildingClassification)),data(communityCare))),then(obligation(not(expr(fun(lessThan),atom(var(coldWaterStorage)),data(50ltrpp)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.2.1.0.1,Water tanks in roof spaces shall be located and supported as detailed in Figure 4.,"if(expr(fun(in),atom(var(waterTank)),data(roofSpace))),then(and(obligation(expr(fun(complyWith),atom(rel(location),var(waterTank)),data(nzbc_g12_as1_figure_4))),obligation(expr(fun(complyWith),atom(rel(support),var(waterTank)),data(nzbc_g12_as1_figure_4)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.2.4.0.1.a.1,5.2.4 Covers Covers shall be provided to: a) Potable water tanks to prevent contamination and the entry of vermin,"if(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(potableWaterTank))),then(obligation(expr(fun(has),atom(var(potableWaterTank)),data(cover))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.2.4.0.1.b.1,Covers shall be provided to: All tanks located in roof spaces to prevent condensation damaging building elements.,"if(and(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(waterTank)),expr(fun(locatedIn),atom(rel(location),var(waterTank)),data(roofSpace)))),then(obligation(expr(fun(has),atom(var(waterTank)),data(cover))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.2.5.0.1,Covers to water tanks shall be removable or shall contain a covered opening to allow access for inspection and maintenance. A minimum height clearance of 350 mm above the opening is necessary for easy access.,"if(expr(fun(has),atom(var(waterTank)),data(cover))),then(or(obligation(expr(fun(is),atom(var(cover)),data(removable))),and(obligation(expr(fun(has),atom(var(cover)),data(coveredOpening))),obligation(expr(fun(has),atom(var(coveredOpening)),data(350mmClearanceAbove))))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.2.7.0.1,The method illustrated in Figure 4 is acceptable for water tanks up to 150 litre capacity and the maximum height to breadth ratio of 1:1.,"if(and(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(waterTank)),expr(fun(lessThanEqual),atom(var(waterTank)),data(150ltrCapacity)),not(not(fun(greaterThan),atom(var(waterTank)),data(1))))),then(obligation(expr(fun(complyWith),atom(rel(support),var(waterTank)),data(nzbc_g12_as1_figure_4))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.3.1.0.1,5.3.1 Pipe sizing Pipes shall be sized: a) To achieve the flow rates given in Table 3,"if(expr(fun(has),atom(var(WaterSupplySystem)),data(pipe))),then(and(obligation(expr(fun(complyWith),atom(rel(size),var(pipe)),data(nzbc_g12_as1_t_3))),obligation(expr(fun(complyWith),atom(rel(flowRate),var(pipe)),data(nzbc_g12_as1_t_3)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.3.1.0.1.b.1,5.3.1 Pipe sizing Pipes shall be sized: Using the sizes given in Table 4.,"if(expr(fun(equal),atom(rel(pipe),var(WaterSupplySystem)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(size),var(pipe)),data(nzbc_g12_as1_t_4))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r5.4.3.0.1,5.4.3 Provision shall be made for draining storage water heaters in accordance with Figure 7.,"if(expr(fun(equal),atom(var(storageWaterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(drain),var(storageWaterHeater)),data(nzbc_g12_as1_figure_7))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.1.1.0.1,6.1.1 Water heaters shall comply with Table 5.,"if(expr(fun(equal),atom(var(waterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(waterHeater)),data(nzbc_g12_as1_t_5))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.2.1.0.1,"6.2.1 Storage water heaters shall be supplied with cold water at a pressure not exceeding their working pressure by means of a: a) Water tank, b) Pressure reducing valve, c) Pressure limiting valve, or d) Mains pressure supply.","if(expr(fun(equal),atom(rel(type),var(waterHeater)),data(storageWaterHeater))),then(and(obligation(expr(fun(has),atom(var(storageWaterHeater)),data(coldWaterSupply))),obligation(expr(fun(lessThanEqual),atom(rel(pressure),var(coldWaterSupply)),data(workingPressure))),or(obligation(expr(fun(regulatedBy),atom(rel(workingPressure),var(coldWaterSupply)),data(waterTank))),obligation(expr(fun(regulatedBy),atom(rel(workingPressure),var(coldWaterSupply)),data(pressureReducingValve))),obligation(expr(fun(regulatedBy),atom(rel(workingPressure),var(coldWaterSupply)),data(pressureLimitingValve))),obligation(expr(fun(is),atom(var(coldWaterSupply)),data(mainsPressureSupply))))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.2.2.0.1,"6.2.2 Storage water heaters supplied by other than a water tank shall include a non-return valve as shown in Figures 7, 8, 9 and 10 to prevent the storage water heater emptying and hot water flowing into the cold water supply and thence from the cold water taps.","if(and(expr(fun(equal),atom(rel(type),var(waterHeater)),data(storageWaterHeater)),not(not(fun(equal),atom(var(waterSupply)),data(waterTank))))),then(and(obligation(expr(fun(has),atom(var(waterHeater)),data(nonReturnValve))),obligation(expr(fun(complyWith),atom(var(nonReturnValve)),and(data(nzbc_g12_as1_figure_7),data(nzbc_g12_as1_figure_8),data(nzbc_g12_as1_figure_9),data(nzbc_g12_as1_figure_10))))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.3.1.0.1,6.3.1 Electric and gas storage water heaters shall have their temperature controlled by a thermostat on each heating unit.,"if(or(expr(fun(equal),atom(rel(type),var(waterHeater)),data(electricStorageWaterHeater)),expr(fun(equal),atom(rel(type),var(waterHeater)),data(gasStorageWaterHeater)))),then(obligation(expr(fun(controlledBy),atom(var(waterHeaterTemperature)),data(thermostatOnEachHeatingUnit))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.3.2.0.1,6.3.2 Open vented storage water heaters shall have a vent pipe complying with Paragraph 6.8.,"if(expr(fun(equal),atom(rel(type),var(waterHeater)),data(openVentedStorageWaterHeater))),then(and(obligation(expr(fun(has),atom(var(waterHeater)),data(ventPipe))),obligation(expr(fun(complyWith),atom(var(ventPipe)),data(nzbc_g12_as1_6.8)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.3.3.0.1,"6.3.3 Valve vented (unvented) systems shall have: a) An expansion control valve b) A vacuum relief valve to prevent collapse of the storage water heater where it is not designed to withstand a full vacuum, and c) Valves complying with Table 6.","if(expr(fun(equal),atom(rel(type),var(waterHeaterSystem)),data(Valvevented(unvented)))),then(and(obligation(expr(fun(has),atom(var(waterHeaterSystem)),data(expansionControlValve))),obligation(expr(fun(has),atom(var(waterHeaterSystem)),data(vacuumReliefValve))),obligation(expr(fun(complyWith),atom(var(valve)),data(nzbc_g12_as1_t_6)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.4.2.0.1,6.4.2 Free outlet (push through) water heaters shall have a relief valve,"if(expr(fun(equal),atom(rel(type),var(waterHeater)),data(Freeoutlet(pushthrough)waterheaters))),then(obligation(expr(fun(has),atom(var(waterHeater)),data(reliefValve))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.5.1.0.1,6.5.1 Electric thermostats and energy cut-off devices shall comply with NZS 6214 or AS 1308.,"if(expr(fun(has),atom(var(waterHeaterSystem)),or(data(electricThermostat),data(energyCutoffDevice)))),then(obligation(expr(fun(complyWith),atom(var(electricThermostatAndEnergyCutoffDevice)),or(data(nzs_6214),data(as_1308)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.5.2.0.1,"6.5.2 Energy cut-off devices shall be designed to: a) Be reset manually, and b) Disconnect the energy supply before the water temperature exceeds 95°C.","then(and(obligation(expr(fun(can),atom(var(EnergyCutoffDevice)),data(beResetManually))),obligation(expr(fun(can),atom(var(EnergyCutoffDevice)),data(Disconnecttheenergysupplybeforethewatertemperatureexceeds95¬∞C)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.6.2.0.1,"6.6.2 Pressure relief valves and expansion control valves shall have: a) A flow rate capacity of no less than the rate of cold water supply, and b) A maximum pressure rating of no more than the working pressure of the hot water storage vessel.","if(expr(fun(has),atom(var(waterHeaterSystem)),or(data(pressureReliefValve),data(expansionControlValve)))),then(and(obligation(expr(fun(has),atom(var(pressureReliefValveOrExpansionControlValve)),data(aFlowRateCapacityOfNoLessThanTheRateOfColdWaterSupply))),obligation(expr(fun(has),atom(var(pressureReliefValveOrExpansionControlValve)),data(aMaximumPressureRatingOfNoMoreThanTheWorkingPressureOfTheHotWaterStorageVessel)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.6.3.0.1,"6.6.3 Expansion control valves shall have a pressure rating of no less than that of the water supply pressure to the storage water heater, but less than the pressure rating of the relief valve.","if(and(expr(fun(is),atom(rel(type),var(waterHeater)),data(storageWaterHeater)),expr(fun(has),atom(var(waterHeater)),data(expansionControlValve)))),then(and(obligation(not(expr(fun(lessThan),expr(fun(pressureRating),atom(var(expansionControlValve))),data(theWaterSupplyPressureToTheStorageWaterHeater)))),obligation(expr(fun(lessThan),expr(fun(pressureRating),atom(var(expansionControlValve))),data(pressureRatingOfTheReliefValve)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.6.4.0.1,6.6.4 The following valves shall have an energy rating greater than that of the energy sources heating the water: Temperature/pressure relief valve,"if(expr(fun(has),atom(var(waterHeater)),data(temperaturePressureReliefValve))),then(obligation(expr(fun(greaterThan),atom(rel(energyRating),var(temperaturePressureReliefValve)),data(energyRating(energySourcesHeatingTheWater)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.6.4.0.1.b.1,6.6.4 The following valves shall have an energy rating greater than that of the energy sources heating the water: Pressure relief valve.,"if(expr(fun(has),atom(var(waterHeater)),data(pressureReliefValve))),then(obligation(expr(fun(greaterThan),atom(rel(energyRating),var(pressureReliefValve)),data(energyRating(energySourcesHeatingTheWater)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.6.5.0.0.b.1,Pressure relief valves shall be located no further than 1 metre from the storage water heater,"if(expr(fun(has),atom(var(waterHeater)),data(pressureReliefValve))),then(obligation(not(expr(fun(greaterThan),atom(var(pressureReliefValveLocation)),data(1metreFromTheStorageWaterHeater)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.7.1.0.1,"6.7.1 Relief valve drains (see Figures 12 and 13) shall be fitted to: a) Temperature/pressure relief valves, Pressure relief valves, and c) Expansion control valves.","if(expr(fun(has),atom(var(waterHeater)),or(data(temperaturePressureReliefValve),data(PressureReliefValve),data(expansionControlValve)))),then(obligation(expr(fun(has),atom(var(waterHeater)),data(reliefValveDrain))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.8.1.0.1,6.8.1 Vent pipes for open vented storage water heaters shall comply with the provisions of Paragraphs 6.8.2 and 6.8.3.,"if(and(expr(fun(equal),atom(rel(type),var(waterHeater)),data(openVentedStorageWaterHeater)),expr(fun(has),atom(var(waterHeater)),data(ventPipe)))),then(obligation(expr(fun(complyWith),atom(var(ventPipe)),and(data(nzbc_g12_as1_6.8.2),data(nzbc_g12_as1_6.8.3)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.9.1.0.1,"6.9.1 NZS 4603 is an acceptable solution for open vented low pressure storage water heaters, but may exceed the performance criteria of NZBC G12.","if(and(expr(fun(is),atom(rel(type),var(waterHeater)),data(openVentedLowPressureStorageWaterHeater)),expr(fun(complyWith),atom(var(openVentedLowPressureStorageWaterHeater)),data(nzs_4603)))),then(permission(expr(fun(complyWith),atom(var(openVentedLowPressureStorageWaterHeater)),data(nzbc_g12_as1))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.10.1.0.1,"6.10.1 NZS 4607 is an acceptable solution for unvented (valve vented) storage water heaters, but may exceed the performance criteria of NZBC G12.","if(and(expr(fun(is),atom(rel(type),var(waterHeater)),data(unventedValveVentedStorageWaterHeater)),expr(fun(complyWith),atom(var(unventedValveVentedStorageWaterHeater)),data(nzs_4607)))),then(permission(expr(fun(complyWith),atom(var(unventedValveVentedStorageWaterHeater)),data(nzbc_g12_as1))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.11.1.0.1,6.11.1 Water heaters shall be installed in accordance with the manufacturer's instructions.,"if(expr(fun(equal),atom(rel(installed),var(waterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(installation),var(waterHeater)),data(manufacturersInstructions))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.12.1.0.1,6.12.1 The diameter of hot water supply pipes from storage water heaters and to sanitary fixtures shall be no less than those required by Table 4.,"if(and(expr(fun(is),atom(rel(type),var(waterHeater)),data(staorageWaterHeater)),expr(fun(has),atom(var(waterHeater)),data(hotWaterSupplyPipes)),expr(fun(into),atom(var(hotWaterSupplyPipes)),data(sanitaryFixtures)))),then(obligation(not(expr(fun(lessThan),expr(fun(diameter),atom(var(hotWaterSupplyPipes))),data(nzbc_g12_as1_t_4)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.13.1.0.1,"6.13.1 Wet-back water heaters shall be: a) Connected only to open vented storage water heaters, or a water storage vessel (see Figure 15), and b) Made of copper.","if(expr(fun(is),atom(rel(type),var(waterHeater)),data(wetbackWaterHeater))),then(and(or(obligation(expr(fun(connectedTo),atom(var(waterHeater)),data(openVentedStorageWaterHeater))),obligation(expr(fun(connectedTo),atom(var(waterHeater)),data(waterStorageVessel)))),obligation(expr(fun(equal),atom(var(waterHeaterMaterial)),data(copper)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.13.2.0.1,6.13.2 Copper pipework shall be used between the wet-back and the water tank.,"if(and(expr(fun(is),atom(rel(type),var(waterHeater)),data(wetbackWaterHeater)),expr(fun(has),atom(var(waterHeater)),data(waterTank)))),then(obligation(expr(fun(is),atom(rel(material),var(pipe)),data(copper))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.14.3.0.1,"6.14.3 Legionella bacteria Irrespective of whether a mixing device is installed, the storage water heater control thermostat shall be set at a temperature of not less than 60°C to prevent the growth of Legionella bacteria.","if(expr(fun(is),atom(rel(type),var(waterHeater)),data(storageWaterHeater))),then(obligation(not(expr(fun(lessThan),atom(var(waterHeaterControlThermostat)),data(60¬∞C)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r6.14.4.0.1,6.14.4 The water temperatures within flow and return circulating systems shall be maintained at not less than 60°C.,"if(expr(fun(is),atom(rel(type),var(waterHeater)),data(flowAndReturnCirculatingSystem))),then(obligation(not(expr(fun(lessThan),atom(rel(temperature),var(water)),data(60degC)))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r7.0.1.0.1,7.0.1 Water supply systems shall be installed to comply with the durability requirements of NZBC B2.,"if(expr(fun(equal),atom(rel(installed),var(waterSupplySystem)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(waterSupplySystem)),data(nzbc_b2))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r7.1.1.0.1,7.1.1 Pipes and their supports shall be electrochemically compatible.,"if(expr(fun(equal),atom(var(pipedWaterSupplySystem)),data(TRUE))),then(expr(fun(electrochemicallyCompatibleWith),atom(var(pipes)),data(pipeSupports)))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r7.3.3.0.1,"Pipes penetrating concrete or masonry elements shall be either wrapped with a flexible material, or passed through a sleeve or duct, to permit free movement for expansion and contraction.","if(and(expr(fun(equal),atom(var(pipedWaterSupplySystem)),data(TRUE)),expr(fun(penetrate),atom(var(pipes)),or(data(concrete),data(masonry))))),then(or(obligation(expr(fun(wrappedIn),atom(var(pipe)),data(flexibleMaterial))),obligation(expr(fun(passesThrough),atom(var(pipe)),or(data(sleeve),data(duct))))))"
lrml/NZ_NZBC-G12AS1#3.12.lrml,r7.4.1.0.1,7.4.1 An acceptable method of installing uPVC pipe is given in NZS 7643.,"if(expr(fun(has),atom(var(pipedWaterSupplySystem)),data(uPVCPipe))),then(permission(expr(fun(complyWith),atom(rel(installation),var(uPVCPipe)),data(nzs_7643))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r1.0.1.0.1,"1.0.1 This Acceptable Solution is limited to buildings and sitework having a catchment area of no more than 0.25 hectares and which are: a) Free from a history of flooding, b) Not adjacent to a watercourse, c) Not located in low lying area, and d) Not located in a secondary flow path.","if(and(expr(fun(lessThanEqual),atom(var(catchmentArea)),data(0.25ha)),not(not(fun(equal),atom(var(catchmentArea)),data(floodprone))),not(not(fun(adjacent),atom(rel(location),var(catchmentArea)),data(watercourse))),not(not(fun(equal),atom(var(catchmentArea)),data(lowLying))),not(not(fun(within),atom(rel(location),var(catchmentArea)),data(secondaryFlowPath))))),then(and(obligation(expr(fun(complyWith),atom(var(building)),data(nzbc_e1))),expr(fun(complyWith),atom(var(sitework)),data(nzbc_e1))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r2.0.1.0.1,2.0.1 Suspended floors and slabs on ground shall be at least 150 mm above the finished level of the surrounding ground immediately adjacent to the building,"if(and(expr(fun(equal),atom(rel(elevation),var(suspendedFloor)),data(z1)),expr(fun(equal),atom(rel(elevation),var(slabOnGround)),data(z2)),expr(fun(equal),atom(rel(elevation),var(ground)),data(z3)))),then(and(obligation(expr(fun(greaterThanEqual),atom(var(z1)),data(z3+150mm))),expr(fun(greaterThanEqual),atom(var(z2)),data(z3+150mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r2.0.1.0.1.a.1,"2.0.1 Suspended floors and slabs on ground shall be at least 150 mm above the finished level of the surrounding ground immediately adjacent to the building, and: a) For sites level with or above the road, no less than 150 mm above the road crown on at least one cross-section through the building and roadway (see Figure 1).","if(and(expr(fun(equal),atom(rel(elevation),var(suspendedFloor)),data(z1)),expr(fun(equal),atom(rel(elevation),var(slabOnGround)),data(z2)),expr(fun(equal),atom(rel(elevation),var(site)),data(z3)),expr(fun(equal),atom(rel(elevation),var(road)),data(z4)),expr(fun(greaterThanEqual),atom(var(z3)),data(z4)),expr(fun(equal),atom(rel(elevation),var(roadCrown)),data(z5)))),then(and(obligation(expr(fun(greaterThanEqual),atom(var(z1)),data(z5+150mm))),expr(fun(greaterThanEqual),atom(var(z2)),data(z5+150mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r2.0.1.0.1.b.1,"2.0.1 Suspended floors and slabs on ground shall be at least 150 mm above the finished level of the surrounding ground immediately adjacent to the building, and: For sites below the road, no less than 150 mm above the lowest point on the site boundary (see Figure 2).","if(and(expr(fun(equal),atom(rel(elevation),var(suspendedFloor)),data(z1)),expr(fun(equal),atom(rel(elevation),var(slabOnGround)),data(z2)),expr(fun(equal),atom(rel(elevation),var(site)),data(z3)),expr(fun(equal),atom(rel(elevation),var(road)),data(z4)),expr(fun(lessThan),atom(var(z3)),data(z4)),expr(fun(equal),atom(rel(elevation),var(lowestPointOnSiteBoundary)),data(z5)))),then(and(obligation(expr(fun(greaterThanEqual),atom(var(z1)),data(z5+150mm))),expr(fun(greaterThanEqual),atom(var(z2)),data(z5+150mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.1.1.0.1,3.1.1 Pipe materials shall comply with the standards given in Table 1.,"if(expr(fun(equal),atom(rel(material),var(pipe)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(material),var(pipe)),data(t_1))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.2.1.0.1,No drain shall have an internal diameter of less than 85 mm.,"if(expr(fun(equal),atom(rel(type),var(drain)),data(stormwater))),then(obligation(expr(fun(greaterThanEqual),atom(rel(internalDiameter),var(drain)),data(85mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.2.2.0.1.1,"3.2.2 Figure 3 provides a method for selecting the correct pipe size for a calculated modified catchment area, given as: Modified catchment area = 0.01 Al, where A = area being drained comprising plan roof area (m2) plus paved area (m2). Paved area includes paving blocks, concrete, asphalt or metalled surfaces. l = rainfall intensity for a storm with a 10% probability of occurring annually and a 10 minute duration (mm/hr).","if(and(expr(fun(equal),atom(rel(area),var(planRoof)),data(a1)),expr(fun(equal),atom(rel(area),var(pavedArea)),data(a2)),expr(fun(equal),atom(var(rainfallIntensity)),data(i1)))),then(and(obligation(expr(fun(equal),atom(var(modifiedCatchmentArea)),data(0.01*((a1+a2)*i1)))),permission(expr(fun(equal),atom(rel(gradient),var(drain)),data(eval(figure_3))))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.3.1.0.1.1, 3.3.1 Drains shall be laid on a uniform line and gradient between points of access (see Paragraph 3.7).,"if(and(expr(fun(inBetween),atom(rel(section),var(drain)),and(data(accessPoint_1),data(accessPoint_2))),expr(fun(adjacent),atom(var(AccessPoint_1)),data(AccessPoint_2)))),then(expr(fun(of),expr(fun(forEach),atom(var(section))),data(drain)))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.3.1.0.1.2.1,he change in direction of a drain shall not exceed 90° at any point,"if(expr(fun(include),atom(var(drain)),data(changeInDirection))),then(obligation(expr(fun(lessThan),atom(var(changeInDirection)),data(90°))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.3.1.0.1.2.2,"The change in direction of a drain shall not exceed 90° at any point, and where practical should be kept to less than 45° as illustrated in Figure 4.","if(expr(fun(is),atom(var(changeInDirection)),data(practical))),then(obligation(expr(fun(lessThan),atom(rel(changeInDirection),var(drain)),data(45°))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.3.2.0.1,"3.3.2 Where two drains intersect, the directions of flow as shown in Figure 5 shall be at an angle of 60° or less.","if(expr(fun(include),atom(var(drain)),data(drainIntersection))),then(obligation(expr(fun(lessThanEqual),atom(rel(angle),var(directionOfFlow)),data(60°))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.4.1.0.1,3.4.1 Minimum acceptable gradients for surface water drains are given in Table 2.,"if(expr(fun(equal),atom(var(surfaceWaterDrain)),data(TRUE))),then(expr(fun(complyWith),expr(fun(min),atom(rel(gradient),var(surfaceWaterDrain))),data(t_2)))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.4.2.0.1," 3.4.2 Restricted fall to outlet Where the surface water sewer, road channel or other outfall is at too high a level to allow the gradient required by Table 2, the bubble-up chamber system shown in Figures 6 and 7 may be used provided that","if(expr(fun(greaterThan),atom(rel(elevation),var(outfall)),data(eval(t_2)))),then(permission(expr(fun(has),atom(var(drain)),data(bubbleupChamber))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.4.2.0.1.a.1,"3.4.2 Restricted fall to outlet Where the surface water sewer, road channel or other outfall is at too high a level to allow the gradient required by Table 2, the bubble-up chamber system shown in Figures 6 and 7 may be used provided that: The ground level adjacent to any downpipe discharging to the bubble-up chamber is at least 150 mm higher than the level of the top of the chamber outlet.","if(and(expr(fun(has),atom(var(drain)),data(bubbleupChamber)),expr(fun(dischargeInto),atom(var(downpipe)),data(bubbleupChamber)),expr(fun(adjacent),atom(var(ground)),data(downpipe)),expr(fun(equal),atom(rel(elevation),var(ground)),data(h1)),expr(fun(equal),atom(rel(topOfOutlet),var(bubbleupChamber)),data(x)),expr(fun(equal),atom(rel(elevation),var(x)),data(h2)),expr(fun(greaterThanEqual),atom(var(h1)),data(h2+150)))),then(permission(expr(fun(has),atom(var(drain)),data(bubbleupChamber))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.4.2.0.1.b.1,"3.4.2 Restricted fall to outlet Where the surface water sewer, road channel or other outfall is at too high a level to allow the gradient required by Table 2, the bubble-up chamber system shown in Figures 6 and 7 may be used provided that: The connections between the drain and downpipes are sealed.","if(permission(expr(fun(has),atom(var(drain)),data(bubbleupChamber)))),then(and(obligation(expr(fun(inBetween),atom(var(connection)),and(data(drain),data(downpipe)))),expr(fun(is),atom(var(connection)),data(sealed))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.4.2.0.1.c.1,"3.4.2 Restricted fall to outlet Where the surface water sewer, road channel or other outfall is at too high a level to allow the gradient required by Table 2, the bubble-up chamber system shown in Figures 6 and 7 may be used provided that: The total chamber depth does not exceed 1.0 m.","if(permission(expr(fun(has),atom(var(drain)),data(bubbleupChamber)))),then(obligation(expr(fun(lessThanEqual),atom(rel(depth),var(bubbleupChamber)),data(1m))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.5.1.0.1,3.5.1 All joints in drains shall be watertight and prevent the infiltration of groundwater and the intrusion of tree roots.,"if(expr(fun(include),atom(var(drain)),data(joint))),then(and(obligation(expr(fun(equal),atom(rel(joint),var(drain)),data(watertight))),expr(fun(prevent),atom(rel(joint),var(drain)),data(groundwaterInfiltration)),expr(fun(prevent),atom(rel(joint),var(drain)),data(treeRootIntrusion))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.5.2.0.1,3.5.2 Acceptable jointing methods and the relevant standards are given in Table 3. Jointing of drains shall be subject to the tests called for in Paragraph 3.8.,"if(expr(fun(include),atom(var(drain)),data(joint))),then(and(obligation(expr(fun(complyWith),atom(var(drain)),data(t_3))),expr(fun(complyWith),atom(var(drain)),data(3.8.0.1))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.6.1.0.1,"3.6.1 All surface water, except that collected directly from a roof, shall enter the drain via a sump","if(expr(fun(collectedFrom),atom(var(surfaceWater)),data(roof))),then(obligation(expr(fun(equal),atom(var(drainInlet)),data(sump))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.6.1.0.1.a.1,"3.6.1 All surface water, except that collected directly from a roof, shall enter the drain via a sump which has: a) A grating, hinged or removable for maintenance access. The grating shall comprise at least 35% openings. The smaller dimension of any individual opening shall not exceed 35 mm","if(expr(fun(equal),atom(var(drainInlet)),data(sump))),then(and(obligation(expr(fun(include),atom(var(sump)),data(sumpGrating))),expr(fun(equal),atom(var(sumpGrating)),or(data(hinged),data(removable))),expr(fun(equal),atom(rel(opening),var(sumpGrating)),data(35%)),expr(fun(lessThanEqual),expr(fun(min),atom(rel(opening),var(sumpGrating))),data(35mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.6.1.0.1.b.1,"3.6.1 All surface water, except that collected directly from a roof, shall enter the drain via a sump which has: Capacity at the bottom for settlement of silt and debris","if(expr(fun(equal),atom(var(drainInlet)),data(sump))),then(obligation(expr(fun(include),atom(var(sump)),data(settlementCapacity))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.6.1.0.1.c.1,"3.6.1 All surface water, except that collected directly from a roof, shall enter the drain via a sump which has: A submerged (or trapped) outlet which prevents floatable solids entering the drain. ","if(expr(fun(equal),atom(var(drainInlet)),data(sump))),then(or(obligation(expr(fun(include),atom(var(sump)),data(submergedOutlet))),expr(fun(include),atom(var(sump)),data(trappedOutlet))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.1.0.1,3.7.1 Access for maintenance shall be provided on all drains,"if(expr(fun(equal),atom(var(drain)),data(TRUE))),then(obligation(expr(fun(include),atom(var(drain)),data(accessPoint))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.2.0.1.a.1,3.7.2 Points of access shall be spaced at no further than: a) 50 m where rodding points are used.,"if(expr(fun(equal),atom(var(accessPoint)),data(roddingPoint))),then(obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(accessPoint)),data(50m))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.2.0.1.b.1,"3.7.2 Points of access shall be spaced at no further than: 100 m where inspection points, inspection chambers or access chambers are used.","if(or(expr(fun(equal),atom(var(accessPoint)),data(inspectionPoint)),expr(fun(equal),atom(var(accessPoint)),data(inspectionChamber)),expr(fun(equal),atom(var(accessPoint)),data(accessChamber)))),then(obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(accessPoint)),data(100m))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.3.0.1.a.1,"3.7.3 Points of access are required at: Changes in direction of greater than 45°,","if(and(expr(fun(include),atom(var(drainDirection)),data(changeInDrainDirection)),expr(fun(greaterThan),atom(var(changeInDrainDirection)),data(45°)))),then(obligation(expr(fun(locatedAt),atom(var(accessPoint)),data(changeInDrainDirection))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.3.0.1.b.1,3.7.3 Points of access are required at: Changes in gradient of greater than 45°,"if(and(expr(fun(include),atom(var(drain)),data(changeInDrainGradient)),expr(fun(greaterThan),atom(var(changeInDrainGradient)),data(45°)))),then(obligation(expr(fun(locatedAt),atom(var(accessPoint)),data(changeInDrainGradient))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.3.0.1.c.1,"3.7.3 Points of access are required at: Junctions of drains other than a drain, serving a single downpipe, that is less than 2.0 m long.","if(and(expr(fun(include),atom(var(drain)),data(drainJunction)),not(not(fun(lessThan),atom(var(drainLength)),data(2m))),not(not(fun(equal),expr(fun(count),atom(var(downpipe))),data(1))))),then(obligation(expr(fun(locatedAt),atom(var(accessPoint)),data(drainJunction))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.4.0.1,3.7.4 Inspection chambers or access chambers (see Figures 11 and 12) shall be provided where changes in both gradient and direction occur and where either is greater than 22.5°.,"if(or(expr(fun(include),atom(var(drain)),data(changeInDrainGradient)),expr(fun(locatedAt),atom(var(changeInDrainGradient)),data(changeInDrainDirection)),expr(fun(greaterThan),atom(var(changeInDrainGradient)),data(22.5°)),expr(fun(greaterThan),atom(var(changeInDrainDirection)),data(22.5°)))),then(obligation(expr(fun(locatedAt),atom(var(accessPoint)),data(changeInDrainGradient))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.5.0.1,"3.7.5 Where the depth to the invert of the drain exceeds 1.0 m, an inspection chamber is not acceptable and an access chamber shall be used.","if(expr(fun(greaterThan),atom(rel(depth),var(drainInvert)),data(1m))),then(obligation(expr(fun(equal),atom(var(accessPoint)),data(accessChamber))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.6.0.1,3.7.6 Drain under buildings Any drain laid under a building shall be run in a straight line from one side to the other.,"if(expr(fun(beneath),atom(rel(section),var(drain)),data(building))),then(obligation(not(expr(fun(include),atom(var(section)),data(changeInDrainDirection)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.7.0.1,3.7.7 Access to a drain laid under a building shall be provided immediately outside the building. These points of access shall be located within 2.0 m of an exterior wall.,"if(expr(fun(beneath),atom(var(drain)),data(building))),then(and(obligation(expr(fun(immediatelyOutside),atom(var(accessPoint)),data(building))),expr(fun(lessThan),atom(var(accessPoint)),data(2m))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.8.0.1.1,3.7.8 Under a building the only acceptable inlets to a drain are from sealed roof-water downpipes,"if(expr(fun(beneath),atom(var(drainInlet)),data(building))),then(and(obligation(expr(fun(equal),atom(var(drainInlet)),data(downpipe))),expr(fun(equal),atom(var(drainInlet)),data(sealed))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.7.8.0.1.2,Access shall be provided to the drain via a sealed access point in the downpipe immediately above ground floor level.,"if(expr(fun(beneath),atom(var(drainInlet)),data(building))),then(and(obligation(expr(fun(equal),atom(var(accessPoint)),data(sealed))),expr(fun(immediatelyAbove),atom(var(accessPoint)),data(groundFloorLevel)),expr(fun(within),atom(var(accessPoint)),data(downpipe))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.8.1.0.1,3.8.1 Surface water drains shall be capable of passing one of the tests described in E1/VM1 Paragraph 8.0.,"if(expr(fun(equal),atom(rel(type),var(drain)),data(surfaceWater))),then(obligation(expr(fun(complyWith),atom(var(drain)),data(e1/vm1_paragraph_8.0))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.2.0.1,"3.9.2 Bedding and backfilling Figure 13 gives acceptable solutions for the bedding and backfilling of the drainage pipes listed in Table 1 except where: a) The trench is located within or above peat, or b) Scouring of the trench is likely due to unstable soils, or c) The horizontal separation between any building foundation and the underside of the pipe trench is less than that required by Paragraph 3.9.7, or d) The cover H to the pipe is more than 2.5 m.","if(and(expr(fun(equal),atom(var(pipe)),data(TRUE)),not(not(fun(within),atom(rel(located),var(trench)),data(peat))),not(not(fun(above),atom(rel(located),var(trench)),data(peat))),not(not(fun(equal),atom(var(soil)),data(unstable))),not(not(fun(greaterThan),atom(rel(cover),var(pipe)),data(2.5m))))),then(permission(expr(fun(complyWith),atom(var(fill)),data(figure_13))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.3.0.1,"3.9.3 Trench slope Where the slope of the trench is 1 in 8 or greater, anti-scour blocks shall be provided.","if(expr(fun(greaterThanEqual),atom(var(trenchSlope)),data(1_in_8))),then(obligation(expr(fun(include),atom(var(trench)),data(antiScourBlocks))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.3.0.1.a.1,These anti-scour blocks shall be: Constructed from 150 mm thick concrete (17 MPa),"if(expr(fun(include),atom(var(trench)),data(antiScourBlocks))),then(and(obligation(expr(fun(equal),atom(rel(material),var(antiScourBlocks)),data(concrete))),obligation(expr(fun(equal),atom(rel(thickness),var(antiScourBlocks)),data(150mm))),obligation(expr(fun(equal),atom(rel(strength),var(antiScourBlocks)),data(17mpa)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.3.0.1.c.2,These anti-scour blocks shall be: Extended to ground level where the drain cover is less than 300 mm,"if(and(expr(fun(include),atom(var(trench)),data(antiScourBlocks)),expr(fun(lessThan),atom(rel(depth),var(drainCover)),data(300mm)))),then(expr(fun(equal),atom(rel(height),var(antiScourBlocks)),data(groundLevel)))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.3.0.1.d.i.1,These anti-scour blocks shall be: Spaced at: 7.5 m centres for trench slopes between 1 in 8 and 1 in 5,"if(and(expr(fun(include),atom(var(trench)),data(antiScourBlocks)),expr(fun(lessThan),atom(var(trenchSlope)),data(1_in_5)),expr(fun(greaterThanEqual),atom(var(trenchSlope)),data(1_in_8)))),then(obligation(expr(fun(equal),atom(rel(spacing),var(antiScourBlocks)),data(7.5mCentres))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.3.0.1.d.ii.1,These anti-scour blocks shall be: Spaced at: 5.0 m centres for trench slopes greater than 1 in 5.,"if(and(expr(fun(include),atom(var(trench)),data(antiScourBlocks)),expr(fun(greaterThan),atom(var(trenchSlope)),data(1_in_5)))),then(obligation(expr(fun(equal),atom(rel(spacing),var(antiScourBlocks)),data(5.0mCentres))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.4.0.1.1,"3.9.4 Trench width The width B of the trench shall be no less than the pipe diameter D plus 200 mm. Trench width at the top of the pipe shall be no more than 600 mm unless the pipe(s) in the trench are covered with concrete, as shown in Figure 13 (c).","if(and(expr(fun(equal),atom(rel(service),var(trench)),data(TRUE)),expr(fun(is),atom(rel(width),var(trench)),data(b)),expr(fun(is),atom(rel(diameter),var(pipe)),data(d)),expr(fun(is),expr(fun(topOf),atom(var(pipe))),data(t)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(width),var(b)),data((d+200)mm))),or(obligation(expr(fun(lessThanEqual),atom(rel(width),var(t)),data(600mm))),and(obligation(expr(fun(has),atom(var(trench)),data(cover))),obligation(expr(fun(is),atom(rel(material),var(cover)),data(concrete)))))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.5.0.1.a.1,"Acceptable fill materials shown in Figure 13 are: Bedding material of clean granular non-cohesive material with a maximum particle size of 20 mm, or","if(expr(fun(include),atom(var(trench)),data(bedding))),then(and(obligation(expr(fun(equal),atom(rel(material),var(bedding)),data(clean))),expr(fun(equal),atom(rel(material),var(bedding)),data(granular)),expr(fun(equal),atom(rel(material),var(bedding)),data(non-cohesive)),expr(fun(LessThanEqual),atom(rel(size),var(beddingParticle)),data(20mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.5.0.1.b.1,"Acceptable fill materials shown in Figure 13 are: Selected compacted fill of any fine-grained soil or granular material which is free from topsoil and rubbish and has a maximum particle size of 20 mm, or","if(expr(fun(include),atom(var(trench)),data(compactedFill))),then(and(obligation(expr(fun(equal),atom(rel(material),var(compactedFill)))),not(not(fun(include),atom(rel(material),var(compactedFill)),data(topsoil))),not(not(fun(include),atom(rel(material),var(compactedFill)),data(rubbish))),expr(fun(LessThanEqual),atom(rel(size),var(compactedFillParticle)),data(20mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.5.0.1.c.1,Acceptable fill materials shown in Figure 13 are: Ordinary fill which may comprise any fill or excavated material.,"if(expr(fun(include),atom(var(trench)),data(ordinaryFill))),then(or(permission(expr(fun(include),atom(var(ordinaryFill)),data(excavatedMaterial))),expr(fun(include),atom(var(ordinaryFill)),data(anyFill))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r3.9.6.0.0.a.1,3.9.6 Placing and compacting a) Granular bedding and selected fill shall be placed in layers of no greater than 100 mm loose thickness and compacted.,"if(expr(fun(include),atom(var(trench)),or(data(bedding),data(compactedFill)))),then(and(obligation(expr(fun(in),atom(var(granularBedding)),data(layer))),obligation(expr(fun(in),atom(var(granularFill)),data(layer))),obligation(expr(fun(lessThanEqual),atom(rel(thickness),var(layer)),data(100mm))),obligation(expr(fun(is),atom(var(layer)),data(compacted)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r4.1.1.0.1,4.1.1 Materials for downpipes shall comply with Table 4.,"if(expr(fun(equal),atom(var(downpipe)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(material),var(downpipe)),data(t_4))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r4.1.2.0.1,"4.1.2 Downpipes, gutters, roofing, fastenings and all adjoining components shall be of the same or a compatible material to eliminate the risk of galvanic corrosion.","if(and(expr(fun(include),atom(rel(componentPair),var(roofSystem)),and(data(component_1),data(component_2))),expr(fun(adjacent),atom(var(component_1)),data(component_1)))),then(expr(fun(of),expr(fun(forEach),atom(var(componentPair))),data(roofSystem),obligation(expr(fun(is),atom(rel(material),var(componentPair)),data(galvanicallyCompatible)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r4.2.1.0.1,"4.2.1 Downpipes sized using Table 5 are acceptable. Other downpipes are acceptable provided their cross-sectional area is no less than that required by Table 5, and they permit passage of a 50 mm diameter sphere.","if(expr(fun(equal),atom(var(downpipe)),data(TRUE))),then(or(permission(expr(fun(complyWith),atom(rel(size),var(downpipe)),data(t_5))),and(expr(fun(greaterThanEqual),atom(rel(cross-section),var(downpipe)),data(eval(t_5))),expr(fun(permitPassage),atom(var(downpipe)),data(50mmDiameterSphere)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r4.3.1.0.1,"4.3.1 Where thermal movement of downpipes cannot be accommodated by movement of the guttering, expansion joints shall be incorporated.","if(and(expr(fun(has),atom(var(downpipe)),data(thermalExpansion)),not(not(fun(allow),atom(var(guttering)),data(movement))))),then(or(obligation(expr(fun(include),atom(var(downpipe)),data(expansionJoint))),expr(fun(include),atom(var(guttering)),data(expansionJoint))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r4.3.2.0.1,"4.3.2 All internal downpipes shall withstand without leakage, a water test with an applied head of 1.5 m of water, or a high pressure air test as described in E1/VM1 Paragraph 8.3.","if(expr(fun(equal),atom(rel(location),var(downpipe)),data(internal))),then(or(and(obligation(expr(fun(complyWith),atom(var(downpipe)),data(waterTest))),expr(fun(equal),atom(rel(appliedHead),var(waterTest)),data(1.5m))),and(obligation(expr(fun(complyWith),atom(var(downpipe)),data(airTest))),expr(fun(complyWith),atom(var(airTest)),data(e1/vm1_paragraph_8.3)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.1.1.0.1,5.1.1 Roof gutters shall discharge to downpipes that are sized as given in Paragraph 4.2.,"if(expr(fun(equal),atom(rel(location),var(gutter)),data(roof))),then(and(obligation(expr(fun(into),atom(var(gutterDischarge)),data(downpipe))),expr(fun(complyWith),atom(rel(size),var(downpipe)),data(4.2.1.0.1))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.1.4.0.1,5.1.4 In no case shall the cross-sectional area of any gutter be less than 4000 mm2.,"if(expr(fun(equal),atom(rel(location),var(gutter)),data(roof))),then(prohibition(not(expr(fun(lessThan),atom(rel(crossSectionalArea),var(gutter)),data(4000mm^2)))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.2.1.0.1,5.2.1 Roof gutter materials shall comply with the standards stated in Table 6.,"if(expr(fun(equal),atom(rel(location),var(gutter)),data(roof))),then(obligation(expr(fun(complyWith),atom(rel(material),var(gutter)),data(t_6))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.3.1.0.1,5.3.1 Roof gutters shall fall to an outlet.,"if(expr(fun(equal),atom(rel(location),var(gutter)),data(roof))),then(obligation(expr(fun(towards),atom(rel(direction),var(gutterFall)),data(outlet))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.5.1.0.1.1,5.5.1 All internal gutters shall be fitted with overflow outlets which drain to the exterior of the building. The top of the outlet shall be set at least 50 mm below the top of the gutter.,"if(and(expr(fun(equal),atom(var(roofGutterType)),data(internal)),expr(fun(equal),atom(rel(elevation),var(roofGutterTop)),data(g1)))),then(and(obligation(expr(fun(include),atom(var(roofGutter)),data(overflowOutlet))),expr(fun(equal),atom(rel(drainTo),var(overflowOutlet)),data(buildingExterior)),expr(fun(lessThanEqual),atom(var(overflowOutletTop)),data(g1-50mm))))"
lrml/NZ_NZBC-E1AS1#1.10.lrml,r5.5.2.0.1,5.5.2 External gutters do not require overflow outlets but shall be installed to ensure any overflow from the gutter spills to the outside of the building.,"if(expr(fun(equal),atom(var(roofGutterType)),data(external))),then(and(permission(expr(fun(equal),atom(var(overflowOutlet)),data(notRequired))),obligation(expr(fun(equal),atom(rel(drainTo),var(roofGutterOverflow)),data(buildingExterior)))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r1.1.1.0.1,"1.1.1 Building elements, including materials, components and systems, complying with a publication referenced in the Acceptable Solutions and Verification Methods, satisfy B2 requirements only when the conditions of use stated in the publication and Acceptable Solutions and Verification Methods prevail.","if(and(expr(fun(complyWith),atom(rel(element),var(building)),data(publication)),expr(fun(complyWith),atom(rel(material),var(building)),data(publication)),expr(fun(complyWith),atom(rel(component),var(building)),data(publication)),expr(fun(complyWith),atom(rel(system),var(building)),data(publication)),expr(fun(referencedBy),atom(var(publication)),data(nzbc)),expr(fun(has),atom(var(publication)),data(conditionOfUse)),expr(fun(is),atom(var(conditionOfUse)),data(TRUE)))),then(and(expr(fun(complyWith),atom(rel(element),var(building)),data(nzbc_b2_as1)),expr(fun(complyWith),atom(rel(material),var(building)),data(nzbc_b2_as1)),expr(fun(complyWith),atom(rel(component),var(building)),data(nzbc_b2_as1)),expr(fun(complyWith),atom(rel(system),var(building)),data(nzbc_b2_as1))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r2.1.2.0.2,2.1.2 It is the responsibility of the person specifying the building element to determine normal maintenance requirements. These may be based on the manufacturer's recommendations and may also include periodic inspections of elements not readily observable without a specific effort (e.g. access to roof or subfloor spaces).,"if(expr(fun(specifiedBy),atom(rel(element),var(building)),data(specifier))),then(and(obligation(expr(fun(include),atom(var(maintenance)),data(manufacturersRecommendations))),obligation(expr(fun(include),atom(var(maintenance)),data(periodicInspections))),obligation(expr(fun(is),atom(rel(responsibility),var(maintenance)),data(specifier)))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r2.1.3.0.1,"2.1.3 Basic normal maintenance tasks shall include but not be limited to: a) Where applicable, following manufacturers' maintenance recommendations, b) Washing down surfaces, particularly exterior building elements subject to wind driven salt spray, c) Re-coating interior and exterior protective finishes, d) Replacing sealant, seals and gaskets in joints, e) Replacing valves, washers and similar high wear components in easily accessed service equipment and other building elements, f) Cleaning and replacing filters in building services systems, g) The regular servicing of boilers, cooling towers, lifts, escalators, emergency lighting and fire protection equipment, and h) The maintenance of signs for access, escape routes, emergency equipment and hazardous areas.","if(and(expr(fun(require),atom(rel(element),var(building)),data(maintenance)),expr(fun(is),atom(rel(type),var(maintenance)),or(data(normal),data(basic))))),then(and(obligation(expr(fun(include),atom(rel(task),var(maintenance)),data(manufacturersRecommendations))),expr(fun(include),atom(rel(task),var(maintenance)),data(washingDownSurfaces,particularlyExteriorBuildingElementsSubjectToWindDrivenSaltSpray)),expr(fun(include),atom(rel(task),var(maintenance)),and(data(re-coatingInterior),data(exteriorProtectiveFinishes))),expr(fun(include),atom(rel(task),var(maintenance)),and(data(replacingSealant,seals),data(gasketsInJoints))),expr(fun(include),atom(rel(task),var(maintenance)),and(data(replacingValves,washers),data(similarHighWearComponentsInEasilyAccessedServiceEquipment),data(otherBuildingElements))),expr(fun(include),atom(rel(task),var(maintenance)),and(data(Cleaning),data(replacingFiltersInBuildingServicesSystems))),expr(fun(include),atom(rel(task),var(maintenance)),and(data(theRegularServicingOfBoilers,coolingTowers,lifts,escalators,emergencyLighting),data(fireProtectionEquipment))),expr(fun(include),atom(rel(task),var(maintenance)),and(data(theMaintenanceOfSignsForAccess,escapeRoutes,emergencyEquipment),data(hazardousAreas))),not(expr(fun(include),atom(rel(task),var(maintenance)),data(upgradeOfBuildingElementToMeetDemandOfNewTechnology))),not(expr(fun(include),atom(rel(task),var(maintenance)),data(upgradeOfBuildingElementToMeetDemandOfIncreasedEnvironmentalExpectationsOfUsers)))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r2.2.1.0.1,"2.2.1 Scheduled maintenance comprises the inspection, maintenance and reporting procedures for building elements required to have a compliance schedule in terms of section 44 of the Building Act. By those procedures the building elements concerned are effectively deemed to have a durability of the life of the building because they are required to perform as designed at all times. The relevant maintenance procedures may include total replacement.","if(and(expr(fun(require),atom(rel(element),var(building)),data(maintenance)),obligation(expr(fun(is),atom(rel(type),var(maintenance)),data(scheduled))))),then(and(obligation(expr(fun(include),atom(rel(task),var(maintenance)),and(data(inspection,maintenance),data(reportingProceduresForBuildingElementsRequiredToHaveA_complianceScheduleInTermsOfSection_44_ofTheBuildingAct)))),permission(expr(fun(include),atom(rel(task),var(maintenance)),data(totalReplacement)))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r3.3.1.0.1,"3.3.1 NZS 4251: Part 1 is an acceptable solution for meeting the durability requirements of cement plasters for walls, ceilings and soffits within its scope.","if(and(expr(fun(is),atom(rel(material),var(building)),or(data(cement),data(plaster))),or(expr(fun(is),atom(rel(element),var(building)),data(wall)),expr(fun(is),atom(rel(element),var(building)),data(ceiling)),expr(fun(is),atom(rel(element),var(building)),data(soffit))))),then(permission(expr(fun(complyWith),atom(rel(element),var(building)),data(nzs_4251_1))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r3.4.1.0.1,3.4.1 NZS 4297 and NZS 4299 are acceptable solutions for meeting the durability requirements of earth buildings within their scope.,"if(expr(fun(is),atom(rel(type),var(contruction)),data(earth))),then(permission(expr(fun(complyWith),atom(var(building)),and(data(nzs_4297),data(nzs_4299)))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r3.5.1.0.1,"3.5.1 NZS 4223.2 is an Acceptable Solution for meeting the durability requirements of insulating glass units, within its scope.","if(expr(fun(has),atom(rel(property),var(glazing)),data(insulation))),then(permission(expr(fun(complyWith),atom(var(glazing)),data(nzs_4223.2))))"
lrml/NZ_NZBC-B2AS1#2.10.lrml,r3.6.1.0.1,3.6.1 SNZ TS 3404: SNZ TS 3404 is an Acceptable Solution for meeting the durability requirements of steel building elements within its scope.,"if(expr(fun(is),atom(rel(material),var(building)),data(steel))),then(permission(expr(fun(complyWith),atom(rel(element),var(building)),data(snz_ts_3404))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r1.1.0.1,"1.1 B1/AS1 contains Acceptable Solutions for Masonry (Paragraph 2.0), Timber (Paragraph 3.0), Earth Buildings (Paragraph 4.0) and Stucco (Paragraph 5.0), Drains (Paragraph 6.0) and Glazing (Paragraph 7.0).","if(or(expr(fun(is),atom(rel(material),var(construction)),or(data(masonry),data(timber),data(earth))),expr(fun(has),atom(rel(material),var(construction)),data(stucco)),expr(fun(for),atom(var(construction)),data(drain)),expr(fun(in),atom(var(glazing)),data(structure)))),then(permission(expr(fun(complyWith),atom(rel(design),var(structure)),data(nzbc_b1_as1))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r1.2.0.1,1.2 B1/AS gives an Acceptable Solution for small chimneys (referred to in Paragraph 8.0).,"if(and(expr(fun(is),atom(var(structure)),data(chimney)),expr(fun(is),atom(rel(size),var(chimney)),data(small)))),then(permission(expr(fun(complyWith),atom(rel(design),var(structure)),data(nzbc_b1_as1))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r2.1.0.1,2.1 NZS 4229 subject to the following modifications: 2.1.1 NZS 4229 Clause 7.8.3 Delete clause 7.8.3. Replace with:,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(masonry)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4229_clause_7.8.3)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(content),var(x)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(2.1.1.1)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r2.1.1.1,"All slab-on-ground reinforcing shall extend to within 75 mm of the outside edge of the slab (including the foundation wall) and shall consist of a minimum 2.27kg/m2 welded Grade 500E reinforcing mesh sheets (1.14 kg/m2 in each direction), which shall be lapped at sheet joints such that the overlap measurement between the outermost cross wires of each fabric sheet is equal to the greater of one of the following: - the spacing of cross wires plus 50 mm; - 150 mm; or - the manufacturer's requirements.","if(and(expr(fun(is),atom(rel(material),var(slab)),data(concrete)),expr(fun(is),atom(rel(construction),var(slab)),data(slabOnGround)),expr(fun(has),atom(var(slabOnGround)),data(reinforcing)),expr(fun(has),atom(var(slab)),data(outsideEdge)))),then(and(obligation(expr(fun(within),atom(rel(extension),var(reinforcing)),data(outsideEdge))),obligation(expr(fun(lessThanEqual),atom(var(extension)),data(75mm))),obligation(expr(fun(is),atom(rel(type),var(reinforcing)),data(meshSheet))),obligation(expr(fun(is),atom(rel(type),var(meshSheet)),data(weldedGrade_500E))),obligation(expr(fun(greaterThanEqual),atom(rel(weight),var(meshSheet)),data(2.27kg/m^2))),obligation(expr(fun(equal),atom(rel(weight),var(meshSheet)),data(1.14kg/m^2eachDirection))),obligation(expr(fun(has),atom(rel(joint),var(meshSheet)),data(overlap))),obligation(expr(fun(inBetween),atom(rel(measurement),var(overlap)),data(crossWire))),expr(fun(is),atom(rel(location),var(crossWire)),data(outermost)),expr(fun(of),atom(var(crossWire)),data(meshSheet)),obligation(expr(fun(equal),atom(var(measurement)),data(max(a+50mm,150mm,b)))),expr(fun(define),atom(rel(spacing),var(crossWire)),data(a)),expr(fun(define),atom(rel(dimension),var(manufacturerRequirement)),data(b)),obligation(expr(fun(equal),expr(fun(max),atom(rel(dimension),var(slab))),data(18m))),expr(fun(inBetween),atom(rel(dimension),var(slab)),data(freeJoint))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r2.1.3.0.1,"2.1.3 NZS 4229 Grade 500E welded steel mesh Where Grade 500E welded steel mesh is specified, it shall meet the requirements of Paragraph 14.0 in B1/VM1.","if(and(expr(fun(equal),atom(var(weldedSteelMesh)),data(TRUE)),expr(fun(is),atom(rel(grade),var(weldedSteelMesh)),data(500E)))),then(and(obligation(expr(fun(complyWith),atom(var(weldedSteelMesh)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(14)),obligation(expr(fun(in),atom(var(rule)),data(b1/vm1)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.0.1,3.1 NZS 3604 subject to the following modifications:,"if(expr(fun(is),atom(rel(material),var(construction)),data(timber))),then(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(nzs_3604))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.1.0.1,"3.1.1 NZS 3604 Paragraph 1.3 Definitions Add (in the definition for Good Ground): ""(liquefaction, lateral spread – for the Canterbury earthquake region only)"" after ""subsidence"" in subparagraph (c).","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_paragraph_1.3_definitions_goodGround)))),then(and(obligation(expr(fun(isAppendedIn),atom(rel(content),var(x)),data(subparagraph(c)))),obligation(expr(fun(appendedAfter),atom(rel(content),var(x)),data(subsidence))),obligation(expr(fun(appendedWith),atom(rel(content),var(x)),data((liquefaction,lateralSpread_forTheCanterburyEarthquakeRegionOnly))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2.0.2,"Amend Figure 5.4 Earthquake zones, so that the lowest zone within the Selwyn or Waimakariri District Council boundaries is within Zone 2.","if(and(expr(fun(within),atom(var(space)),data(boundary)),expr(fun(of),atom(var(boundary)),data(christchurchCityCouncil)))),then(obligation(expr(fun(within),atom(rel(located),var(space)),data(zone2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2.0.3,"Amend Figure 5.4 Earthquake zones, so that the lowest zone within the Selwyn or Waimakariri District Council boundaries is within Zone 2. Areas within Selwyn District that are designated as Zone 1 in NZS 3604 shall become Zone 2.","if(and(expr(fun(within),atom(rel(location),var(zone)),data(boundary)),expr(fun(of),atom(var(boundary)),or(data(selwynDistrictCouncil),data(waimakaririDistrictCouncil))),expr(fun(is),atom(var(zone)),data(lowest)),expr(fun(within),atom(var(space)),data(selwynDistrictCouncil)),expr(fun(designatedAs),atom(var(space)),data(zone1)))),then(and(obligation(expr(fun(isWithin),atom(var(zone)),data(zone2))),obligation(expr(fun(designatedAs),atom(var(space)),data(zone2)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2A.0.1,3.1.2A NZS 3604 Clause 7.4.1.3 Delete Subclause 7.4.1.3 (c).,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.4.1.3_subclause_7.4.1.3.c)))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2B.0.1,"3.1.2B NZS 3604 Figure 7.10(b) On the plan view replace the text ""2/M12 x 250 mm coach screws at 140 crs"" with ""2/M12 x 240 mm coach screws at 140 crs vertically."" On the plan view replace ""2/M12 at 400 crs"" twice with ""2 M12 bolts at 140crs vertically to capture end joist laminations and blocking, and boundary joist laminations and blocking, at post centrelines.""","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.10(b))),expr(fun(has),atom(var(x)),data(planView)),expr(fun(is),atom(rel(text),var(planView)),data(2/M1_x_50mmcoachscrewsat_140crs)))),then(and(obligation(expr(fun(is),atom(rel(text),var(planView)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(text),var(planView)),data(2/M1_x_40mmcoachscrewsat_140crsvertically)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2B.0.2,"On the plan view replace ""2/M12 at 400 crs"" twice with ""2 M12 bolts at 140crs vertically to capture end joist laminations and blocking, and boundary joist laminations and blocking, at post centrelines.""","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.10(b))),expr(fun(has),atom(var(x)),data(planView)),expr(fun(is),atom(rel(text),var(planView)),data(2/M12at_400crs)))),then(and(obligation(expr(fun(is),atom(rel(text),var(planView)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(text),var(planView)),and(data(2M12boltsAt_140crsVerticallyToCaptureEndJoistLaminations),data(blocking),data(boundaryJoistLaminations),data(blocking,atPostCentrelines))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2C.0.1,"3.1.2C NZS 3604 Figure 7.10(c ) On the plan view insert the text ""At each strap location (at joist ends and nogging), 2/M12 x 240 mm long coach screws are required."" On the plan view, replace the text "" 2/M12 x 250 mm coach screws at 140 crs vertically"" with "" 2/M12 x 200mm coach screws at 140 crs vertically.""","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.10(c))),expr(fun(has),atom(var(x)),data(planView)))),then(and(obligation(expr(fun(is),atom(rel(text),var(planView)),data(inserted))),obligation(expr(fun(is),atom(rel(text),var(planView)),and(data(Ateachstraplocation(atjoistends),data(nogging),2/M1_x_40mmlongcoachscrewsarerequired))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2C.0.2,"3.1.2C NZS 3604 Figure 7.10(c ) On the plan view, replace the text "" 2/M12 x 250 mm coach screws at 140 crs vertically"" with "" 2/M12 x 200mm coach screws at 140 crs vertically.""","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.10(c))),expr(fun(has),atom(var(x)),data(planView)),expr(fun(is),atom(rel(text),var(planView)),data(2/M1_x_50mmcoachscrewsat_140crsvertically)))),then(and(obligation(expr(fun(is),atom(rel(text),var(planView)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(text),var(planView)),data(2/M1_x_00mmcoachscrewsat_140crsvertically)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.2C.0.3,"3.1.2C NZS 3604 Figure 7.10(c ) On the section view, replace the text ""M12 x 200 mm coach screws at 400 crs vertically"" with M12 x 240 mm coach screws at 140 crs vertically.","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.10(c))),expr(fun(has),atom(var(x)),data(sectionView)),expr(fun(is),atom(rel(text),var(sectionView)),data(M1_x_00mmcoachscrewsat_400crsvertically)))),then(and(obligation(expr(fun(is),atom(rel(text),var(sectionView)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(text),var(sectionView)),data(M1_x_40mmcoachscrewsat_140crsvertically)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.3.0.1,3.1.3 NZS 3604 Clause 7.5.2.3 Delete: Clause 7.5.2.3 Replace with:,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.5.2.3)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(content),var(x)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),and(data(3.1.3.0.2),data(3.1.3.0.3)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.3.0.2,"Replace with: ""Clause 7.5.2.3 The combined foundation and edge details shall be constructed as shown in Figures 7.13(B), 7.14(B) or (C)","if(expr(fun(is),atom(rel(material),var(construction)),data(timber))),then(and(obligation(expr(fun(asPer),atom(rel(foundation),var(construction)),or(data(figure_7.13.b),data(figure_7.14.b),data(figure_7.14.c)))),obligation(expr(fun(asPer),atom(rel(edge),var(construction)),or(data(figure_7.13.b),data(figure_7.14.b),data(figure_7.14.c))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.3.0.3,(and Figures 7.15(B) and 7.16(B) or (C) for foundations supporting a masonry veneer).,"if(expr(fun(equal),atom(var(masonryVeneer)),data(TRUE))),then(and(obligation(expr(fun(asPer),atom(rel(foundation),var(masonryVeneer)),or(data(figure_7.15.b),data(figure_7.16.b),data(figure_7.16.c)))),obligation(expr(fun(asPer),atom(rel(edge),var(masonryVeneer)),or(data(figure_7.15.b),data(figure_7.16.b),data(figure_7.16.c))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.4.0.1,3.1.4 NZS 3604 Figure 7.13 Delete: Figure 7.13(A) – Foundation edge details – In situ concrete – Dimensions & reinforcing for single storey.,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.13(A))))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.4.0.2,"Amend title of Figure 7.13(B) to ""Dimensions & reinforcing for 1 or 2 storeys"".","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.13(B))))),then(and(obligation(expr(fun(is),atom(rel(title),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(title),var(x)),or(data(dimensionsAndReinforcingFor_1),data(2storeys))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.5.0.1,3.1.5 NZS 3604 Figure 7.14 Delete: Figure 7.14(A) – Foundation edge details – Concrete masonry – Single storey,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.14(A))))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.5.0.2,"Amend title of Figure 7.14(B) to ""1 or 2 storeys"", and add a note:","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.14(B))))),then(and(obligation(expr(fun(is),atom(rel(title),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(title),var(x)),or(data(1),data(2storeys)))),expr(fun(is),atom(rel(note),var(x)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(3.1.5.0.3))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.5.0.3,"for a single storey foundation, 15 Series masonry may be used and the minimum footing width may be 190 mm","if(expr(fun(is),atom(rel(height),var(foundation)),data(1storey))),then(and(permission(expr(fun(is),atom(var(material)),data(masonry))),expr(fun(is),atom(rel(type),var(masonry)),data(15series)),permission(expr(fun(equal),expr(fun(min),atom(rel(width),var(footing))),data(190mm)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.6.0.1,3.1.6 NZS 3604 Figure 7.15 Delete: Figure 7.15(A) – Masonry veneer foundation edge details – Dimensions and reinforcement for single storeys.,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.15(A))))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.7.0.1,3.1.7 NZS 3604 Figure 7.16 Delete: Figure 7.16 (A) – Masonry veneer foundation edge details – Concrete masonry – Single storey.,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.16(A))))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.8.0.1," 3.1.8 NZS 3604 Clause 7.5.8.1 Delete: Clause 7.5.8.1 Replace with: ""Clause 7.5.8.1 All slab-on-ground floors shall be reinforced concrete in accordance with Clauses 7.5.8.3, 7.5.8.4 and 7.5.8.6.4. All reinforcing steel, including welded mesh, shall be Ductility Class E in accordance with NZS 4671.""","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.5.8.1)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(content),var(x)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(3.1.8.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.8.0.2,"Clause 7.5.8.1 All slab-on-ground floors shall be reinforced concrete in accordance with Clauses 7.5.8.3, 7.5.8.4 and 7.5.8.6.4. All reinforcing steel, including welded mesh, shall be Ductility Class E in accordance with NZS 4671.","if(and(expr(fun(is),atom(rel(construction),var(floor)),data(slabOnGround)),expr(fun(has),atom(var(slabOnGround)),data(reinforcing)),expr(fun(is),atom(rel(material),var(reinforcing)),data(concrete)),expr(fun(use),atom(var(reinforcing)),data(reinforcedSteel)),expr(fun(include),atom(var(reinforcedSteel)),data(weldedMesh)))),then(and(obligation(expr(fun(complyWith),atom(var(reinforcing)),and(data(clause_7.5.8.3),data(clause_7.5.8.4),data(clause_7.5.8.6.4)))),obligation(expr(fun(is),atom(rel(type),var(reinforcedSteel)),data(ductlityClassE))),obligation(expr(fun(complyWith),atom(var(reinforcedSteel)),data(nzs_4671)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.8.0.3,"Where Grade 500E welded steel mesh is specified, it shall meet the requirements of Paragraph 14.0 in B1/VM1.","if(and(expr(fun(is),atom(rel(material),var(meshSheet)),data(steel)),expr(fun(is),atom(rel(type),var(meshSheet)),data(weldedGrade_500E)))),then(and(obligation(expr(fun(complyWith),atom(var(meshSheet)),data(paragraph_14))),expr(fun(in),atom(var(paragraph_14)),data(b1/vm1))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.9.0.1,3.1.9 NZS 3604 Clause 7.5.8.3 Delete: Clause 7.5.8.3 Replace with:,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.5.8.3)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(content),var(x)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(3.1.9.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.9.0.2,"3.1.9 NZS 3604 Clause 7.5.8.3 Replace with: ""Clause 7.5.8.3 All slab-on-ground reinforcing shall extend to within 75 mm of the outside edge of the slab (including the foundation wall) and shall consist of a minimum 2.27 kg/m2 welded reinforcing mesh sheets (1.14 kg/m2 in each direction), which shall be lapped at sheet joints such that the overlap measurement between the outmost cross wires of each fabric sheet is equal to the greater of one of the following: - the spacing of cross wires plus 50 mm, - 150 mm or - the manufacturer's requirements. Slabs shall have a maximum dimension of 24 m between free joints.""","if(and(expr(fun(is),atom(rel(material),var(slab)),data(concrete)),expr(fun(is),atom(rel(construction),var(slab)),data(slabOnGround)),expr(fun(has),atom(var(slabOnGround)),data(reinforcing)),expr(fun(has),atom(var(slab)),data(outsideEdge)))),then(and(obligation(expr(fun(within),atom(rel(extension),var(reinforcing)),data(outsideEdge))),obligation(expr(fun(lessThanEqual),atom(var(extension)),data(75mm))),obligation(expr(fun(is),atom(rel(type),var(reinforcing)),data(meshSheet))),obligation(expr(fun(is),atom(rel(type),var(meshSheet)),data(welded))),obligation(expr(fun(greaterThanEqual),atom(rel(weight),var(meshSheet)),data(2.27kg/m^2))),obligation(expr(fun(equal),atom(rel(weight),var(meshSheet)),data(1.14kg/m^2eachDirection))),obligation(expr(fun(has),atom(rel(joint),var(meshSheet)),data(overlap))),obligation(expr(fun(between),atom(rel(measurement),var(overlap)),data(crossWire))),expr(fun(is),atom(var(crossWire)),data(outermost)),expr(fun(of),atom(var(crossWire)),data(meshSheet)),obligation(expr(fun(equal),atom(var(measurement)),data(max(a+50mm,150mm,b)))),expr(fun(define),atom(rel(spacing),var(crossWire)),data(a)),expr(fun(define),atom(rel(dimension),var(manufacturerRequirement)),data(b)),obligation(expr(fun(equal),expr(fun(max),atom(rel(dimension),var(slab))),data(24m))),expr(fun(between),atom(rel(dimension),var(slab)),data(freeJoint))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.10.0.1,3.0 Timber 3.1.10 NZS 3604 Clause 7.5.8.6.2 Delete: Clause 7.5.8.6.2,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.5.8.6.2)))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.11.0.1,"3.1.11 NZS 3604 Figure 7.18 Delete title: Figure 7.18 – Irregular slab (plan view) (see 7.5.8.6.2) Replace with: ""Figure 7.18 – Irregular slab (plan view) (see 7.5.8.6.4)"".","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_figure_7.18)))),then(and(obligation(expr(fun(is),atom(rel(title),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(title),var(x)),data(Figure7.18-Irregularslab(planview)(see_7.5.8.6.4))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.12.0.1,3.1.12 NZS 3604 Clause 7.5.8.6.3 Delete: Clause 7.5.8.6.3.,"if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604_clause_7.5.8.6.3)))),then(obligation(expr(fun(is),atom(var(x)),data(deleted))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.13.0.1,"3.1.13 NZS 3604 New Clause Add new: ""Clause 7.5.8.8 Free Joints.","if(and(expr(fun(is),atom(rel(material),var(construction)),data(timber)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_3604)))),then(and(obligation(expr(fun(equal),expr(fun(addClause),atom(rel(content),var(x))),data(7.5.8.8))),expr(fun(define),atom(var(y)),data(_new)),expr(fun(is),atom(var(y)),data(nzs_3604_clause_7.5.8.8)),obligation(expr(fun(is),atom(rel(title),var(y)),data(clause_7.5.8.8freeJoints))),obligation(expr(fun(is),atom(rel(content),var(y)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(3.1.13.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r3.1.13.0.2,"At free joints, slab reinforcement shall be terminated and there shall be no bonding between vertical concrete faces (prevented by using building paper or a bituminous coating).","if(and(expr(fun(has),atom(var(slab)),data(joint)),expr(fun(is),atom(var(joint)),data(free)),expr(fun(has),atom(var(slab)),data(reinforcement)),expr(fun(has),atom(var(reinforcement)),data(verticalFace)),expr(fun(is),atom(rel(material),var(verticalFace)),data(concrete)))),then(and(obligation(expr(fun(terminatedAt),atom(var(reinforcement)),data(joint))),obligation(not(expr(fun(has),atom(var(verticalFace)),data(bonding)))),expr(fun(preventedBy),atom(var(bonding)),or(data(buildingPaper),data(bituminousCoating))),expr(fun(placedAlong),atom(var(dowelBar)),data(joint))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.0.1,4.1 NZS 4299 subject to the following modifications:,"if(expr(fun(is),atom(rel(material),var(construction)),data(earth))),then(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(nzs_4299))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.1.0.1,"4.1.1 NZS 4299, Paragraph 1.3 Definitions Add (in the definition for Good Ground): ""(liquefaction, lateral spread – for the Canterbury earthquake region only)"" after ""subsidence"" in subparagraph (c).","if(and(expr(fun(is),atom(rel(material),var(construction)),data(earth)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4299_paragraph_1.3_definitions_goodGround)))),then(and(obligation(expr(fun(addIn),atom(rel(content),var(x)),data(subparagraph(c)))),obligation(expr(fun(addAfter),atom(rel(content),var(x)),data(subsidence))),obligation(expr(fun(add),atom(rel(content),var(x)),data((liquefaction,lateralSpread_forTheCanterburyEarthquakeRegionOnly))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.2.0.1,"4.1.2 NZS 4299, Clause 2.3 Earthquake zones Add to the end of Clause 2.3: ","if(and(expr(fun(is),atom(rel(material),var(construction)),data(earth)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4299_clause_2.3)))),then(and(obligation(expr(fun(appendAtEnd),atom(rel(content),var(x)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.1.2.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.2.0.2,The earthquake zone factor > 0.6 shall apply to the Canterbury earthquake region.,"if(expr(fun(equal),atom(var(canterburyEarthQuakeRegion)),data(TRUE))),then(and(obligation(expr(fun(belongsTo),atom(var(canterburyEarthQuakeRegion)),data(earthQuakeZoneFactor))),obligation(expr(fun(greaterThan),atom(var(earthQuakeZoneFactor)),data(0.6)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.3.0.1,"4.1.3 NZS 4299, Figure 2.1 Earthquake zones On the map shown in NZS 4299 Figure 2.1 Earthquake zones, the Canterbury earthquake region shall be interpreted as having an earthquake zone factor of > 0.6.","if(and(expr(fun(is),atom(rel(material),var(construction)),data(earth)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4299_figure_2.1)))),then(and(obligation(expr(fun(has),atom(var(x)),data(canterburyEarthQuakeRegion))),obligation(expr(fun(interpretedAs),atom(var(canterburyEarthQuakeRegion)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.1.2.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.4.0.1,"4.1.4 NZS 4299, Clause 4.8.6. Delete: Clause 4.8.6 Replace with:","if(and(expr(fun(is),atom(rel(material),var(construction)),data(earth)),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4299_clause_4.8.6)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedBy),atom(rel(content),var(x)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.1.4.0.2))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r4.1.4.0.2,Clause 4.8.6 The thickness and reinforcement and detail of concrete slabs shall comply with the requirements of NZS 3604 as modified in B1/AS1 Paragraph 3.1.,"if(expr(fun(is),atom(rel(material),var(slab)),data(concrete))),then(and(obligation(expr(fun(complyWith),atom(rel(thickness),var(slab)),data(nzs_3604))),obligation(expr(fun(complyWith),atom(rel(reinforcement),var(slab)),data(nzs_3604))),obligation(expr(fun(complyWith),atom(rel(detail),var(slab)),data(nzs_3604))),obligation(expr(fun(modifiedBy),atom(rel(requirement),var(nzs_3604)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(3.1)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r5.1.0.1,5.0 Stucco 5.1 NZS 4251,"if(expr(fun(is),atom(rel(material),var(construction)),data(stucco))),then(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(nzs_4251))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r6.1.0.1,6.0 Drains 6.1 AS/NZS 2566.1 6.2 AS/NZS 2566.2 6.3 AS/NZS 2032 6.4 AS/NZS 2033,"if(expr(fun(is),atom(var(structure)),data(drain))),then(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),and(data(as/nzs_2566.1),data(as/nzs_2566.2),data(as/nzs_2032),data(as/nzs_2033)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.1,7.3.1 Clause 22.4.3 modified Delete clause 22.4.3 Replace with:,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),obligation(expr(fun(complyWith),atom(var(glazing)),data(nzs_4223.3))),expr(fun(define),atom(var(x)),data(_new)),expr(fun(is),atom(var(x)),data(nzs_4223.3_clause_22.4.3)))),then(and(obligation(expr(fun(is),atom(rel(content),var(x)),data(deleted))),obligation(expr(fun(replacedWith),atom(rel(content),var(x)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),and(data(7.3.1.0.2),data(7.3.1.0.3),data(7.3.1.0.4),data(7.3.1.0.5),data(7.3.1.0.6))))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.2a,22.4.3 Structural glass barriers Structural glass barriers use glass as a structural element and are normally classified by the following types. Glass design for these types shall comply with the following tables (see note 1): Table 14 - Structural balustrade – cantilevered glass;,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),expr(fun(is),atom(rel(type),var(structure)),data(ballustrade)),expr(fun(is),atom(rel(design),var(ballustrade)),data(cantileveredGlass)))),then(and(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_14))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.2b,22.4.3 Structural glass barriers Structural glass barriers use glass as a structural element and are normally classified by the following types. Glass design for these types shall comply with the following tables (see note 1): Table 15 - Structural balustrade – two-edge point fixed;,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),expr(fun(is),atom(rel(type),var(structure)),data(ballustrade)),expr(fun(is),atom(rel(design),var(ballustrade)),data(two-edgePointFixed)))),then(and(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_15)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.2c,22.4.3 Structural glass barriers Structural glass barriers use glass as a structural element and are normally classified by the following types. Glass design for these types shall comply with the following tables (see note 1): Table 16 - Structural balustrade – two-edge support;,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),expr(fun(is),atom(rel(type),var(structure)),data(ballustrade)),expr(fun(is),atom(rel(design),var(ballustrade)),data(two-edgeSupport)))),then(and(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_16)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.2d,22.4.3 Structural glass barriers Structural glass barriers use glass as a structural element and are normally classified by the following types. Glass design for these types shall comply with the following tables (see note 1): Table 17 - Structural balustrade – three-edge support.,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),expr(fun(is),atom(rel(type),var(structure)),data(ballustrade)),expr(fun(is),atom(rel(design),var(ballustrade)),data(three-edgeSupport)))),then(and(obligation(expr(fun(complyWith),atom(rel(design),var(structure)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_17)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.3,22.4.3 Structural glass barriers Structural glass barriers use glass as a structural element and are normally classified by the following types. Glass design for these types shall comply with the following tables (see note 1): Table 14 - Structural balustrade – cantilevered glass; Table 15 - Structural balustrade – two-edge point fixed; Table 16 - Structural balustrade – two-edge support; Table 17 - Structural balustrade – three-edge support.,"if(and(expr(fun(in),atom(rel(application),var(glazing)),data(structure)),not(expr(fun(is),atom(rel(design),var(structure)),or(data(cantileveredGlass),data(two-edgePointFixed),data(two-edgeSupport),data(three-edgeSupport)))))),then(obligation(expr(fun(require),atom(rel(system),var(glazing)),data(specificDesign))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.4,All structural glass barriers safeguarding a fall of 1000 mm or more shall have interlinking rails,"if(and(expr(fun(is),atom(rel(material),var(structure)),data(glass)),expr(fun(actAs),atom(var(structure)),data(barrier)),expr(fun(safeguard),atom(var(structure)),data(fall)),expr(fun(greaterThanEqual),atom(rel(height),var(fall)),data(1000mm)))),then(and(obligation(expr(fun(has),atom(var(structure)),data(rail))),obligation(expr(fun(is),atom(var(rail)),data(interlinked)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.5,"All structural glass barriers safeguarding a fall of 1000 mm or more shall have interlinking rails, which in the event a glass pane breaks, spans the broken pane at the required barrier height and, i) resists Line and Concentrated design loads (SLS) specified in Tables 14 to 17, and ii) does not deflect more than 100 mm, in any direction, under the design loads.","if(and(expr(fun(equal),atom(rel(key),var(rule)),data(7.3.1.0.4)),expr(fun(is),atom(rel(material),var(pane)),data(glass)),expr(fun(is),atom(var(pane)),data(broken)),obligation(expr(fun(define),atom(rel(height),var(barrier)),data(h1))))),then(and(obligation(expr(fun(span),atom(var(rail)),data(pane))),obligation(expr(fun(equal),atom(rel(span),var(pane)),data(h1))),obligation(expr(fun(resist),atom(var(rail)),data(lineDesignLoad))),obligation(expr(fun(resist),atom(var(rail)),data(concentratedDesignLoad))),obligation(expr(fun(asPer),atom(var(lineDesignLoad)),data(table))),obligation(expr(fun(asPer),atom(var(concentratedDesignLoad)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),and(data(t_14),data(t_15),data(t_16),data(t_17)))),obligation(expr(fun(lessThanEqual),atom(rel(deflection),var(rail)),data(100mm))),obligation(expr(fun(measuredIn),atom(var(deflection)),data(anyDirection))),obligation(expr(fun(dueTo),atom(var(deflection)),data(designLoad)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.6.a.1,"Interlinking rails are not required for a heat-strengthened or toughened laminated safety glass barrier that: has a top capping, corner brackets or a proprietary system and will, when both panes of the laminate are fractured, resist a 0.2 kN concentrated load and not deflect more than 250 mm (see note 2)","if(and(expr(fun(is),atom(var(structure)),data(safetyBarrier)),expr(fun(contain),atom(var(structure)),data(glass)),obligation(expr(fun(is),atom(rel(class),var(glass)),data(safety))),obligation(expr(fun(is),atom(rel(type),var(glass)),data(laminated))),obligation(expr(fun(is),atom(var(glass)),or(data(heatStrengthened),data(toughened)))),obligation(expr(fun(has),atom(var(glass)),or(data(topCapping),data(cornerBracket),data(proprietaryProtectionSystem)))),expr(fun(in),expr(fun(forEach),atom(var(pane))),data(laminate),and(expr(fun(is),atom(var(pane)),data(fractured)),obligation(expr(fun(greaterThanEqual),atom(rel(resistance),var(pane)),data(0.2kN_concentratedLoad))),obligation(expr(fun(lessThanEqual),atom(rel(deflection),var(pane)),data(250mm))))))),then(permission(not(expr(fun(has),atom(var(structure)),data(interlinkingRail)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.6.b.1,"Interlinking rails are not required for a heat-strengthened or toughened laminated safety glass barrier that: has two or three edges supported by structural sealant joints or continuous clamps, and will, when both panes of the laminate are fractured, resist a 0.2 kN concentrated load and not deflect more than 250 mm (see note 2)","if(and(expr(fun(is),atom(rel(material),var(structure)),data(glass)),expr(fun(actAs),atom(var(structure)),data(safetyBarrier)),expr(fun(is),atom(var(structure)),or(data(heatStrengthened),data(toughened))),expr(fun(is),atom(var(structure)),data(laminated)),expr(fun(has),atom(var(structure)),data(edge)),expr(fun(equal),expr(fun(count),atom(var(edge))),or(data(2),data(3))),expr(fun(supportedBy),atom(var(edge)),or(data(sealantJoint),data(continuousClamp))),expr(fun(is),atom(rel(pane),var(structure)),data(fractured)),expr(fun(is),atom(rel(resistance),var(structure)),data(0.2kN_concentratedLoad)),expr(fun(lessThanEqual),atom(rel(deflection),var(structure)),data(250mm)))),then(permission(not(expr(fun(for),atom(var(interlinkedRail)),data(structure)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.6.c.1,"Interlinking rails are not required for a heat-strengthened or toughened laminated safety glass barrier that: has a stiff interlayer and will, when both panes of the laminate are fractured, resist a 0.2 kN concentrated load and not deflect more than 250 mm (see note 2).","if(and(expr(fun(is),atom(rel(material),var(structure)),data(glass)),expr(fun(actAs),atom(var(structure)),data(safetyBarrier)),expr(fun(is),atom(var(structure)),or(data(heatStrengthened),data(toughened))),expr(fun(is),atom(var(structure)),data(laminated)),expr(fun(has),atom(var(structure)),data(stiffInterlayer)),expr(fun(is),atom(rel(pane),var(structure)),data(fractured)),expr(fun(is),atom(rel(resistance),var(structure)),data(0.2kN_concentratedLoad)),expr(fun(lessThanEqual),atom(rel(deflection),var(structure)),data(250mm)))),then(permission(not(expr(fun(for),atom(var(interlinkedRail)),data(structure)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.7,"Physical testing of glass barriers must include all components of the barrier system, including all structural connections. Loads and deflections must be applied and measured horizontally, at midspan, at the required barrier height. The concentrated load shall be applied over an area of 100 mm x 100 mm and for at least one minute.","if(and(expr(fun(is),atom(rel(material),var(barrier)),data(glass)),expr(fun(has),atom(rel(system),var(barrier)),data(component)))),then(and(obligation(expr(fun(include),atom(rel(physicalTesting),var(barrier)),data(component))),obligation(expr(fun(include),atom(var(component)),data(structuralConnection))),obligation(expr(fun(applied),atom(rel(load),var(barrier)),data(horizontally))),obligation(expr(fun(measured),atom(rel(load),var(barrier)),data(horizontally))),obligation(expr(fun(appliedAt),atom(rel(load),var(barrier)),data(midspan))),obligation(expr(fun(measuredAt),atom(rel(load),var(barrier)),data(midspan))),obligation(expr(fun(applied),atom(rel(load),var(barrier)),data(requiredBarrierHeight))),obligation(expr(fun(measured),atom(rel(load),var(barrier)),data(requiredBarrierHeight))),obligation(expr(fun(applied),atom(rel(deflection),var(barrier)),data(horizontally))),obligation(expr(fun(measured),atom(rel(deflection),var(barrier)),data(horizontally))),obligation(expr(fun(appliedAt),atom(rel(deflection),var(barrier)),data(midspan))),obligation(expr(fun(measuredAt),atom(rel(deflection),var(barrier)),data(midspan))),obligation(expr(fun(appliedAt),atom(rel(deflection),var(barrier)),data(requiredBarrierHeight))),obligation(expr(fun(measuredAt),atom(rel(deflection),var(barrier)),data(requiredBarrierHeight))),obligation(expr(fun(is),atom(rel(applicationArea),var(load)),data(100mm_x_100mm))),obligation(expr(fun(greaterThanEqual),atom(rel(applicationDuration),var(load)),data(1minute)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.7.a.1,"NOTE – (1) The design of structural connections, fasteners and mounting hardware, that are part of the glass barrier, is outside the scope of this Standard and must be specifically designed.","if(and(expr(fun(is),atom(var(structure)),data(safetyBarrier)),expr(fun(has),atom(var(structure)),data(glass)))),then(and(prohibition(expr(fun(complyWith),atom(rel(design),var(connection)),data(nzbc_b1_as1))),prohibition(expr(fun(complyWith),atom(rel(design),var(fastener)),data(nzbc_b1_as1))),prohibition(expr(fun(complyWith),atom(rel(design),var(mountingHardware)),data(nzbc_b1_as1))),obligation(expr(fun(is),atom(rel(design),var(connection)),data(specific))),obligation(expr(fun(is),atom(rel(design),var(fastener)),data(specific))),obligation(expr(fun(is),atom(rel(design),var(mountingHardware)),data(specific)))))"
lrml/NZ_NZBC-B1AS1#0.17.lrml,r7.3.1.0.7.b.1,"NOTE - (2) Laminated glass is susceptible to minor edge delamination, depending on the interlayer type and laminating process. Normally this will not affect the mechanical properties but can be noticeable on exposed edges.","if(and(expr(fun(is),atom(rel(material),var(barrier)),data(glass)),expr(fun(has),atom(var(barrier)),data(properties)),expr(fun(is),atom(rel(type),var(properties)),data(mecahnical)),expr(fun(is),atom(var(glass)),data(laminated)),expr(fun(has),atom(var(glass)),data(exposedEdge)))),then(and(expr(fun(isSusceptibleTo),atom(rel(edge),var(glass)),data(delamination)),expr(fun(is),atom(var(delamination)),data(minor)),expr(fun(dependOn),atom(var(delamination)),and(data(interlayer),data(laminationProcess))),not(expr(fun(affect),atom(var(delamination)),data(properties))),expr(fun(is),atom(rel(delamination),var(exposedEdge)),data(noticeable))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.1.1.a,1.1.1 Accessible routes shall be provided to give direct access to the principal entrance to the building where practical,"if(and(expr(fun(has),atom(var(building)),data(entrance)),expr(fun(is),atom(var(entrance)),data(principal)),expr(fun(is),atom(var(accessibleRoute)),data(practical)))),then(obligation(expr(fun(by),atom(rel(directAccess),var(entrance)),data(accessibleRoute))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.1.1.b,"If it is not practical, the alternative most direct practical route to the space served by the principal entrance shall be used.","if(and(expr(fun(has),atom(var(building)),data(entrance)),expr(fun(is),atom(var(entrance)),data(principal)),not(expr(fun(is),atom(var(accessibleRoute)),data(practical))))),then(obligation(expr(fun(by),atom(rel(alternativeAccess),var(entrance)),data(accessibleRoute))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.1.3,"1.1.3 Where accessible units of Community service buildings are provided, an accessible route shall connect all accessible units to reception areas, offices, shops, dining rooms, kitchens, laundries, ablution blocks, recreation rooms and any other communal facilities.","if(and(expr(fun(is),atom(rel(activity),var(building)),data(communityService)),expr(fun(has),atom(var(building)),data(accessibleUnit)),or(expr(fun(is),atom(var(serviceArea)),data(reception)),expr(fun(is),atom(var(serviceArea)),data(office)),expr(fun(is),atom(var(serviceArea)),data(shop)),expr(fun(is),atom(var(serviceArea)),data(diningRoom)),expr(fun(is),atom(var(serviceArea)),data(kitchen)),expr(fun(is),atom(var(serviceArea)),data(laundry)),expr(fun(is),atom(var(serviceArea)),data(ablutionBlock)),expr(fun(is),atom(var(serviceArea)),data(recreationRoom))))),then(and(obligation(expr(fun(connect),atom(var(accessibleRoute)),data(serviceArea))),obligation(expr(fun(connect),atom(var(accessibleRoute)),data(accessibleUnit)))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.1.4,1.1.4 Figure 1 illustrates an acceptable solution with provision for people with disabilities to approach buildings.,"if(expr(fun(has),atom(rel(occupant),var(building)),data(disabilities))),then(and(obligation(expr(fun(complyWith),atom(rel(access),var(building)),data(figure))),expr(fun(equal),atom(rel(key),var(figure)),data(figure_1.1))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.1.5,1.1.5 Access routes which are part of an escape route shall also comply with NZBC C4.,"if(expr(fun(partOf),atom(var(accessRoute)),data(escapeRoute))),then(obligation(expr(fun(complyWith),atom(var(accessRoute)),data(nz_nzbc_c2_as1#1.0))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.2,1.2.1 Slope in direction of travel Acceptable slopes for different types of access routes are shown in Figure 2.,"if(expr(fun(has),atom(var(building)),data(accessRoute))),then(and(obligation(expr(fun(complyWith),atom(rel(slope),var(accessRoute)),data(figure))),expr(fun(equal),atom(rel(key),var(figure)),data(figure_2.1))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.3.1,"1.3.1 Except in household units or where permitted by Paragraph 1.3.2, a single isolated step shall not be permitted but the change of level shall be constructed as a ramp complying with Paragraph 3.0.","if(or(not(expr(fun(is),atom(rel(activity),var(building)),data(householdUnits))),expr(fun(equal),atom(rel(riskGroup),var(building)),data(SH1)))),then(obligation(expr(fun(greaterThan),expr(fun(count),atom(var(singleIsolatedStep))),data(0))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.3.2,1.3.2 Threshold weather stops projecting no more than 20 mm above the threshold finished surface are acceptable.,"if(and(expr(fun(has),atom(var(accessRoute)),data(singleIsolatedStep)),expr(fun(is),atom(rel(purpose),var(singleIsolatedStep)),data(thresholdWeatherStops)))),then(and(permission(expr(fun(has),atom(var(accessRoute)),data(singleIsolatedStep))),obligation(expr(fun(lessThanEqual),atom(rel(height),var(singleIsolatedStep)),data(baseUnit(kind(metre),prefix(milli)),value(20.0))))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r1.4,1.4.1 Access routes shall have height clearances complying with Table 1 and as shown in Figure 3.,"if(expr(fun(has),atom(var(building)),data(accessRoute))),then(and(obligation(expr(fun(complyWith),atom(rel(heightClearance),var(accessRoute)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_1.1)),expr(fun(complyWith),atom(rel(heightClearance),var(accessRoute)),data(figure)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_3.1))))"
lrml/NZ_NZBC-D1AS1#2.6.lrml,r2.1.2.0.1,"2.1.2 For level access routes (including level accessible routes) expected to become wet with water in normal use, walking surfaces shall either: in areas that are primarily used barefoot, such as around swimming pools and adjacent to communal showers, Classification 'B' from the ramp method of AS 4586 Appendix C gives an acceptable slip resistance for walking surfaces.","if(and(expr(fun(is),expr(fun(riskOf),atom(rel(floor),var(space))),data(wet)),or(expr(fun(is),atom(rel(activity),var(space)),data(accessRoute)),expr(fun(is),atom(rel(activity),var(space)),data(walking))),expr(fun(is),expr(fun(isLevel),atom(rel(floor),var(space))),data(true)))),then(or(obligation(expr(fun(greaterThanEqual),atom(rel(srv),var(flooring)),data(39))),and(expr(fun(complyWith),atom(rel(surfaceType),var(floor)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(2.0)),expr(fun(equal),atom(rel(acceptableWetSlipResistance),var(table)),data(Yes)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r1.1.1.0.1,Attached garages that are integral with the weathertightness envelope of the building are included within the scope of this Acceptable Solution,"if(and(expr(fun(has),atom(var(building)),data(weathertightnessEnvelope)),expr(fun(integralWith),atom(var(attachedGarage)),data(weathertightnessEnvelope)))),then(expr(fun(complyWith),atom(var(attachedGarage)),data(nzbc_e2)))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r1.2.1.0.1,"Outbuildings, such as stand-alone garages and other structures that are unlined, are outside the scope of this Acceptable Solution.","if(and(expr(fun(include),atom(var(outbuilding)),data(standAloneGarage)),expr(fun(include),atom(var(outbuilding)),data(unlinedStructure)))),then(prohibition(expr(fun(complyWith),atom(var(outbuilding)),data(nzbc_e2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r2.1.0.1,2.1 Weathertightness Cladding systems shall meet the requirements of NZBC E2.2 to E2.3.7,"if(expr(fun(equal),atom(var(claddingSystem)),data(true))),then(and(obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.2))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.1))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.2))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.3))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.4))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.5))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.6))),obligation(expr(fun(complyWith),atom(var(claddingSystem)),data(nzbc_e2.3.7)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r3.3.0.1,3.3 Wall claddings The following wall cladding systems are covered in this Acceptable Solution: a) Masonry veneer Paragraph 9.2 b) Stucco Paragraph 9.3 c) Timber weatherboards Paragraph 9.4 d) Fibre cement weatherboards Paragraph 9.5 e) Profiled metal wall claddings Paragraph 9.6 f) Fibre cement sheet Paragraph 9.7 g) Plywood sheet Paragraph 9.8 h) EIFS Paragraph 9.9.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),or(expr(fun(is),atom(rel(system),var(cladding)),data(masonryVeneer)),expr(fun(is),atom(rel(system),var(cladding)),data(stucco)),expr(fun(is),atom(rel(system),var(cladding)),data(timberWeatherboard)),expr(fun(is),atom(rel(system),var(cladding)),data(fibreCementWeatherboard)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetalWallCladding)),expr(fun(is),atom(rel(system),var(cladding)),data(fibreCementSheet)),expr(fun(is),atom(rel(system),var(cladding)),data(plywoodSheet)),expr(fun(is),atom(rel(system),var(cladding)),data(EIFS))))),then(obligation(expr(fun(complyWith),atom(rel(system),var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r3.3.0.2,Other wall claddings are outside the scope of this Acceptable Solution.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),or(not(expr(fun(is),atom(rel(system),var(cladding)),data(masonryVeneer))),not(expr(fun(is),atom(rel(system),var(cladding)),data(stucco))),not(expr(fun(is),atom(rel(system),var(cladding)),data(timberWeatherboard))),not(expr(fun(is),atom(rel(system),var(cladding)),data(fibreCementWeatherboard))),not(expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetalWallCladding))),not(expr(fun(is),atom(rel(system),var(cladding)),data(fibreCementSheet))),not(expr(fun(is),atom(rel(system),var(cladding)),data(plywoodSheet))),not(expr(fun(is),atom(rel(system),var(cladding)),data(EIFS)))))),then(prohibition(expr(fun(complyWith),atom(var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r3.4.1.1.0.0.a.1,"3.4.1.1 Cladding options As all faces score low, cladding options from Table 3 are: a) Direct fixed claddings: i) Timber weatherboards – all types shown ii) Fibre cement weatherboards iii) Vertical profiled metal – corrugated and symmetrical trapezoidal only iv) Fibre cement sheet – not flush-finished v) Plywood sheet","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(has),atom(var(cladding)),data(fixing)),or(expr(fun(is),atom(rel(type),var(cladding)),data(timberWeatherboard)),expr(fun(is),atom(rel(type),var(cladding)),data(fibreCementWeatherboard)),expr(fun(is),atom(rel(type),var(cladding)),data(verticalProfiledMetal)),expr(fun(is),atom(rel(type),var(cladding)),data(fibreCementSheet)),expr(fun(is),atom(rel(type),var(cladding)),data(plywoodSheet))))),then(obligation(expr(fun(is),atom(rel(method),var(fixing)),data(direct))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.1.0.1,4.1 Materials for flashings Acceptable materials for flashing junctions and penetrations are described in Paragraph 4.3.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(for),atom(rel(material),var(flashing)),data(cladding)),expr(fun(for),atom(rel(material),var(junction)),data(cladding)),expr(fun(for),atom(rel(material),var(penetration)),data(cladding)))),then(and(obligation(expr(fun(complyWith),atom(rel(material),var(flashing)),data(rule))),obligation(expr(fun(complyWith),atom(rel(material),var(junction)),data(rule))),obligation(expr(fun(complyWith),atom(rel(material),var(penetration)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.3.0.1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.2.2.0.1,"4.2.2 Surrounding materials Metals which are in contact in locations where they will become wet, or where water can flow over metals or certain plastics onto another metal, shall be selected in accordance with Table 21 and Table 22.","if(and(expr(fun(is),atom(rel(material),var(object)),data(metal)),expr(fun(exposedTo),atom(var(object)),data(moisture)))),then(and(obligation(expr(fun(from),atom(rel(selection),var(object)),data(t_21))),obligation(expr(fun(from),atom(rel(selection),var(object)),data(t_22)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.0.1,"4.3 Acceptable flashing materials Tables 20, 21 and 22 shall be used to assess suitability of flashing materials for the required durability.","if(obligation(expr(fun(has),atom(rel(material),var(flashing)),data(durability)))),then(and(obligation(expr(fun(complyWith),atom(rel(material),var(flashing)),data(table))),and(expr(fun(equal),atom(rel(key),var(table)),data(t_20)),expr(fun(equal),atom(rel(key),var(table)),data(t_21)),expr(fun(equal),atom(rel(key),var(table)),data(t_22)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.1.0.2,"uPVC flashings shall comply with the requirements of the following Clauses of AS/NZS 4256: Part 2: a) Clause 9.2 Impact resistance, b) Clause 9.3 Tensile strength, and c) Clause 9.4 Colourfastness and impact resistance following ultraviolet light exposure.","if(expr(fun(exposedTo),atom(var(flashing)),data(weather))),then(and(obligation(expr(fun(complyWith),atom(var(flashing)),data(as/nzs_4256_part_2_clause_9.2))),obligation(expr(fun(complyWith),atom(var(flashing)),data(as/nzs_4256_part_2_clause_9.3))),obligation(expr(fun(complyWith),atom(var(flashing)),data(as/nzs_4256_part_2_clause_9.4))),obligation(expr(fun(complyWith),atom(var(flashing)),data(as/nzs_4256_part_2_section_8)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.1.0.3,"uPVC flashings shall have a finish colour with a reflectance of 40% or more, as outlined in Paragraph 2.4.","if(and(expr(fun(is),atom(rel(material),var(flashing)),data(uPVC)),expr(fun(has),atom(var(upvcFlashing)),data(finishColour)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(reflectance),var(finishColour)),data(40%))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.5.0.1,"4.3.5 Stainless steel flashings Stainless steel flashings shall be: a) Minimum thickness of 0.45 mm, and b) 304 or 316 stainless steel in accordance with Table 1 of ISO/TS 15510.","if(and(expr(fun(equal),atom(var(flashing)),data(true)),expr(fun(is),atom(rel(material),var(flashing)),data(stainlessSteel)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(flashing)),data(baseUnit(prefix(milli),kind(metre)),value(0.45)))),or(obligation(expr(fun(equal),atom(rel(grade),var(stainlessSteel)),data(304))),obligation(expr(fun(equal),atom(rel(grade),var(stainlessSteel)),data(316)))),obligation(expr(fun(asPer),atom(rel(grade),var(stainlessSteel)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_1)),expr(fun(in),atom(var(table)),data(iso/ts_15510))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.6.0.1,"4.3.6 Copper flashings Copper flashings shall be: a) A minimum thickness of 0.5 mm, b) In compliance with AS 1566, and c) Alloy, designation C11000 or C12200.","if(expr(fun(is),atom(rel(material),var(flashing)),data(copper))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(flashing)),data(baseUnit(kind(metre),prefix(milli)),value(0.5)))),obligation(expr(fun(complyWith),atom(var(flashing)),data(as_1566))),or(obligation(expr(fun(equal),atom(rel(type),var(flashing)),data(alloy_c11000))),obligation(expr(fun(equal),atom(rel(type),var(flashing)),data(alloy_c12200))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.7.0.1,"Lead sheet flashings shall: a) Comply with AS 1804, and b) Have a minimum unit mass of 17 kg/m2.","if(expr(fun(is),atom(rel(material),var(flashing)),data(lead))),then(and(obligation(expr(fun(complyWith),atom(var(flashing)),data(as_1804))),obligation(expr(fun(greaterThanEqual),atom(rel(unitMass),var(flashing)),data(derivedUnit(baseUnit(prefix(kilo),kind(gram)),operator(name(division)),baseUnit(exponent(2.0),kind(metre))),value(17.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.9.0.1,"4.3.9 Butyl rubber and EPDM flashings Butyl rubber flashings shall only be used in accordance with Tables 20, 21 and 22.","if(expr(fun(is),atom(rel(material),var(flashing)),data(butylRubber))),then(and(obligation(expr(fun(complyWith),atom(rel(application),var(flashing)),data(table))),and(expr(fun(equal),atom(rel(key),var(table)),data(t_20)),expr(fun(equal),atom(rel(key),var(table)),data(t_21)),expr(fun(equal),atom(rel(key),var(table)),data(t_22)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.9.0.2,"Butyl rubber and EPDM flashings shall be a minimum thickness of 1.0 mm, and shall comply with the following parts of Table 1 in ASTM D6134: a) Tensile strength, b) Elongation, c) Water absorption, d) Water vapour permeance, and e) Heat aging followed by: i) tensile strength ii) elongation.","if(or(expr(fun(is),atom(rel(material),var(flashing)),data(butylRubberFlashing)),expr(fun(is),atom(rel(material),var(flashing)),data(epdmFlashing)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(flashing)),data(baseUnit(prefix(milli),kind(metre)),value(1.0)))),obligation(expr(fun(complyWith),atom(var(flashing)),data(table))),expr(fun(in),atom(var(table)),data(astm_d6134)),expr(fun(equal),atom(rel(key),var(table)),data(t_1)),and(expr(fun(is),atom(rel(topic),var(table)),data(tensileStrength)),expr(fun(is),atom(rel(topic),var(table)),data(elongation)),expr(fun(is),atom(rel(topic),var(table)),data(waterAbsorption)),expr(fun(is),atom(rel(topic),var(table)),data(waterVapourPermeance)),expr(fun(is),atom(rel(topic),var(table)),data(heatAging))),and(expr(fun(is),atom(rel(topic),var(table)),data(tensileStrength)),expr(fun(is),atom(rel(topic),var(table)),data(elongation)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.10.0.1,4.3.10 Bituminous flashings Bituminous flashings shall only be used in accordance with Table 20.,"if(expr(fun(is),atom(rel(material),var(flashing)),data(bituminous))),then(obligation(expr(fun(complyWith),atom(rel(application),var(flashing)),data(t_20))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.3.10.0.2,"Flashings made from bitumen-impregnated material shall: a) Comply with AS/NZS 2904, and b) Be used only in fully concealed applications.","if(expr(fun(has),atom(rel(material),var(flashing)),data(bituminous))),then(and(obligation(expr(fun(complyWith),atom(var(flashing)),data(as/nzs_2904))),obligation(expr(fun(in),atom(rel(application),var(flashing)),data(environment))),expr(fun(is),atom(var(environment)),data(fullyConcealed))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.4.0.1,"4.4 Fixings Fixings of metal flashings shall comply with Tables 20, 21 and 22.","if(and(expr(fun(has),atom(var(flashing)),data(fixing)),expr(fun(is),atom(rel(material),var(fixing)),data(metal)))),then(and(obligation(expr(fun(complyWith),atom(var(fixing)),data(table))),and(expr(fun(equal),atom(rel(key),var(table)),data(t_20)),expr(fun(equal),atom(rel(key),var(table)),data(t_21)),expr(fun(equal),atom(rel(key),var(table)),data(t_22)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.5.1.0.1,4.5.1 Edge treatments for flashings Flashings shall be to the dimensions shown throughout this Acceptable Solution.,"if(expr(fun(has),atom(var(flashing)),data(dimension))),then(obligation(expr(fun(complyWith),atom(var(dimension)),data(nzbc_e2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.5.2.0.1.c.1,"Joins of metal flashings shall have the following features: Where both ends of a flashing are constrained, allowance shall be made for expansion","if(and(expr(fun(is),atom(rel(material),var(flashing)),data(metal)),expr(fun(has),atom(var(flashing)),data(join)),expr(fun(is),atom(var(flashing)),data(constrained)))),then(obligation(expr(fun(has),atom(var(flashing)),data(expansionJoint))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.5.2.0.1.d.1,"Joins of metal flashings shall have the following features: d) Where necessary, expansion joints shall be formed as shown in Figure 6, with: i) minimum 200 mm laps, and ii) sliding clips at both sides of the lap","if(and(expr(fun(is),atom(rel(material),var(flashing)),data(metal)),expr(fun(has),atom(var(flashing)),data(expansionJoint)),expr(fun(has),atom(var(expansionJoint)),data(overlap)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(length),var(overlap)),data(baseUnit(kind(metre),prefix(milli)),value(200.0)))),obligation(expr(fun(has),expr(fun(sideOf),atom(var(overlap))),data(slidingClip)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.5.2.0.1.e.1,"Joins of metal flashings shall have the following features: When using uncoated galvanized steel, zinc, stainless steel or copper flashings, joints shall be riveted or soldered as described in the New Zealand Metal Roof and Wall Cladding Code of Practice","if(and(expr(fun(is),atom(rel(material),var(flashing)),data(metal)),expr(fun(has),atom(var(flashing)),data(expansionJoint)),or(expr(fun(is),atom(rel(material),var(flashing)),data(uncoatedGalvanizedSteel)),expr(fun(is),atom(rel(material),var(flashing)),data(uncoatedGalvanizedZinc)),expr(fun(is),atom(rel(material),var(flashing)),data(uncoatedGalvanizedStainlessSteel)),expr(fun(is),atom(rel(material),var(flashing)),data(uncoatedGalvanizedCopper))))),then(and(and(obligation(expr(fun(complyWith),atom(rel(method),var(expansionJoint)),data(NewZealandMetalRoof))),obligation(expr(fun(complyWith),atom(rel(method),var(expansionJoint)),data(WallCladdingCodeofPractice)))),or(obligation(expr(fun(is),atom(rel(method),var(expansionJoint)),data(riveted))),obligation(expr(fun(is),atom(rel(method),var(expansionJoint)),data(soldered))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r4.6.0.4,Where a notched turn-down is used there shall be a gap between the edge of the flashing and the pan of the roof cladding. The gap shall be a maximum of 5 mm.,"then(and(and(obligation(expr(fun(between),atom(var(gap)),data(edge))),obligation(expr(fun(between),atom(var(gap)),data(pan)))),obligation(expr(fun(lessThanEqual),atom(rel(size),var(gap)),data(baseUnit(kind(metre),prefix(milli)),value(5.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r6.1.0.1,"6.1 Limitations This Acceptable Solution does not cover parapet cappings that use stucco, EIFS and flush-finished fibre cement materials.","if(and(expr(fun(has),atom(var(parapet)),data(capping)),or(expr(fun(is),atom(rel(material),var(capping)),data(stucco)),expr(fun(is),atom(rel(material),var(capping)),data(eifs)),expr(fun(is),atom(rel(material),var(capping)),data(flushFinishedFibreCement))))),then(not(expr(fun(complyWith),atom(var(capping)),data(nzbc_e2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r6.4.0.4,and with: i) minimum 200 mm laps ii) sliding clips at both sides of the lap.,"then(and(obligation(expr(fun(greaterThanEqual),atom(rel(length),var(overlap)),data(baseUnit(kind(metre),prefix(milli)),value(200.0)))),obligation(expr(fun(has),expr(fun(sideOf),atom(var(overlap))),data(slidingClip)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r6.5.0.1.a.1," 6.5 Membrane cappings Butyl rubber and EPDM cappings shall be in accordance with Paragraph 4.3.9, and comply with the following requirements: a) Tops of membrane cappings shall be free of any penetrations, and shall have a minimum slope of 10° (1:6)","if(and(or(expr(fun(is),atom(rel(material),var(capping)),data(butylRubber)),expr(fun(is),atom(rel(material),var(capping)),data(epdm))),expr(fun(define),expr(fun(topOf),atom(var(capping))),data(a)))),then(and(obligation(expr(fun(complyWith),atom(var(capping)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.3.9)),prohibition(expr(fun(has),atom(var(a)),data(penetration))),obligation(expr(fun(greaterThanEqual),atom(rel(slope),var(a)),data(baseUnit(kind(angleDegree)),value(10.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r6.5.0.1.c.1,"6.5 Membrane cappings Butyl rubber and EPDM cappings shall be in accordance with Paragraph 4.3.9, and comply with the following requirements: Joints shall be in accordance with Paragraph 8.5.5.2.","if(and(or(expr(fun(is),atom(rel(material),var(capping)),data(butylRubber)),expr(fun(is),atom(rel(material),var(capping)),data(epdm))),expr(fun(has),atom(var(capping)),data(expansionJoint)))),then(and(obligation(expr(fun(complyWith),atom(var(expansionJoint)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.5.5.2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r7.1.1.0.1.b.1,7.1.1 Slatted decks The level of the upper surface of the slatted deck: May be at the same level as the threshold for non-cantilevered decks that are formed as shown in Figure 14(c).,"if(and(expr(fun(is),atom(var(deck)),data(slatted)),not(expr(fun(is),atom(var(deck)),data(cantilevered))),expr(fun(define),atom(rel(upperSurface),var(deck)),data(a)),expr(fun(define),atom(var(thresholdLevel)),data(b)))),then(permission(expr(fun(equal),atom(var(a)),data(b))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r7.1.2.0.1,"7.1.2 Enclosed decks This Acceptable Solution is limited to enclosed decks with a maximum area of 40 m2. For enclosed decks, the vertical separation between the opening threshold level and the upper surface of the finished deck surface shall be a minimum of 100 mm.","if(and(expr(fun(is),atom(var(deck)),data(enclosed)),expr(fun(is),atom(rel(surface),var(deck)),data(finished)),expr(fun(lessThanEqual),atom(rel(area),var(deck)),data(baseUnit(exponent(2.0),kind(metre)),value(40.0))),expr(fun(define),atom(rel(upperSurface),var(deck)),data(a)),expr(fun(define),atom(var(thresholdLevel)),data(b)))),then(and(obligation(expr(fun(complyWith),atom(var(deck)),data(e2as1))),and(expr(fun(between),atom(var(separation)),data(a)),expr(fun(between),atom(var(separation)),data(b))),obligation(expr(fun(greaterThanEqual),atom(var(separation)),data(baseUnit(prefix(milli),kind(metre)),value(100.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r7.2.1.0.1,7.2.1 Slatted timber decks to walls Junctions of slatted timber decks with walls shall be made weathertight as shown in Figures 15 and 16.,"if(and(expr(fun(is),atom(var(deck)),data(slatted)),expr(fun(is),atom(rel(material),var(deck)),data(timber)),expr(fun(adjoin),atom(var(wall)),data(deck)),and(expr(fun(between),atom(var(junction)),data(deck)),expr(fun(between),atom(var(junction)),data(wall))))),then(obligation(expr(fun(is),atom(var(junction)),data(weathertight))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.1.0.1,"8.1.1 Weathertightness Roof claddings shall meet the requirements of NZBC E2.2, and be specified and constructed in accordance with the provisions of Paragraph 8.1.2 to Paragraph 8.5.","if(expr(fun(is),atom(rel(application),var(cladding)),data(roof))),then(and(obligation(expr(fun(complyWith),atom(var(cladding)),data(nzbc_e2.2))),obligation(expr(fun(complyWith),atom(rel(specification),var(cladding)),data(rule))),obligation(expr(fun(complyWith),atom(rel(construction),var(cladding)),data(rule))),and(expr(fun(equal),atom(rel(key),var(rule)),data(8.1)),expr(fun(equal),atom(rel(key),var(rule)),data(8.2)),expr(fun(equal),atom(rel(key),var(rule)),data(8.3)),expr(fun(equal),atom(rel(key),var(rule)),data(8.4)),expr(fun(equal),atom(rel(key),var(rule)),data(8.5)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.2.0.1,8.1.2 Limitations The following roof cladding systems are covered in this Acceptable Solution: a) Masonry tiles Paragraph 8.2 b) Pressed metal tiles Paragraph 8.3 c) Profiled metal roof claddings Paragraph 8.4 d) Membrane roofing Paragraph 8.5.,"if(and(or(expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile)),expr(fun(is),atom(rel(system),var(cladding)),data(pressedMetalTile)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetalRoofCladding)),expr(fun(is),atom(rel(system),var(cladding)),data(membraneRoofing))),expr(fun(is),atom(rel(application),var(cladding)),data(roof)))),then(obligation(expr(fun(complyWith),atom(var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.2.0.2,Other roof claddings are beyond the scope of this Acceptable Solution.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),or(not(expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile))),not(expr(fun(is),atom(rel(system),var(cladding)),data(pressedMetalTile))),not(expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetalRoofCladding))),not(expr(fun(is),atom(rel(system),var(cladding)),data(membraneRoofing)))))),then(prohibition(expr(fun(complyWith),atom(var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.3.1.0.1,8.1.3.1 Projecting eaves Soffits and verges of all projecting eaves shall be closed in.,"if(and(expr(fun(has),atom(var(roof)),data(eave)),expr(fun(is),atom(var(eave)),data(projecting)),and(expr(fun(has),atom(var(eave)),data(soffit)),expr(fun(has),atom(var(eave)),data(verge))))),then(and(obligation(expr(fun(is),atom(var(soffit)),data(closedIn))),obligation(expr(fun(is),atom(var(verge)),data(closedIn)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.4.0.1,"8.1.4 Fixings Fixings shall be as specified in Paragraph 8.2 to Paragraph 8.5. Materials for fixing roof claddings and flashings, where necessary, shall be selected from Tables 20, 21 and 22 to minimise corrosion.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(has),atom(var(cladding)),data(fixing)),expr(fun(for),atom(var(flashing)),data(cladding)))),then(and(obligation(expr(fun(complyWith),atom(var(fixing)),data(rule))),and(expr(fun(equal),atom(rel(key),var(rule)),data(8.2)),expr(fun(equal),atom(rel(key),var(rule)),data(8.3)),expr(fun(equal),atom(rel(key),var(rule)),data(8.4)),expr(fun(equal),atom(rel(key),var(rule)),data(8.5))),obligation(expr(fun(asPer),atom(rel(material),var(fixing)),data(table))),obligation(expr(fun(asPer),atom(rel(material),var(flashing)),data(table))),and(expr(fun(equal),atom(rel(key),var(table)),data(t_20)),expr(fun(equal),atom(rel(key),var(table)),data(t_21)),expr(fun(equal),atom(rel(key),var(table)),data(t_22)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.5.0.1,"8.1.5 Roof underlays Roof underlays shall be to Table 23 and NZS 2295, and be either: • R1 heavy weight kraft, or • R2 self supporting kraft.","if(expr(fun(is),atom(rel(application),var(underlay)),data(roof))),then(and(obligation(expr(fun(complyWith),atom(var(underlay)),data(nzs_2295))),obligation(expr(fun(asPer),atom(var(underlay)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_23)),or(obligation(expr(fun(is),atom(rel(type),var(underlay)),data(r1HeavyWeightKraft))),obligation(expr(fun(is),atom(rel(type),var(underlay)),data(r2SelfSupportingKraft))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.5.0.2,"Underlays shall be: • Layed with minimum numbers of laps • Lapped at all side and end laps by minimum 150 mm • Run horizontally for roof pitches below 10° • Run horizontally or vertically for roof pitches above 10° • Have anti-ponding boards at lower edges of masonry tiles, refer Figure 25(b) and Paragraph 8.2.5.","if(and(expr(fun(is),atom(rel(application),var(underlay)),data(roof)),expr(fun(has),atom(var(underlay)),data(overlap)))),then(and(obligation(expr(fun(is),expr(fun(count),atom(var(overlap))),data(minimum))),obligation(expr(fun(greaterThanEqual),atom(rel(width),var(overlap)),data(baseUnit(kind(metre),prefix(milli)),value(150.0)))),or(and(obligation(expr(fun(is),atom(rel(orientation),var(underlay)),data(horizontal))),expr(fun(lessThan),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(10.0)))),and(or(obligation(expr(fun(is),atom(rel(orientation),var(underlay)),data(horizontal))),obligation(expr(fun(is),atom(rel(orientation),var(underlay)),data(vertical)))),expr(fun(greaterThan),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(10.0))))),obligation(expr(fun(has),atom(rel(lowerEdge),var(masonryTile)),data(antiPondingBoard))),expr(fun(is),atom(rel(claddingSystem),var(roof)),data(masonryTile))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.0.1,"8.1.6 Gutters general Gutters, downpipes and spreaders, including eaves gutters/spoutings are required for the drainage of roof water","if(and(expr(fun(has),atom(var(roof)),data(water)),obligation(expr(fun(is),atom(rel(drainage),var(roof)),data(true))))),then(and(and(obligation(expr(fun(has),atom(rel(drainage),var(roof)),data(gutter))),obligation(expr(fun(has),atom(rel(drainage),var(roof)),data(downpipe))),obligation(expr(fun(has),atom(rel(drainage),var(roof)),data(spreader)))),and(obligation(expr(fun(has),atom(rel(drainage),var(roof)),data(eavesGutter))),obligation(expr(fun(has),atom(rel(drainage),var(roof)),data(spouting))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.0.1.a.1,"8.1.6 Gutters general Gutters, downpipes and spreaders, including eaves gutters/spoutings are required for the drainage of roof water, and shall: a) Be to the minimum dimensions shown in this Acceptable Solution, or calculated to E1/AS1, whichever is the greater","if(and(expr(fun(has),atom(var(roof)),data(water)),obligation(expr(fun(is),atom(rel(drainage),var(roof)),data(true))),expr(fun(equal),atom(rel(dimension),var(gutter)),data(max(a1,a2))),expr(fun(equal),atom(rel(dimension),var(downpipe)),data(max(b1,b2))),expr(fun(equal),atom(rel(dimension),var(spreader)),data(max(c1,c2))))),then(or(and(expr(fun(define),atom(rel(dimension),var(gutter)),data(a1)),expr(fun(define),atom(rel(dimension),var(downpipe)),data(b1)),expr(fun(define),atom(rel(dimension),var(spreader)),data(c1)),expr(fun(complyWith),atom(var(a1)),data(nzbc_e1_as1)),expr(fun(complyWith),atom(var(b1)),data(nzbc_e1_as1)),expr(fun(complyWith),atom(var(c1)),data(nzbc_e1_as1))),and(expr(fun(define),atom(rel(dimension),var(gutter)),data(a2)),expr(fun(define),atom(rel(dimension),var(downpipe)),data(b2)),expr(fun(define),atom(rel(dimension),var(spreader)),data(c2)),expr(fun(complyWith),atom(var(a2)),data(nzbc_e2_as1)),expr(fun(complyWith),atom(var(b2)),data(nzbc_e2_as1)),expr(fun(complyWith),atom(var(c2)),data(nzbc_e2_as1)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.1.0.0.a.1,"8.1.6.1 Internal gutters Internal gutters shall: a) Be formed with continuous butyl or EPDM strip complying with Paragraph 4.3.9, with no cross-joints in the gutter, or aluminium, copper, stainless steel, or zinc sheet to Paragraph 4.3, with joints that are welded","if(expr(fun(is),atom(rel(type),var(gutter)),data(internal))),then(or(and(not(expr(fun(has),atom(var(gutter)),data(crossJoint))),or(obligation(expr(fun(is),atom(rel(material),var(gutter)),data(butyl))),obligation(expr(fun(is),atom(rel(material),var(gutter)),data(epdm)))),obligation(expr(fun(complyWith),atom(rel(material),var(gutter)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.3.9))),and(expr(fun(has),atom(var(gutter)),data(joint)),expr(fun(is),atom(var(joint)),data(welded)),or(obligation(expr(fun(is),atom(rel(material),var(gutter)),data(aluminium))),obligation(expr(fun(is),atom(rel(material),var(gutter)),data(copper))),obligation(expr(fun(is),atom(rel(material),var(gutter)),data(stainlessSteel))),obligation(expr(fun(is),atom(rel(material),var(gutter)),data(zinc)))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.1.0.0.b.1,"8.1.6.1 Internal gutters Internal gutters shall: b) Where butyl or EPDM, be minimum 1.5 mm membrane thickness, or 1.0 mm thickness for gutters less than 1 metre wide","if(and(expr(fun(is),atom(rel(type),var(gutter)),data(internal)),or(expr(fun(is),atom(rel(material),var(gutter)),data(butyl)),expr(fun(is),atom(rel(material),var(gutter)),data(epdm))))),then(or(and(expr(fun(lessThan),atom(rel(width),var(gutter)),data(baseUnit(kind(metre)),value(1.0))),obligation(expr(fun(equal),atom(rel(thickness),var(gutter)),data(baseUnit(prefix(milli),kind(metre)),value(1.0))))),and(expr(fun(greaterThanEqual),atom(rel(width),var(gutter)),data(baseUnit(kind(metre)),value(1.0))),obligation(expr(fun(equal),atom(rel(thickness),var(gutter)),data(baseUnit(prefix(milli),kind(metre)),value(1.5)))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.1.0.0.c.1, 8.1.6.1 Internal gutters Internal gutters shall: c) Have a minimum slope of 1:100,"if(expr(fun(is),atom(rel(type),var(gutter)),data(internal))),then(obligation(expr(fun(equal),expr(fun(min),atom(rel(slope),var(gutter))),data(0.111111111))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.1.0.0.e.1,"8.1.6.1 Internal gutters Internal gutters shall: Be constructed to at least the minimum dimensions shown in Figure 52, or the capacity calculated to E1/AS1 plus an additional freeboard depth of 20 mm minimum.","if(not(expr(fun(is),atom(rel(type),var(roof)),data(membrane)))),then(obligation(expr(fun(equal),expr(fun(min),atom(var(b))),data(baseUnit(prefix(milli),kind(metre)),value(20.0)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.6.2.0.2,"In addition: f) Have minimum slopes of 8° for hidden gutters, and to Table 8 for valley gutters g) Hidden gutters receive no discharge from downpipes or spreaders","if(and(expr(fun(is),atom(rel(type),var(gutter)),data(hidden)),expr(fun(is),expr(fun(min),atom(rel(slope),var(gutter))),data(baseUnit(kind(angleDegree)),value(8.0))),prohibition(expr(fun(into),atom(rel(discharge),var(downpipe)),data(gutter))))),then(prohibition(expr(fun(into),atom(rel(discharge),var(spreader)),data(gutter))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.7.0.1,8.1.7 Roof penetrations Roof penetrations shall be made weathertight in accordance with Paragraph 8.2 to Paragraph 8.5.,"if(expr(fun(is),atom(rel(application),var(penetration)),data(roof))),then(and(obligation(expr(fun(is),atom(var(penetration)),data(weathertight))),obligation(expr(fun(complyWith),atom(var(penetration)),data(rule))),and(expr(fun(equal),atom(rel(key),var(rule)),data(8.2)),expr(fun(equal),atom(rel(key),var(rule)),data(8.3)),expr(fun(equal),atom(rel(key),var(rule)),data(8.4)),expr(fun(equal),atom(rel(key),var(rule)),data(8.5)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.7.0.2,"Where roof penetrations are required for large openings such as roof lights and chimneys, this Acceptable Solution is limited to the following requirements:","if(and(expr(fun(is),atom(rel(application),var(penetration)),data(roof)),and(expr(fun(include),atom(var(opening)),data(roofLight)),expr(fun(include),atom(var(opening)),data(chimney))),expr(fun(is),atom(rel(size),var(opening)),data(large)),obligation(expr(fun(has),atom(var(opening)),data(penetration))),and(expr(fun(equal),atom(rel(key),var(rule)),data(8.1.7.0.2.a.1)),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.7.0.2.b.1))))),then(expr(fun(complyWith),atom(var(penetration)),data(nzbc_e2_as1)))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.1.7.0.2.b.1,"Where roof penetrations are required for large openings such as roof lights and chimneys, this Acceptable Solution is limited to the following requirements:For the catchment area of the roof above the penetration as shown in Figure 22, the roof length shall be limited to: i) for profiled metal roofing, Table 17 ii) for other roof claddings, the areas shown in Table 9.","if(and(expr(fun(is),atom(rel(application),var(penetration)),data(roof)),expr(fun(above),atom(rel(catchmentArea),var(roof)),data(penetration)),expr(fun(is),atom(rel(application),var(cladding)),data(roof)))),then(or(and(expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),obligation(expr(fun(asPer),atom(rel(length),var(catchmentArea)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_17))),and(not(expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal))),obligation(expr(fun(asPer),atom(rel(length),var(catchmentArea)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_9)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.1.0.1,8.2.1 Materials Concrete tiles shall meet the requirements of NZS 4206 or AS 2049.,"if(expr(fun(is),atom(rel(material),var(tile)),data(concrete))),then(or(obligation(expr(fun(complyWith),atom(var(tile)),data(nzs_4206))),obligation(expr(fun(complyWith),atom(var(tile)),data(as_2049)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.1.0.2,8.2.1 Materials Clay tiles shall meet the requirements of AS 2049.,"if(expr(fun(is),atom(rel(material),var(tile)),data(clay))),then(obligation(expr(fun(complyWith),atom(var(tile)),data(as_2049))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.1.1.0.0.a.1,"8.2.1.1 Tile profiles For the purposes of this paragraph, tiles shall be divided into three types as listed below: a) Type I: Double profile tiles having two distinct watercourses with a minimum watercourse depth of 18 mm","if(expr(fun(is),atom(rel(type),var(tile)),data(doubleProfile))),then(and(expr(fun(equal),expr(fun(count),atom(rel(watercourse),var(tile))),data(2)),expr(fun(equal),expr(fun(min),atom(rel(depth),var(watercourse))),data(baseUnit(prefix(milli),kind(metre)),value(18.0)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.1.1.0.0.b.1,"8.2.1.1 Tile profiles For the purposes of this paragraph, tiles shall be divided into three types as listed below: Type II: Single profile tiles having one water- course depth of a minimum of 25 mm","if(expr(fun(is),atom(rel(type),var(tile)),data(singleProfile))),then(and(expr(fun(equal),expr(fun(count),atom(rel(watercourse),var(tile))),data(1)),expr(fun(equal),expr(fun(min),atom(rel(depth),var(watercourse))),data(baseUnit(prefix(milli),kind(metre)),value(25.0)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.1.1.0.0.c.1,"For the purposes of this paragraph, tiles shall be divided into three types as listed below: c) Type III: Tiles not fitting the Type I or Type II categories, and includes flat tiles and those resembling slates, shakes and shingles.","if(and(expr(fun(is),atom(rel(type),var(tile)),data(III)),or(not(expr(fun(is),atom(rel(type),var(tile)),data(singleProfile))),not(expr(fun(is),atom(rel(type),var(tile)),data(doubleProfile)))))),then(and(expr(fun(include),atom(var(tile)),data(flatTile)),expr(fun(include),atom(var(tile)),data(resemblingSlate)),expr(fun(include),atom(var(tile)),data(resemblingShake)),expr(fun(include),atom(var(tile)),data(resemblingShingle))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.1,"8.2.3 Installation Masonry tile roof cladding shall be installed in accordance with NZS 4206 or AS 2050 onto minimum H1.2 treated timber battens, except the minimum pitch shall be as specified in Table 10.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile)))),then(and(or(obligation(expr(fun(complyWith),atom(rel(installation),var(cladding)),data(nzs_4206))),obligation(expr(fun(complyWith),atom(rel(installation),var(cladding)),data(as_2050)))),expr(fun(onto),atom(rel(installation),var(cladding)),data(batten)),expr(fun(is),atom(rel(material),var(batten)),data(timber)),obligation(expr(fun(is),atom(rel(treatmentClass),var(timber)),data(H1.2))),obligation(expr(fun(asPer),expr(fun(min),atom(rel(pitch),var(cladding))),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_10))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.2,underlay shall comply with Table 23.,"then(and(obligation(expr(fun(complyWith),atom(var(underlay)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_23))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.3,"8.2.3 Installation Fixing and fixing patterns shall be to NZS 4206, with the exception that nails shall penetrate a minimum of 35 mm into timber battens, and the minimum pitches and roof underlay shall be as described in Table 10 and Table 23.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(onto),atom(rel(installation),var(cladding)),data(batten)),expr(fun(is),atom(rel(material),var(batten)),data(timber)),expr(fun(is),atom(rel(application),var(underlay)),data(roof)))),then(and(expr(fun(into),atom(rel(penetration),var(nail)),data(batten)),obligation(expr(fun(greaterThanEqual),atom(rel(penetration),var(nail)),data(baseUnit(prefix(milli),kind(metre)),value(35.0)))),obligation(expr(fun(complyWith),atom(var(fixing)),data(nzs_4206))),obligation(expr(fun(complyWith),atom(rel(pattern),var(fixing)),data(nzs_4206))),obligation(expr(fun(asPer),expr(fun(min),atom(rel(pitch),var(cladding))),data(t_10))),obligation(expr(fun(asPer),atom(var(underlay)),data(t_23)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.4,"Use 304 or 316 stainless steel fixings for corrosion zones B, C, D and E, or hot dip galvanised fixings at 450 g/m2 for Zone B and Zone C.","if(and(or(expr(fun(is),atom(rel(type),var(corrosionZone)),data(B)),expr(fun(is),atom(rel(type),var(corrosionZone)),data(C))),expr(fun(for),atom(var(fixing)),data(corrosionZone)))),then(or(and(obligation(expr(fun(is),atom(rel(material),var(fixing)),data(stainlessSteel))),or(obligation(expr(fun(is),atom(rel(type),var(stainlessSteel)),data(304))),obligation(expr(fun(is),atom(rel(type),var(stainlessSteel)),data(306))))),and(obligation(expr(fun(is),atom(rel(material),var(fixing)),data(hotDipGalvanized))),obligation(expr(fun(is),atom(rel(weight),var(fixing)),data(derivedUnit(baseUnit(kind(gram)),operator(name(division)),baseUnit(exponent(2.0),kind(metre))),value(450.0)))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.5,"Use 304 or 316 stainless steel fixings for corrosion zones B, C, D and E, or hot dip galvanised fixings at 450 g/m2 for Zone B and Zone C.","if(and(or(expr(fun(is),atom(rel(type),var(corrosionZone)),data(D)),expr(fun(is),atom(rel(type),var(corrosionZone)),data(E))),expr(fun(for),atom(var(fixing)),data(corrosionZone)))),then(and(obligation(expr(fun(is),atom(rel(material),var(fixing)),data(stainlessSteel))),or(obligation(expr(fun(is),atom(rel(type),var(stainlessSteel)),data(304))),obligation(expr(fun(is),atom(rel(type),var(stainlessSteel)),data(306))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.3.0.6,"8.2.3 Installation Where masonry tiles have been shown to comply with the dynamic weathertightness test requirements of AS 4046: Part 9, a lower pitch may be used providing it is not less than 15°.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile)),expr(fun(complyWith),atom(var(cladding)),data(weathertightnessTestRequirement)),expr(fun(in),atom(var(weathertightnessTestRequirement)),data(as_4046_part_9)),expr(fun(define),atom(rel(pitch),var(cladding)),data(a)),expr(fun(asPer),atom(var(a)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_10)))),then(and(permission(expr(fun(lessThan),atom(rel(pitch),var(cladding)),data(a))),obligation(expr(fun(greaterThanEqual),atom(rel(pitch),var(cladding)),data(baseUnit(kind(angleDegree)),value(15.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.5.0.1,"Masonry tile roofs with underlays shall have anti-ponding boards installed to Figure 25. Where anti-ponding boards are used, these shall be set to a minimum fall of 5° (1:12), and shall be treated minimum H1.2 for solid timber and H3 for plywood.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile)),expr(fun(has),atom(var(roof)),data(underlay)))),then(and(obligation(expr(fun(has),atom(var(roof)),data(antiPondingBoard))),obligation(expr(fun(is),expr(fun(min),atom(rel(fall),var(antiPondingBoard))),data(baseUnit(kind(angleDegree)),value(5.0)))),or(and(obligation(expr(fun(is),atom(rel(material),var(antiPondingBoard)),data(timber))),obligation(expr(fun(is),expr(fun(min),atom(rel(treatmentClass),var(timber))),data(H1.2)))),and(obligation(expr(fun(is),atom(rel(material),var(antiPondingBoard)),data(plywood))),obligation(expr(fun(is),expr(fun(min),atom(rel(treatmentClass),var(plywood))),data(H3)))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.2.7.0.1,Holes in tiles for pipe penetrations shall be machine-cut to minimise the size of the hole.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(masonryTile)),expr(fun(has),atom(var(masonryTile)),data(hole)),expr(fun(for),atom(var(hole)),data(penetration)))),then(and(obligation(expr(fun(is),atom(var(hole)),data(machineCut))),obligation(expr(fun(is),atom(rel(size),var(hole)),data(minimum)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.1.0.1,This Acceptable Solution is limited to pressed metal tile roofs.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)))),then(obligation(expr(fun(complyWith),atom(rel(system),var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.3.0.1,8.3.3 Tiles and accessories Tiles and their accessories shall meet the requirements of NZS 4217.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)))),then(and(obligation(expr(fun(complyWith),atom(var(metalTile)),data(nzs_4217))),obligation(expr(fun(complyWith),atom(rel(accessory),var(metalTile)),data(nzs_4217)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.4.2.0.2,"Paint coatings may include factory-applied finishes complying with AS/NZS 2728, or factory-painted or bonded resin and chip finishes of minimum 15 year durability.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)),expr(fun(is),atom(rel(material),var(metalTile)),data(steel)),expr(fun(has),atom(var(metalTile)),data(paintCoating)))),then(and(expr(fun(include),atom(var(paintCoating)),data(factoryAppliedFinish)),expr(fun(complyWith),atom(var(factoryAppliedFinish)),data(as/nzs_2728))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.4.3.0.1,"8.3.4.3 Aluminium Aluminium for the manufacture of pressed metal tiles and flashing systems shall comply with AS/NZS 1734, and shall: a) Have a base metal thickness (BMT) of 0.7 mm minimum, b) Be minimum 5000 series, c) For pre-painted aluminium, have a factory- applied finish complying with AS/NZS 2728.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)),expr(fun(for),atom(var(flashing)),data(cladding)),expr(fun(is),atom(rel(material),var(metalTile)),data(aluminium)),expr(fun(is),atom(rel(material),var(flashing)),data(aluminium)))),then(and(obligation(expr(fun(equal),expr(fun(min),atom(rel(baseMetalThickness),var(aluminium))),data(baseUnit(prefix(milli),kind(metre)),value(0.7)))),obligation(expr(fun(is),expr(fun(min),atom(rel(grade),var(aluminium))),data(5000series))),or(and(expr(fun(is),atom(var(aluminium)),data(prePainted)),obligation(expr(fun(has),atom(var(aluminium)),data(factoryAppliedFinish))),obligation(expr(fun(complyWith),atom(var(factoryAppliedFinish)),data(as/nzs_2728)))),not(expr(fun(is),atom(var(aluminium)),data(prePainted))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.5.0.3,"Where rafter length exceeds 12 m, increase minimum pitch by 1° per additional 0.5 m.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)),expr(fun(define),atom(rel(rafterLength),var(roof)),data(a)),expr(fun(greaterThan),atom(var(a)),data(baseUnit(kind(metre)),value(12.0))),expr(fun(equal),atom(rel(key),var(rule)),data(8.3.5.0.2)),expr(fun(equal),atom(rel(value),var(rule)),data(b)))),then(obligation(expr(fun(equal),expr(fun(min),atom(rel(pitch),var(roof))),data(b+(a-12)*2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.6.0.1,All metal tile roofing shall have a roof underlay installed. Roof underlay shall be to Table 23. Refer to Paragraph 8.1.5 for installation details.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)))),then(and(obligation(expr(fun(has),atom(var(roof)),data(underlay))),obligation(expr(fun(complyWith),atom(var(underlay)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_23)),obligation(expr(fun(complyWith),atom(rel(installation),var(underlay)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.5))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.7.0.1.a.2,"Pressed metal tiles; For fixings through the top of the tiles, use neoprene washers containing no more than 15% by weight carbon black content","then(and(obligation(expr(fun(is),atom(var(neopreneWasher)),data(used))),obligation(expr(fun(lessThanEqual),atom(rel(carbonBlackContent),var(neopreneWasher)),data(15%)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.8.0.1,"The roof shall be flashed at all boundaries, except at the discharge to a gutter, using the details shown in Figure 34 to Figure 37. Metal flashings are generally supplied by the metal tile manufacturer, and shall comply with Paragraph 8.3.4.2 and Table 7, unless specifically shown otherwise in the details.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)))),then(and(obligation(expr(fun(has),atom(rel(boundary),var(roof)),data(flashing))),prohibition(expr(fun(has),atom(rel(discharge),var(gutter)),data(flashing)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.3.10.0.1,"8.3.10 Roof penetrations Pipe penetrations shall be flashed using EPDM flashings similar to that shown for masonry tiles, Figure 29.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(metalTile)),expr(fun(is),atom(var(metalTile)),data(pressed)),expr(fun(has),atom(var(metalTile)),data(pipePenetration)))),then(and(obligation(expr(fun(has),atom(var(pipePenetration)),data(flashing))),obligation(expr(fun(is),atom(rel(material),var(flashing)),data(epdm)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.1.0.2,8.4.1 Limitations; This Acceptable Solution is limited to the following types of profiled metal roof cladding:,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),not(expr(fun(equal),atom(rel(key),var(rule)),data(8.4.1.0.1))))),then(prohibition(expr(fun(complyWith),atom(var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.3.3.0.1,"8.4.3.3 Aluminium] Aluminium for the manufacture of profiled aluminium roofing shall comply with AS/NZS 1734, and be a minimum: a) Base metal thickness (BMT) of 0.7 mm, b) 5000 series.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(is),atom(rel(material),var(cladding)),data(aluminium)))),then(and(obligation(expr(fun(complyWith),atom(rel(material),var(cladding)),data(as/nzs_1734))),obligation(expr(fun(equal),expr(fun(min),atom(rel(bmt),var(aluminium))),data(baseUnit(prefix(milli),kind(metre)),value(0.7)))),obligation(expr(fun(is),expr(fun(min),atom(rel(type),var(aluminium))),data(5000series)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.3.3.0.2,Pre-painted aluminium roofing shall have a factory-applied finish complying with AS/NZS 2728.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(is),atom(rel(material),var(cladding)),data(aluminium)),expr(fun(is),atom(rel(material),var(cladding)),data(prePainted)))),then(and(obligation(expr(fun(has),atom(rel(material),var(cladding)),data(factoryAppliedFinish))),obligation(expr(fun(complyWith),atom(rel(material),var(cladding)),data(as/nzs_2728)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.4.0.1,"8.4.4 Profiles Profiles covered in this Acceptable Solution are shown in Figure 38, and consist of: a) Corrugated – curved with a crest height of 16.5 mm minimum, b) Trapezoidal – symmetrical or asymmetrical with a minimum crest height of 19 mm, and for asymmetrical a flat or lightly profiled pan width of 210 mm maximum between crests, and c) Trough profile – with vertical ribs at a minimum height of 38 mm, and flat or lightly profiled pans of 210 mm maximum between crests.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(is),atom(rel(material),var(cladding)),data(aluminium)),or(and(expr(fun(is),atom(rel(profile),var(cladding)),data(corrugated)),expr(fun(is),atom(rel(profile),var(cladding)),data(curved)),expr(fun(has),atom(rel(profile),var(cladding)),data(crest)),expr(fun(greaterThanEqual),atom(rel(height),var(crest)),data(baseUnit(kind(metre),prefix(milli)),value(16.5)))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),expr(fun(has),atom(rel(profile),var(cladding)),data(crest)),expr(fun(greaterThanEqual),atom(rel(height),var(crest)),data(baseUnit(prefix(milli),kind(metre)),value(19.0)))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),expr(fun(is),atom(rel(profile),var(cladding)),data(asymmetrical)),expr(fun(has),atom(rel(profile),var(cladding)),data(crest)),expr(fun(greaterThanEqual),atom(rel(height),var(crest)),data(baseUnit(prefix(milli),kind(metre)),value(19.0))),expr(fun(has),atom(rel(profile),var(cladding)),data(pan)),or(expr(fun(is),atom(var(pan)),data(flat)),expr(fun(is),atom(var(pan)),data(lightlyProfiled))),expr(fun(between),atom(var(pan)),data(crest)),expr(fun(equal),expr(fun(max),atom(rel(length),var(pan))),data(baseUnit(prefix(milli),kind(metre)),value(210.0)))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trough)),expr(fun(has),atom(rel(profile),var(cladding)),data(verticalRib)),expr(fun(equal),expr(fun(min),atom(rel(height),var(verticalRib))),data(baseUnit(prefix(milli),kind(metre)),value(38.0))),expr(fun(has),atom(rel(profile),var(cladding)),data(pan)),or(expr(fun(is),atom(var(pan)),data(flat)),expr(fun(is),atom(var(pan)),data(lightlyProfiled))),expr(fun(between),atom(var(pan)),data(crest)),expr(fun(equal),expr(fun(max),atom(rel(length),var(pan))),data(baseUnit(kind(metre),prefix(milli)),value(210.0))))))),then(obligation(expr(fun(complyWith),atom(rel(profile),var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.5.0.1,"8.4.5 Roof pitch For roofs up to 18 metres in length without end laps, pitches shall be: a) Corrugated – not less than 8° (1:7). b) Trapezoidal – not less than: i) 4° (1:14) where the crest height is less than 27 mm, or ii) 3° (1:20) where the crest height is 27 mm or higher. c) Trough profile – not less than 3° (1:20).","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(lessThanEqual),atom(rel(length),var(roof)),data(baseUnit(kind(metre)),value(18.0))),not(expr(fun(has),atom(var(roof)),data(endLap))))),then(or(and(expr(fun(is),atom(rel(profile),var(cladding)),data(corrugated)),obligation(expr(fun(greaterThanEqual),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(8.0))))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),obligation(expr(fun(greaterThanEqual),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(4.0)))),expr(fun(has),atom(rel(profile),var(cladding)),data(crest)),expr(fun(lessThan),atom(rel(height),var(crest)),data(baseUnit(prefix(milli),kind(metre)),value(27.0)))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),obligation(expr(fun(greaterThanEqual),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(3.0)))),expr(fun(has),atom(rel(profile),var(cladding)),data(crest)),expr(fun(greaterThanEqual),atom(rel(height),var(crest)),data(baseUnit(prefix(milli),kind(metre)),value(27.0)))),and(expr(fun(is),atom(rel(profile),var(cladding)),data(trough)),obligation(expr(fun(greaterThanEqual),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(3.0)))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.6.0.1,"8.4.6 Structure The maximum span and fixing patterns of profiled metal roof cladding between purlins to comply with this Acceptable Solution are given in Table 11, Table 12 or Table 13, 14 and 15.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(is),atom(rel(material),var(cladding)),data(steel)),expr(fun(between),atom(rel(span),var(cladding)),data(purlin)),expr(fun(between),atom(rel(fixingPattern),var(cladding)),data(purlin)),expr(fun(in),expr(fun(max),atom(rel(span),var(cladding))),data(table)),expr(fun(in),atom(rel(fixingPattern),var(cladding)),data(table)),and(expr(fun(equal),atom(rel(key),var(table)),data(t_11)),expr(fun(equal),atom(rel(key),var(table)),data(t_12)),expr(fun(equal),atom(rel(key),var(table)),data(t_13)),expr(fun(equal),atom(rel(key),var(table)),data(t_14)),expr(fun(equal),atom(rel(key),var(table)),data(t_15))))),then(and(obligation(expr(fun(complyWith),atom(rel(span),var(cladding)),data(nzbc_e2_as1))),obligation(expr(fun(complyWith),atom(rel(fixingPattern),var(cladding)),data(nzbc_e2_as1)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.7.0.1,8.4.7 Underlay All profiled metal long-run roofing shall have a roof underlay installed to Table 23. See Paragraph 8.1.5 for installation details.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)))),then(and(obligation(expr(fun(has),atom(var(roof)),data(underlay))),obligation(expr(fun(complyWith),atom(var(underlay)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_23)),obligation(expr(fun(complyWith),atom(rel(installation),var(underlay)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.5))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.8.0.1,"8.4.8 Fixings: corrugated and trapezoidal Fixings shall be as shown in Tables 11, 12, 14 and 15, and shall be a minimum 12-gauge screw, as shown in Figure 39, which complies with Class 4 of AS 3566: Part 2.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),or(expr(fun(is),atom(rel(profile),var(cladding)),data(corrugated)),expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal))),expr(fun(has),atom(var(cladding)),data(fixing)))),then(and(obligation(expr(fun(complyWith),atom(var(fixing)),data(table))),and(expr(fun(equal),atom(rel(key),var(table)),data(t_11)),expr(fun(equal),atom(rel(key),var(table)),data(t_12)),expr(fun(equal),atom(rel(key),var(table)),data(t_14)),expr(fun(equal),atom(rel(key),var(table)),data(t_15))),obligation(expr(fun(is),atom(var(screw)),data(12gauge))),obligation(expr(fun(complyWith),atom(var(screw)),data(class4))),expr(fun(in),atom(var(class4)),data(as_3566_part_2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.8.1.0.2,Include sealing washers of: profiled washer and EPDM washer,"then(and(obligation(expr(fun(include),atom(var(fixing)),data(sealingWasher))),and(obligation(expr(fun(is),atom(rel(type),var(sealingWasher)),data(profiledWasher))),obligation(expr(fun(is),atom(rel(type),var(sealingWasher)),data(epdmWasher))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.10.0.1,8.4.10 Allowance for expansion Allowance shall be made for expansion of corrugated and trapezoidal roof cladding as shown in Table 16.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),or(expr(fun(is),atom(rel(profile),var(cladding)),data(corrugated)),expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal))))),then(and(obligation(expr(fun(has),atom(var(cladding)),data(expansionJoint))),obligation(expr(fun(asPer),atom(rel(expansion),var(cladding)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_16))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.11.1.1.a.1,"8.4.11.1 Fixing flashings a) When fixing flashings to the structure, use screws as for roofing (see Paragraph 8.4.8).","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(for),atom(var(flashing)),data(roof)),expr(fun(has),atom(var(flashing)),data(fixing)))),then(expr(fun(is),atom(rel(type),var(fixing)),data(screw)))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.11.1.1.b.1,"8.4.11.1 Fixing flashings b) When fixing flashings to other flashings or to roofing use: i) for galvanized steel, 4 mm diameter monel metal or stainless steel rivets, where compatible as per Table 21, ii) for aluminium-zinc coated steel, 4 mm diameter aluminium rivets, iii) for aluminium, 4 mm diameter aluminium rivets.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(for),atom(var(flashing)),data(object)),and(expr(fun(include),atom(var(object)),data(flashing)),expr(fun(include),atom(var(object)),data(roof))),expr(fun(has),atom(var(flashing)),data(fixing)))),then(or(and(expr(fun(is),atom(rel(material),var(object)),data(galvanizedSteel)),expr(fun(is),atom(rel(type),var(fixing)),data(rivet)),or(expr(fun(is),atom(rel(material),var(fixing)),data(monelMetal)),expr(fun(is),atom(rel(material),var(fixing)),data(stainlessSteel))),expr(fun(equal),atom(rel(diameter),var(fixing)),data(baseUnit(kind(metre),prefix(milli)),value(4.0))),expr(fun(asPer),atom(var(fixing)),data(table)),expr(fun(equal),atom(rel(key),var(table)),data(t_21))),and(or(expr(fun(is),atom(rel(material),var(object)),data(aluminiumZincCoatedSteel)),expr(fun(is),atom(rel(material),var(object)),data(aluminium))),expr(fun(is),atom(rel(type),var(fixing)),data(rivet)),expr(fun(is),atom(rel(material),var(fixing)),data(aluminium)),expr(fun(equal),atom(rel(diameter),var(fixing)),data(baseUnit(prefix(milli),kind(metre)),value(4.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.11.1.1.c.1,"8.4.11.1 Fixing flashings c) Flashing joins, including expansion joints where required, shall be in accordance with Paragraph 4.5.2 and as shown in Figure 6.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(for),atom(var(flashing)),data(cladding)),expr(fun(has),atom(var(flashing)),data(join)),expr(fun(include),atom(var(join)),data(expansionJoint)))),then(and(obligation(expr(fun(complyWith),atom(var(join)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(4.5.2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.13.0.1,"8.4.13 Stopends The top ends of profiled metal roof cladding shall have stopends as shown in Figure 49 for trapezoidal and trough profile metal roof cladding, where: a) The roof pitch is less than 25°, or b) The building is in a High/Very High/Extra High wind zone.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),or(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),expr(fun(is),atom(rel(profile),var(cladding)),data(trough))),or(expr(fun(lessThan),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(25.0))),or(expr(fun(is),atom(rel(zone),var(wind)),data(high)),expr(fun(is),atom(rel(zone),var(wind)),data(veryHigh)),expr(fun(is),atom(rel(zone),var(wind)),data(extraHigh)))))),then(obligation(expr(fun(has),atom(rel(topEnd),var(cladding)),data(stopend))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.14.0.1,"8.4.14 Turn-downs at gutters The lower ends of trapezoidal and trough profile roofing shall be turned down at gutters, where the roof pitch is less than 10°. The turn-down shall be 30° from the plane of the sheet.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),or(expr(fun(is),atom(rel(profile),var(cladding)),data(trapezoidal)),expr(fun(is),atom(rel(profile),var(cladding)),data(trough))),expr(fun(lessThan),atom(rel(pitch),var(roof)),data(baseUnit(kind(angleDegree)),value(10.0))))),then(and(obligation(expr(fun(is),atom(rel(profile),var(cladding)),data(turnedDown))),obligation(expr(fun(at),atom(rel(turnDown),var(cladding)),data(gutter))),and(expr(fun(between),atom(var(angle)),data(turnDown)),expr(fun(between),atom(var(angle)),data(cladding))),obligation(expr(fun(equal),atom(var(angle)),data(baseUnit(kind(angleDegree)),value(30.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.16.0.1,"8.4.16 Hidden, valley and internal gutters Hidden, valley and internal gutters shall be in accordance with Paragraph 8.1.6.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(has),atom(var(roof)),data(gutter)),or(expr(fun(is),atom(rel(type),var(gutter)),data(hidden)),expr(fun(is),atom(rel(type),var(gutter)),data(valley)),expr(fun(is),atom(rel(type),var(gutter)),data(internal))))),then(and(obligation(expr(fun(complyWith),atom(var(gutter)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.6))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.16.1.0.1,8.4.16.1 Hidden gutters Parallel hidden gutters shall be as shown in Figure 50 and Paragraph 8.1.6.2.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(has),atom(var(roof)),data(gutter)),expr(fun(is),atom(rel(type),var(gutter)),data(hidden)),expr(fun(is),atom(var(gutter)),data(parallel)))),then(and(obligation(expr(fun(complyWith),atom(var(gutter)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.6.2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.16.3.0.1,8.4.16.3 Internal gutters Internal gutters shall be as shown in Figure 52 and Paragraph 8.1.6.1.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(has),atom(var(roof)),data(gutter)),expr(fun(is),atom(rel(type),var(gutter)),data(internal)))),then(and(obligation(expr(fun(complyWith),atom(var(gutter)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(8.1.6.1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.17.0.1,8.4.17 Roof penetrations The maximum length of profiled roof cladding above penetrations shall be as shown in Table 17.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(above),expr(fun(max),atom(rel(length),var(cladding))),data(penetration)))),then(and(obligation(expr(fun(asPer),expr(fun(max),atom(rel(length),var(cladding))),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_17))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.4.17.0.3,"8.4.17 Roof penetrations Roof penetrations shall be flashed as follows: a) Pipe penetrations up to 85 mm shall be flashed using an EPDM boot flashing as shown in Figure 53, b) Pipe penetrations up to 500 mm shall be flashed using a soaker flashing and EPDM boot flashing as shown in Figure 54, c) Rectangular penetrations up to 1200 mm wide shall be flashed using a soaker type flashing as shown in Figure 55.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(roof)),expr(fun(is),atom(rel(system),var(cladding)),data(profiledMetal)),expr(fun(has),atom(var(roof)),data(penetration)))),then(or(and(expr(fun(is),atom(rel(type),var(penetration)),data(pipe)),expr(fun(lessThanEqual),atom(rel(width),var(penetration)),data(baseUnit(prefix(milli),kind(metre)),value(85.0))),obligation(expr(fun(has),atom(var(penetration)),data(flashing))),obligation(expr(fun(is),atom(rel(type),var(flashing)),data(epdmBoot)))),and(expr(fun(is),atom(rel(type),var(penetration)),data(pipe)),expr(fun(lessThanEqual),atom(rel(width),var(penetration)),data(baseUnit(prefix(milli),kind(metre)),value(500.0))),obligation(expr(fun(has),atom(var(penetration)),data(flashing))),and(obligation(expr(fun(is),atom(rel(type),var(flashing)),data(soaker))),obligation(expr(fun(is),atom(rel(type),var(flashing)),data(epdmBoot))))),and(expr(fun(is),atom(rel(type),var(penetration)),data(rectangular)),expr(fun(lessThanEqual),atom(rel(width),var(penetration)),data(baseUnit(prefix(milli),kind(metre)),value(1200.0))),obligation(expr(fun(has),atom(var(penetration)),data(flashing))),obligation(expr(fun(is),atom(rel(type),var(flashing)),data(soaker))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.5.5.1.0.1,8.5.5 Installation 8.5.5.1 Plywood Substrates must be dry when membranes are applied. The plywood and timber substructure must be a maximum moisture content of 20% when a membrane is adhered.,"if(and(or(expr(fun(is),atom(rel(material),var(membrane)),data(butyl)),expr(fun(is),atom(rel(material),var(membrane)),data(epdm))),expr(fun(over),atom(rel(installation),var(membrane)),data(substrate)),expr(fun(is),atom(rel(material),var(substrate)),data(plywood)))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(moistureContent),var(plywood)),data(20%))),expr(fun(lessThanEqual),atom(rel(moistureContent),var(substructure)),data(20%))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.5.6.0.1.a.1,8.5.6 Roof and deck drainage Membrane roofs and decks shall be constructed to provide: a) Falls as shown in Figure 56 and details in Figures 57–64,"if(expr(fun(is),atom(rel(type),var(roof)),data(membrane))),then(and(obligation(expr(fun(complyWith),atom(rel(slope),var(roof)),data(figure))),and(expr(fun(equal),atom(rel(key),var(figure)),data(figure_56)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_57)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_58)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_59)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_60)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_61)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_62)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_63)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_64)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.5.6.0.1.a.2,8.5.6 Roof and deck drainage Membrane roofs and decks shall be constructed to provide: a) Falls as shown in Figure 56 and details in Figures 57–64,"if(expr(fun(is),atom(rel(type),var(deck)),data(membrane))),then(and(obligation(expr(fun(complyWith),atom(rel(slope),var(deck)),data(figure))),and(expr(fun(equal),atom(rel(key),var(figure)),data(figure_56)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_57)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_58)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_59)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_60)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_61)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_62)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_63)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_64)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.5.9.0.1,8.5.9 Penetrations Penetrations through membrane roofs and decks shall be as shown in Figure 59 and Figure 60.,"if(and(or(expr(fun(is),atom(rel(application),var(membrane)),data(roof)),expr(fun(is),atom(rel(application),var(membrane)),data(deck))),or(expr(fun(is),atom(rel(material),var(membrane)),data(butyl)),expr(fun(is),atom(rel(material),var(membrane)),data(epdm))),expr(fun(has),atom(var(membrane)),data(penetration)))),then(and(obligation(expr(fun(complyWith),atom(var(penetration)),data(figure))),and(expr(fun(equal),atom(rel(key),var(figure)),data(figure_59)),expr(fun(equal),atom(rel(key),var(figure)),data(figure_60)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r8.5.9.1.0.1,8.5.9.1 Handrails Fixing of posts for handrails into membrane roofs or decks is not covered by this Acceptable Solution.,"if(and(or(expr(fun(is),atom(rel(application),var(membrane)),data(roof)),expr(fun(is),atom(rel(application),var(membrane)),data(deck))),or(expr(fun(is),atom(rel(material),var(membrane)),data(butyl)),expr(fun(is),atom(rel(material),var(membrane)),data(epdm))),expr(fun(has),atom(var(membrane)),data(post)),expr(fun(for),atom(var(post)),data(handrail)))),then(prohibition(expr(fun(complyWith),atom(rel(fixing),var(post)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.0.1,"9.1 General Wall claddings shall meet the requirements of NZBC E2.3.2 to E2.3.7, and comply with the provisions of Paragraph 9.1.1 to Paragraph 9.9.","if(expr(fun(is),atom(rel(application),var(cladding)),data(wall))),then(and(and(obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.2))),obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.3))),obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.4))),obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.5))),obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.6))),obligation(expr(fun(complyWith),atom(var(cladding)),data(e2.3.7)))),obligation(expr(fun(complyWith),atom(var(cladding)),data(rule))),and(expr(fun(equal),atom(rel(key),var(rule)),data(9.1)),expr(fun(equal),atom(rel(key),var(rule)),data(9.2)),expr(fun(equal),atom(rel(key),var(rule)),data(9.3)),expr(fun(equal),atom(rel(key),var(rule)),data(9.4)),expr(fun(equal),atom(rel(key),var(rule)),data(9.5)),expr(fun(equal),atom(rel(key),var(rule)),data(9.6)),expr(fun(equal),atom(rel(key),var(rule)),data(9.7)),expr(fun(equal),atom(rel(key),var(rule)),data(9.8)),expr(fun(equal),atom(rel(key),var(rule)),data(9.9)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.0.2,"Claddings in Extra High wind zones require: a) Rigid underlays to Paragraph 9.1.7.2 b) Drained cavities to Paragraph 9.1.8 c) Hooks and hems on flashing upstands, and additional 25 mm height to Paragraph 4.6.","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(is),atom(rel(type),var(windZone)),data(extraHigh)))),then(and(obligation(expr(fun(has),atom(var(cladding)),data(underlay))),obligation(expr(fun(is),atom(var(underlay)),data(rigid))),obligation(expr(fun(complyWith),atom(var(underlay)),data(rule_9.1.7.2))),obligation(expr(fun(has),atom(var(cladding)),data(drainedCavity))),obligation(expr(fun(complyWith),atom(var(drainedCavity)),data(rule_9.1.8))),and(obligation(expr(fun(has),atom(rel(upstand),var(flashing)),data(hook))),obligation(expr(fun(has),atom(rel(upstand),var(flashing)),data(hem)))),expr(fun(for),atom(var(flashing)),data(cladding))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.1.0.1,9.1.1 Limitations This Acceptable Solution is limited to the wall cladding systems listed in Paragraph 3.3.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(asPer),atom(rel(system),var(cladding)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(3.3)))),then(obligation(expr(fun(complyWith),atom(rel(system),var(cladding)),data(nzbc_e2_as1))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.2.0.1,9.1.2 Maintenance Maintenance of wall claddings shall be carried out as necessary to achieve the expected durability of the material – refer to Paragraph 2.5.,"then(and(obligation(expr(fun(complyWith),atom(rel(task),var(maintenance)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(2.5.0))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.3.0.1,"9.1.3 Bottom of cladding Separations, clearances to ground level, and overlaps shall be as shown in Figure 65 and Table 18.","if(expr(fun(is),atom(rel(application),var(cladding)),data(wall))),then(and(obligation(expr(fun(complyWith),atom(rel(separation),var(cladding)),data(table))),obligation(expr(fun(complyWith),atom(rel(overlap),var(cladding)),data(table))),expr(fun(to),atom(rel(clearance),var(cladding)),data(groundLevel)),obligation(expr(fun(complyWith),atom(rel(clearance),var(cladding)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(18))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.3.0.2,Clearances to roof claddings and decks shall be minimum 35 mm – refer to Table 7 and Figure 18.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),and(expr(fun(to),atom(rel(clearance),var(cladding)),data(roofCladding)),expr(fun(to),atom(rel(clearance),var(cladding)),data(deck))))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(clearance),var(cladding)),data(baseUnit(kind(metre),prefix(milli)),value(35.0)))),obligation(expr(fun(complyWith),atom(rel(clearance),var(cladding)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_7))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.3.0.4,9.1.3 Bottom of cladding Clearances shall be measured to: b) The top surface of any adjacent sloped or horizontal apron flashing.,"then(and(obligation(expr(fun(from),atom(rel(clearance),var(cladding)),data(a))),obligation(expr(fun(to),atom(rel(clearance),var(cladding)),data(topSurface)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.3.4.0.1,"9.1.3.4 Garages and openings to garages Refer to Figure 65 and Table 18 for overall level change requirements. Garage spaces within, or attached to, the building envelope shall have: a) Openings provided with a 50 mm minimum total level change between the interior and the exterior paving, b) Provision to drain water away from the threshold of the opening c) Rigid wall underlays, to Table 23, where external garage walls are unlined d) linings to garage walls adjoining habitable spaces e) weather resisting garage doors f) window and door details (where included) to Paragraphs 9.2 to 9.9.","then(and(obligation(expr(fun(has),atom(var(garage)),data(opening))),obligation(expr(fun(has),atom(var(garage)),data(waterDrainageProvision))),obligation(expr(fun(awayFrom),atom(rel(waterDrainage),var(waterDrainageProvision)),data(garage))),or(and(expr(fun(is),atom(rel(wall),var(garage)),data(external)),expr(fun(is),atom(rel(wall),var(garage)),data(unlined)),obligation(expr(fun(has),atom(rel(wall),var(garage)),data(underlay))),obligation(expr(fun(is),atom(var(underlay)),data(rigid))),obligation(expr(fun(complyWith),atom(var(underlay)),data(table))),expr(fun(equal),atom(rel(key),var(table)),data(t_23))),and(expr(fun(is),atom(rel(wall),var(garage)),data(lined)),obligation(expr(fun(adjoin),atom(rel(wallLining),var(garage)),data(habitableSpace))))),obligation(expr(fun(is),atom(rel(door),var(garage)),data(weatherResistant))),obligation(expr(fun(complyWith),atom(rel(window),var(garage)),data(rule))),obligation(expr(fun(complyWith),atom(rel(door),var(garage)),data(rule))),and(expr(fun(include),atom(rel(key),var(rule)),data(9.2)),expr(fun(include),atom(rel(key),var(rule)),data(9.3)),expr(fun(include),atom(rel(key),var(rule)),data(9.4)),expr(fun(include),atom(rel(key),var(rule)),data(9.5)),expr(fun(include),atom(rel(key),var(rule)),data(9.6)),expr(fun(include),atom(rel(key),var(rule)),data(9.7)),expr(fun(include),atom(rel(key),var(rule)),data(9.8)),expr(fun(include),atom(rel(key),var(rule)),data(9.9)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.1.3.5.0.1,"9.1.3.5 Bottom of wall claddings for timber floor framing Suspended timber floors shall meet the requirements of NZS 3604. Clearances from paved and unpaved surfaces to the wall framing shall be in accordance with NZS 3604, and Table 18.","then(and(obligation(expr(fun(complyWith),atom(var(floor)),data(nzs_3604))),expr(fun(from),atom(rel(clearance),var(cladding)),data(surface)),and(obligation(expr(fun(complyWith),atom(rel(clearance),var(cladding)),data(nzs_3604))),obligation(expr(fun(complyWith),atom(rel(clearance),var(cladding)),data(table)))),expr(fun(equal),atom(rel(key),var(table)),data(18))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.2.2.0.0.a.1,9.2.2 General 1) The materials and workmanship of masonry veneer shall be in accordance with SNZ HB 4236 and have a maximum mass of veneer of 220 kg/m2 and minimum veneer thickness of 70 mm,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(is),atom(rel(system),var(cladding)),data(masonryVeneer)))),then(and(obligation(expr(fun(complyWith),atom(rel(material),var(masonryVeneer)),data(snz_hb_4236))),obligation(expr(fun(complyWith),atom(rel(workmanship),var(masonryVeneer)),data(snz_hb_4236))),obligation(expr(fun(equal),expr(fun(max),atom(rel(mass),var(masonryVeneer))),data(derivedUnit(baseUnit(prefix(kilo),kind(gram)),operator(name(division)),baseUnit(exponent(2.0),kind(metre))),value(220.0)))),obligation(expr(fun(equal),expr(fun(min),atom(rel(thickness),var(masonryVeneer))),data(baseUnit(kind(metre),prefix(milli)),value(70.0))))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.7.1.0.1,"9.7.1 Limitations This Acceptable Solution is limited to the following types of fibre cement sheet cladding systems: a) Flush-finished systems over a drained cavity using sheets of 7.5 mm minimum thickness, with i) fibre cement sheets manufactured with a rebated edge for this purpose, ii) if necessary for part sheets, rebated on site using a purpose-made tool, and iii) have all edges sealed, iv) joints, comprising a bedding compound and reinforcing tape, that are finished in accordance with Paragraph 9.7.10.4","if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(is),atom(rel(form),var(cladding)),data(sheet)),expr(fun(is),atom(rel(material),var(cladding)),data(fibrecement)))),then(and(obligation(expr(fun(is),atom(rel(finish),var(cladding)),data(flush))),obligation(expr(fun(over),atom(var(cladding)),data(drainedCavity))),obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(cladding)),data(baseUnit(kind(metre),prefix(milli)),value(7.5)))),obligation(expr(fun(has),atom(rel(sheet),var(cladding)),data(rebatedEdge))),or(obligation(expr(fun(is),atom(var(rebatedEdge)),data(manufactured))),obligation(expr(fun(is),atom(var(rebatedEdge)),data(formedInsitu)))),obligation(expr(fun(is),atom(var(rebatedEdge)),data(sealed))),obligation(expr(fun(has),atom(rel(sheet),var(cladding)),data(joint))),and(obligation(expr(fun(has),atom(rel(joint),var(cladding)),data(beddingCompound))),obligation(expr(fun(has),atom(rel(joint),var(cladding)),data(reinforcingTape)))),obligation(expr(fun(complyWith),atom(rel(joint),var(cladding)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(9.7.10.4)))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.7.2.0.1,9.7.2 Material and installation – both systems Fibre cement shall comply with AS/NZS 2908: Part 2.,"if(and(expr(fun(is),atom(rel(application),var(cladding)),data(wall)),expr(fun(is),atom(rel(form),var(cladding)),data(sheet)),expr(fun(is),atom(rel(material),var(cladding)),data(fibrecement)))),then(obligation(expr(fun(complyWith),atom(var(fibrecement)),data(2))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.9.7.0.1,9.9.7 EIFS/floor slab junction The bottom of the EIFS cladding shall be as shown in Figure 125.,"if(expr(fun(is),atom(rel(type),var(cladding)),data(eifs))),then(and(obligation(expr(fun(complyWith),expr(fun(bottomOf),atom(var(cladding))),data(figure))),expr(fun(equal),atom(rel(key),var(figure)),data(figure_125))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.9.8.0.1,9.9.8 Pipes and service penetrations All pipes and service penetrations through the EIFS shall be made weatherproof,"if(and(expr(fun(is),atom(rel(type),var(cladding)),data(eifs)),expr(fun(has),atom(var(cladding)),data(penetration)))),then(obligation(expr(fun(is),atom(rel(weatherProofingProtection),var(penetration)),data(true))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.9.10.0.1,9.9.10 Parapets and enclosed balustrades Parapets shall comply with Paragraph 6.0.,"if(expr(fun(equal),atom(var(parapet)),data(true))),then(and(obligation(expr(fun(complyWith),atom(var(parapet)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(6))))"
lrml/NZ_NZBC-E2AS1#3.8.lrml,r9.9.10.0.2,9.9.10 Parapets and enclosed balustrades; Enclosed balustrades shall comply with Paragraph 7.4.,"if(expr(fun(is),atom(var(balustrade)),data(enclosed))),then(and(obligation(expr(fun(complyWith),atom(var(balustrade)),data(rule))),expr(fun(equal),atom(rel(key),var(rule)),data(7.4))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r1.0.1.0.1,1.0.1 This Acceptable Solution applies to solar water heaters installed in or on buildings.,"if(or(expr(fun(in),atom(rel(installation),var(solarWaterHeater)),data(building)),expr(fun(on),atom(rel(installation),var(solarWaterHeater)),data(building)))),then(obligation(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzbc_g12_as2))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r1.0.2.0.1,1.0.2 To comply with this Acceptable Solution solar water heaters must also comply with the appropriate requirements of G12/AS1.,"if(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzbc_g12_as2))),then(obligation(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzbc_g12_as1))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r1.0.2.0.2,"This Acceptable Solution meets the requirements of NZBC Clauses B1, B2, E2, G12 and H1.","if(expr(fun(equal),atom(var(nzbc_g12_as2)),data(TRUE))),then(expr(fun(complyWith),atom(var(nzbc_g12_as2)),and(data(nzbc_b1),data(nzbc_b2),data(nzbc_e2),data(nzbc_g12),data(nzbc_h1))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r1.1.1.0.1,"1.1.1 Where a building has not been specifically designed to support a solar water heater, this Acceptable Solution can be used for the support and fixing of a solar collector on buildings that meet the structural requirements specified in any one of the following: • NZS 3604: 1990 • NZS 3604: 1999 • NZS 3604: 2011 • NZS 4203 • AS/NZS 1170: Parts 0, 1, 2, 3 and NZS 1170: Part 5. But only when all of the following requirements are met: a) the weight of solar collector, including frames, fittings, and heat transfer fluid, has a combined weight of no more than 22 kg per square metre (based on the gross area of the solar collector), and b) the hot water storage tank is not installed on or above the roof","if(and(not(not(fun(designedToSupport),atom(var(building)),data(solarWaterHeater))),expr(fun(on),atom(rel(installation),var(solarCollector)),data(building)),expr(fun(equal),atom(rel(weight),var(solarCollector)),data(w1)),expr(fun(equal),atom(rel(weight),var(frame)),data(w2)),expr(fun(equal),atom(rel(weight),var(fitting)),data(w3)),expr(fun(equal),atom(rel(weight),var(heatTransferFluid)),data(w4)),expr(fun(equal),atom(var(combinedWeight)),data(w1+w2+w3+w4)),expr(fun(equal),atom(rel(grossArea),var(solarCollector)),data(a)),expr(fun(equal),atom(var(unitWeight)),data(combinedWeight/a)),obligation(expr(fun(lessThanEqual),atom(var(unitWeight)),data(22kgperm^2))),not(not(fun(on),atom(rel(installation),var(tank)),data(roof))),not(not(fun(above),atom(rel(installation),var(tank)),data(roof))))),then(and(permission(expr(fun(complyWith),atom(rel(support),var(solarCollector)),data(nzbc_g12_as2))),permission(expr(fun(complyWith),atom(rel(fixing),var(solarCollector)),data(nzbc_g12_as2))),obligation(expr(fun(complyWith),atom(rel(structure),var(building)),or(data(nzs_3604_1990),data(nzs_3604_1999),data(nzs_3604_2011),data(nzs_4203),data(as/nzs_1170_0),data(as/nzs_1170_1),data(as/nzs_1170_2),data(as/nzs_1170_3),data(as/nzs_1170_5))))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r2.1.1.0.1,"2.1.1 All material used to install the solar water heater must: a) meet the durability requirements of NZBC Clause B2, and b) be suitable for their use, location and environment as shown in Table 1, and c) be compatible with adjoining materials as shown in Table 2, and d) be compatible with materials subject to run-off as shown in Table 3 (except as described in Paragraph 2.1.2).","if(expr(fun(equal),atom(var(solarWaterHeater)),data(TRUE))),then(and(obligation(expr(fun(complyWith),atom(rel(installationMaterial),var(solarWaterHeater)),data(nzbc_b2))),obligation(expr(fun(complyWith),atom(rel(installationMaterial),var(solarWaterHeater)),data(nzbc_g12_as2_t_1))),obligation(expr(fun(complyWith),atom(var(installationMaterial)),data(nzbc_g12_as2_t_2))),obligation(expr(fun(complyWith),atom(var(installationMaterial)),data(nzbc_g12_as2_t_3)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r2.1.3.0.1,2.1.3 If the requirements described in Paragragh 2.1.2 are not met then either the EPDM boots or the galvanised roofing must be painted with a suitable protective coating.,"if(not(expr(fun(equal),atom(var(nzbc_g12_as2_2.1.2)),data(TRUE)))),then(or(obligation(expr(fun(equal),atom(var(EPDMBoots)),data(painted))),obligation(expr(fun(equal),atom(var(galvanisedRoofing)),data(painted)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r2.1.4.0.1,2.1.4 Table 2 shows that galvanized fixings must be used rather than stainless steel when in contact with galvanized cladding and zinc-aluminium-magnesium (combinations) coated cladding. (This includes mounting brackets and straps.),"if(or(expr(fun(inContactWith),atom(var(fixings)),data(galvanisedCladding)),expr(fun(inContactWith),atom(var(fixings)),data(zinc-aluminium-magnesiumCoatedCladding)))),then(obligation(expr(fun(equal),atom(var(fixings)),data(galvanised))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.1.1.0.1,3.1.1 Solar water heaters must comply with AS/NZS 2712,"if(expr(fun(equal),atom(var(solarWaterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzs_2712))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.1.2.0.1,3.1.2 Tanks installed as part of a pumped solar water heater where the tank is separately mounted from the collector must comply with the minimum tank insulation requirements of AS/NZS 4692.2.,"if(and(expr(fun(equals),atom(rel(type),var(solarWaterHeater)),data(pumped)),expr(fun(is),atom(var(tank)),data(installed)),expr(fun(is),atom(var(tank)),data(separatelyMounted)))),then(obligation(expr(fun(complyWith),atom(var(tank)),data(nzs_4692.2))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.2.1.0.1,"3.2.1 Where a solar water heater has a controller, the controller must meet the requirements specified in AS/NZS 2712: clause 6.3.","if(expr(fun(has),atom(var(solarWaterHeater)),data(controller))),then(obligation(expr(fun(complyWith),atom(var(controller)),data(nzs_2712_clause_6.3))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.2.3.0.1,3.2.3 A solar water heater which meets the requirements described in Paragraphs 3.2.1 and/or 3.2.2 satisfies NZBC Clause H1.3.4.,"if(expr(fun(complyWith),atom(var(solarWaterHeater)),or(data(nzbc_g12_as2_3.2.1),data(nzbc_g12_as2_3.2.2)))),then(permission(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzbc_clause_H1.3.4))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.3.1.0.1,3.3.1 Solar water heaters must have a minimum of 50 litres of hot water storage per square metre of collector area.,"if(expr(fun(equal),atom(rel(installed),var(solarWaterHeater)),data(TRUE))),then(obligation(expr(fun(hasMinimum),atom(var(solarWaterHeater)),data(50litresOfHotWaterStoragePerSquareMetreOfCollectorArea))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.4.1.0.1,3.4.1 Storage tanks in solar water heaters must have operating and safety devices that meet the requirements of G12/AS1 Paragraph 6.,"if(expr(fun(equal),atom(rel(installed),var(solarWaterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(storageTank)),data(nzbc_g12_as1_6))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.4.2.0.1,Vent pipes and outlets from pressure relief valves must be plumbed to a suitable drain point.,"if(expr(fun(equal),atom(rel(installed),var(solarWaterHeater)),data(TRUE))),then(and(obligation(expr(fun(plumbed),atom(var(ventPipes)),data(drain))),obligation(expr(fun(plumbed),atom(var(pressureReliefValves)),data(drain)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.5.2.0.1.a.1,a) the hot water storage tank connected to the solar collector must be fitted with supplementary heating and a controller operating to meet the conditions outlined in Paragraph 3.5.1,"then(or(and(obligation(expr(fun(fittedWith),atom(var(hotWaterStorageTank)),data(supplementaryHeating))),obligation(expr(fun(fittedWith),atom(var(hotWaterStorageTank)),data(controller))),obligation(expr(fun(complyWith),atom(var(controller)),data(nzbc_g12_as2_3.5.1))))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.5.2.0.1.b.1, b) the instantaneous water heater must heat all water passing through it to not less than 70°C.,"then(obligation(expr(fun(greaterThanEqual),atom(rel(heats),var(instantaneousWaterHeater)),data(70degC))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.6.1.0.1.a.1,pass the level 1 test described in AS/NZS 2712 Appendix E,"then(obligation(expr(fun(complyWith),atom(var(collector)),data(nzs_2712_appendixE_level1))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r3.6.2.0.1.a.1,collectors installed in climate zone 3 (as shown in Figure 1) must: a) pass the level 2 test described in AS/NZS 2712 Appendix E,"then(obligation(expr(fun(complyWith),atom(var(collector)),data(nzs_2712_appendixE_level2))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r4.2.1.0.1,4.2.1 Solar collectors must face within +/- 90 degrees of geographic north (ie between east and west) to satisfy the requirements of NZBC Clause H1.3.4(a).,"if(expr(fun(equal),atom(rel(installed),var(solarCollector)),data(TRUE))),then(obligation(expr(fun(faces),atom(var(solarCollector)),data(+/-90degreesOfGeographicalNorth))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r4.2.2.0.1,4.2.2 Solar collectors must be inclined at an angle within +/- 20 degrees of the angle of latitude (from the horizontal) to satisfy the requirements of NZBC Clause H1.3.4(a).,"if(expr(fun(equal),atom(rel(installed),var(solarCollector)),data(TRUE))),then(obligation(expr(fun(inclinationAngle),atom(var(solarCollector)),data(+/-20degreesOfTheAngleOfLatitude))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.0.1.0.1,"5.0.1 Solar water heaters must be installed in accordance with the requirements of AS/NZS 3500 Part 4, unless modified by this Acceptable Solution.","if(expr(fun(equal),atom(rel(installed),var(solarWaterHeater)),data(TRUE))),then(or(obligation(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzs_3500_Part_4))),obligation(expr(fun(modifiedBy),atom(var(solarWaterHeater)),data(nzbc_g12_as2)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.0.2.0.1,5.0.2 Water storage tanks that form part of a solar water heater must have drain pipes,"if(expr(fun(has),atom(var(solarWaterHeater)),data(storageTank))),then(obligation(expr(fun(has),atom(var(solarWaterHeater)),data(drainPipes))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.0.3.0.1,"5.0.3 Fixings used for the installation of a solar water heater must meet the requirements described in Paragraphs 2.1.1, 2.1.2, 2.1.3 and 2.1.4.","if(expr(fun(equal),atom(rel(installed),var(solarWaterHeater)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(fixingsUsed)),and(data(nzbc_g12_as2_2.1.1),data(nzbc_g12_as2_2.1.2),data(nzbc_g12_as2_2.1.3),data(nzbc_g12_as2_2.1.4)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.1.1.0.1,"5.1.1 Where water is heated by a wetback water heater and a solar collector, independent water pipe circuits must be installed for each heat source.","if(expr(fun(heatedBy),atom(var(water)),and(data(wetbackWaterHeater),data(solarCollector)))),then(and(obligation(expr(fun(has),atom(var(wetbackWaterHeater)),data(independentWaterPipeCircuits))),obligation(expr(fun(has),atom(var(solarCollector)),data(independentWaterPipeCircuits)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.1.2.0.1.a.1,5.1.2 A wetback water heater must have an open-vent connected to the: water tank,"then(obligation(expr(fun(connectedTo),atom(rel(has),var(openVent)),data(waterTank))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.3.0.1,5.2.3 Penetrations through masonry tile roofs must be as shown in Figure 5.,"if(expr(fun(isThrough),atom(var(roofPenetration)),data(masonryTile))),then(obligation(expr(fun(complyWith),atom(var(roofPenetration)),data(nzbc_g12_as2_figure_5))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.4.0.1,5.2.4 Pipe penetrations in pressed metal tile roofs must be flashed using EPDM or silicone rubber boot flashings as shown in Figure 6.,"if(expr(fun(isThrough),atom(var(pipePenetration)),data(pressedMetalTileRoof))),then(obligation(expr(fun(flashedUsing),atom(var(pipePenetration)),or(data(EPDM_boot),data(siliconeRubberBoot)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.5.0.1.a.1,5.2.5 Roof penetrations in profiled metal roofs must be flashed as follows. Pipe penetrations up to 60 mm diameter must be flashed using an EPDM boot flashing as shown in Figure 6,"if(and(expr(fun(isThrough),atom(var(roofPenetration)),data(profiledMetalRoof)),expr(fun(equals),atom(rel(type),var(roofPenetration)),data(pipePenetration)),expr(fun(lessThanEqual),atom(var(pipePenetrationDiameter)),data(60mm)))),then(obligation(expr(fun(flashedUsing),atom(var(pipePenetration)),data(EPDMboot))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.5.0.1.b.1,5.2.5 Roof penetrations in profiled metal roofs must be flashed as follows. b) Rectangular penetrations up to 1200 mm wide must be flashed using a soaker type flashing as shown in Figure 7.,"if(and(expr(fun(isThrough),atom(var(roofPenetration)),data(profiledMetalRoof)),expr(fun(equals),atom(rel(type),var(roofPenetration)),data(rectangularPenetration)),expr(fun(lessThanEqual),atom(var(rectangularPenetrationWidth)),data(1200mm)))),then(obligation(expr(fun(flashedUsing),atom(var(rectangularPenetration)),data(SoakerType))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.7.0.1,5.2.7 Penetrations through membrane roofs must be as shown in Figure 8.,"if(expr(fun(isThrough),atom(var(roofPenetration)),data(membraneRoofs))),then(obligation(expr(fun(complyWith),atom(var(roofPenetration)),data(nzbc_g12_as2_figure_8))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.9.0.1,5.2.9 Sealant used in the installation of solar water heaters must be a neutral cure silicone sealant and must be used in conjunction with mechanical fasteners.,"if(expr(fun(uses),atom(var(solarWaterHeater)),data(solarWaterHeaterSealant))),then(and(obligation(expr(fun(is),atom(var(solarWaterHeaterSealant)),data(neutralCureSiliconeSealant))),obligation(expr(fun(useWith),atom(var(solarWaterHeaterSealant)),data(mechanicalFasteners)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.9.0.1.a.1,"The sealant must comply with: a) Type F, Class 2OLM or 25LM of ISO 11600, or b) low modulus Type II Class A of Federal Specification TT-S-00230C.","if(expr(fun(uses),atom(var(solarWaterHeater)),data(solarWaterHeaterSealant))),then(obligation(expr(fun(complyWith),atom(var(solarWaterHeaterSealant)),or(data(ISO_11600_typeF),data(ISO_11600_class_20LM),data(ISO_11600_class_25LM)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.10.0.1,5.2.10 Acetic cured silicone sealants may be used with stainless steel but must not be used on zinc or aluminium-zinc coatings.,"if(and(expr(fun(uses),atom(var(solarWaterHeater)),data(solarWaterHeaterSealant)),expr(fun(is),atom(var(solarWaterHeaterSealant)),data(aceticCuredSiliconeSealant)))),then(prohibition(expr(fun(usedOn),atom(var(aceticCuredSiliconeSealant)),or(data(zinc),data(aluminiumZincCoating)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.2.12.0.1,5.2.12 All fixings or penetrations through the roof must be through the crests of the roof cladding.,"if(expr(fun(equal),atom(var(fixingsorroofPenetration)),data(TRUE))),then(obligation(expr(fun(through),atom(var(fixingsorroofPenetration)),data(roofCladdingCrest))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.3.1.0.1,5.3.1 Pipes and their supports must be electrochemically compatible or be electrolytically separated (refer to Table 2).,"if(expr(fun(equal),atom(var(pipesandpipeSupports)),data(TRUE))),then(obligation(expr(fun(is),atom(var(pipesandpipeSupports)),or(data(electrochemicallyCompatible),data(electrolyticallySeparated)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.3.2.0.1,"5.3.2 Pipes must be installed and supported to permit thermal movement, except where anchor points are necessary.","if(not(expr(fun(requires),atom(rel(installed),var(pipes)),data(anchorPoints)))),then(and(obligation(expr(fun(permits),atom(var(pipes)),data(thermalMovement))),obligation(expr(fun(permits),atom(var(pipeSupports)),data(thermalMovement)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r5.4.1.0.1,"5.4.1 Hot water pipes must be insulated to satisfy the requirements of NZBC Clause H1.3.4, except where connected to a heat dissipation device.","if(not(expr(fun(connectedTo),atom(var(hotWaterPipe)),data(heatDissipationDevice)))),then(obligation(expr(fun(complyWith),atom(var(hotWaterPipe)),data(nzbc_h1.3.4))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.2.0.1,"6.2.2 The installation of solar collectors must not dent, bend or distort the roof cladding or damage any protective coatings.","if(expr(fun(equal),atom(rel(installed),var(solarCollector)),data(TRUE))),then(or(prohibition(expr(fun(dentBendOrDistort),atom(var(solarCollector)),data(roofCladding))),prohibition(expr(fun(damage),atom(var(solarCollector)),data(protectiveCoating)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.3.0.1,6.2.3 All fixings that penetrate metal cladding must be provided with sealing washers or boots to prevent leakage in accordance with Paragraph 5.2.,"if(expr(fun(penetrate),atom(var(fixings)),data(metalCladding))),then(and(obligation(expr(fun(providedWith),atom(var(fixings)),or(data(sealingWashers),data(boots)))),obligation(expr(fun(complyWith),atom(var(fixings)),data(nzbc_g12_as2_5.2)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.4.0.1,6.2.4 Solar collectors must be supported at no less than four points. The outermost support points must be within 200 mm of the outside edge of the solar collector.,"if(expr(fun(has),atom(rel(installation),var(solarCollector)),data(support))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(quantities),var(support)),data(4))),obligation(expr(fun(within),atom(rel(outermost),var(support)),data(200mmOfOutsideEdgeOfSolarCollector)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.4.0.2,The outermost support points must be within 200 mm of the outside edge of the solar collector.,"if(and(expr(fun(has),atom(rel(installation),var(solarCollector)),data(support)),expr(fun(is),atom(rel(location),var(support)),data(outermost)),expr(fun(is),atom(rel(centreline),var(support)),data(x)),expr(fun(is),atom(rel(outsideEdge),var(solarCollector)),data(y)))),then(and(obligation(expr(fun(inBetween),atom(rel(dimension),var(installation)),and(data(x),data(y)))),obligation(expr(fun(lessThanEqual),atom(rel(dimension),var(installation)),data(200mm)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.6.0.1.a.1,6.2.6 All screw and bolt fixings into roof framing timber must be installed with minimum distances from the centre of the fixing to the edge of the timber of: a) 20 mm for 8 gauge screws,"if(and(expr(fun(has),atom(var(roof)),data(framing)),expr(fun(is),atom(rel(material),var(framing)),data(timber)),expr(fun(has),atom(rel(framing),var(roof)),data(fixing)),expr(fun(is),atom(rel(type),var(fixing)),data(screw)),expr(fun(equal),atom(rel(size),var(screw)),data(8gauge)),expr(fun(is),atom(rel(centreline),var(fixing)),data(x)),expr(fun(is),atom(rel(edge),var(timber)),data(y)))),then(and(obligation(expr(fun(inBetween),atom(rel(dimension),var(fixing)),and(data(x),data(y)))),expr(fun(greaterThanEqual),atom(rel(dimension),var(fixing)),data(20mm))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.6.0.1.b.1,6.2.6 All screw and bolt fixings into roof framing timber must be installed with minimum distances from the centre of the fixing to the edge of the timber of: 25 mm for 14 gauge screws,"if(and(expr(fun(has),atom(var(roof)),data(framing)),expr(fun(is),atom(rel(material),var(framing)),data(timber)),expr(fun(has),atom(rel(framing),var(roof)),data(fixing)),expr(fun(is),atom(rel(type),var(fixing)),data(screw)),expr(fun(equal),atom(rel(size),var(screw)),data(14gauge)),expr(fun(is),atom(rel(centreline),var(fixing)),data(x)),expr(fun(is),atom(rel(edge),var(timber)),data(y)))),then(and(obligation(expr(fun(inBetween),atom(rel(dimension),var(fixing)),and(data(x),data(y)))),expr(fun(greaterThanEqual),atom(rel(dimension),var(fixing)),data(25mm))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.6.0.1.c.1,6.2.6 All screw and bolt fixings into roof framing timber must be installed with minimum distances from the centre of the fixing to the edge of the timber of: 40 mm for 10 mm bolts.,"if(and(expr(fun(has),atom(var(roof)),data(framing)),expr(fun(is),atom(rel(material),var(framing)),data(timber)),expr(fun(has),atom(rel(framing),var(roof)),data(fixing)),expr(fun(is),atom(rel(type),var(fixing)),data(bolt)),expr(fun(equal),atom(rel(size),var(bolt)),data(10mm)),expr(fun(is),atom(rel(centreline),var(fixing)),data(x)),expr(fun(is),atom(rel(edge),var(timber)),data(y)))),then(and(obligation(expr(fun(inBetween),atom(rel(dimension),var(fixing)),and(data(x),data(y)))),expr(fun(greaterThanEqual),atom(rel(dimension),var(fixing)),data(40mm))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.2.7.0.1,6.2.7 The centre of all fixings must be no closer than 10 fixing diameters from the end of a piece of timber.,"if(and(expr(fun(has),atom(var(roof)),data(framing)),expr(fun(is),atom(rel(material),var(framing)),data(timber)),expr(fun(has),atom(rel(framing),var(roof)),data(fixing)),expr(fun(equal),atom(rel(diameter),var(fixing)),data(d)),expr(fun(is),atom(rel(centreline),var(fixing)),data(x)),expr(fun(is),atom(rel(end),var(timber)),data(y)))),then(and(obligation(expr(fun(inBetween),atom(rel(dimension),var(fixing)),and(data(x),data(y)))),expr(fun(greaterThanEqual),atom(rel(dimension),var(fixing)),data(10*d))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.3.1.0.1,"6.3.1 Solar collectors can be fixed directly to the roof as shown in Figures 10 and 11 or Figures 12 and 13, where the requirements described in Paragraph 6.3 are met.","if(expr(fun(complyWith),atom(var(solarCollector)),data(nzbc_g12_as2_6.3))),then(permission(expr(fun(asShown),atom(var(solarCollector)),or(and(data(nzbc_g12_as2_f_10),data(nzbc_g12_as2_f_11)),and(data(nzbc_g12_as2_f_12),data(nzbc_g12_as2_f_13))))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.3.2.0.1,6.3.2 Solar collectors mounted on the roof cladding must meet the materials requirements described in Paragraph 2.,"if(expr(fun(mountedOn),atom(var(solarCollector)),data(roofCladding))),then(obligation(expr(fun(complyWith),atom(var(solarCollectorMaterial)),data(nzbc_g12_as2_2))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.4.2.0.1,"6.4.2 Solar collectors mounted parallel to the roof that are elevated up to 50 mm above the roof cladding must be supported by: a) underlying purlins conforming to Paragraph 6.4.1 (a) or (b), or b) underlying rafters or trusses with connections conforming with Paragraphs 6.4.1 (a) or (c), or c) collector support rails conforming to Paragraph 6.5.","if(and(expr(fun(mountedParallelTo),atom(var(solarCollector)),data(roof)),expr(fun(elevated),atom(var(solarCollector)),data(<=50mmAboveTheRoofCladding)))),then(or(and(obligation(expr(fun(supportedBy),atom(var(solarCollector)),data(underlyingPurlins))),obligation(expr(fun(complyWith),atom(var(underlyingPurlins)),or(data(nzbc_g12_as2_6.4.1.a),data(nzbc_g12_as2_6.4.1.b))))),obligation(expr(fun(complyWith),atom(rel(connections),var(underlyingRaftersOrTrusses)),or(data(nzbc_g12_as2_6.4.1.a),data(nzbc_g12_as2_6.4.1.c)))),obligation(expr(fun(complyWith),atom(var(collectorSupportRails)),data(nzbc_g12_as2_6.5)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.5.1.0.1,"6.5.1 Collector support rails may either: a) run horizontally across the slope of the roof as provided for in Paragraph 6.5.2 and Figure 17, or b) run up the slope of the roof as provided for in Paragraph 6.5.3 and Figure 18.","if(expr(fun(equal),atom(var(solarCollectorSupportRails)),data(TRUE))),then(or(permission(expr(fun(asProvidedForIn),atom(var(solarCollectorSupportRails)),and(data(nzbc_g12_as2_6.5.2),data(nzbc_g12_as2_figure_17)))),permission(expr(fun(asProvidedForIn),atom(var(solarCollectorSupportRails)),and(data(nzbc_g12_as2_6.5.3),data(nzbc_g12_as2_figure_18))))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.6.1.0.1,6.6.1 Solar collectors mounted at a different pitch to the pitch of the roof must be installed with no less than 8 fixing points and must meet all the requirements described in Paragraph 6.6 and Figure 19.,"if(not(expr(fun(equal),atom(var(solarCollectorMountingPitch)),data(roofPitch)))),then(and(obligation(expr(fun(hasMinimum),atom(var(solarCollector)),data(8fixingPoints))),obligation(expr(fun(complyWith),atom(rel(installation),var(solarCollector)),and(data(nzbc_g12_as2_6.6),data(nzbc_g12_as2_figure_19))))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.6.3.0.1.a.1,6.6.3 The edge of the panel elevated above the roof plane is to be supported by hot dip galvanized steel or stainless steel angle struts which are: a) 25 x 25 x 3 mm angle for struts up to 1.0 m long,"if(and(expr(fun(is),atom(rel(edge),var(panel)),data(elevated)),expr(fun(above),atom(rel(edge),var(panel)),data(roof)),expr(fun(lessThanEqual),atom(rel(length),var(angleStrut)),data(1.0m)))),then(and(obligation(expr(fun(has),atom(rel(edge),var(panel)),data(support))),obligation(expr(fun(is),atom(rel(type),var(support)),data(angleStrut))),obligation(expr(fun(is),atom(rel(material),var(angleStrut)),or(data(hotDipGalvanised),data(stainless)))),obligation(expr(fun(equal),atom(rel(width),var(angleStrut)),data(25mm))),obligation(expr(fun(equal),atom(rel(length),var(angleStrut)),data(25mm))),obligation(expr(fun(equal),atom(rel(thickness),var(angleStrut)),data(3mm)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.6.3.0.1.a.2,6.6.3 The edge of the panel elevated above the roof plane is to be supported by hot dip galvanized steel or stainless steel angle struts which are: 30 x 30 x 3 mm angle for struts up to 1.4 m long,"if(and(expr(fun(is),atom(rel(edge),var(panel)),data(elevated)),expr(fun(above),atom(rel(edge),var(panel)),data(roof)),expr(fun(lessThanEqual),atom(rel(length),var(angleStrut)),data(1.4m)))),then(and(obligation(expr(fun(has),atom(rel(edge),var(panel)),data(support))),obligation(expr(fun(is),atom(rel(type),var(support)),data(angleStrut))),obligation(expr(fun(is),atom(rel(material),var(angleStrut)),or(data(hotDipGalvanised),data(stainless)))),obligation(expr(fun(equal),atom(rel(width),var(angleStrut)),data(30mm))),obligation(expr(fun(equal),atom(rel(length),var(angleStrut)),data(30mm))),obligation(expr(fun(equal),atom(rel(thickness),var(angleStrut)),data(3mm)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r6.6.3.0.2,Cuts or holes made in steel after galvanizing are to be protected from corrosion.,"if(and(expr(fun(has),atom(var(steel)),data(penetration)),expr(fun(after),atom(var(penetration)),data(galvanising)))),then(obligation(expr(fun(has),atom(var(steel)),data(corrosionProtection))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r7.1.1.0.1,7.1.1 A permanent label must be fixed to a prominent part of the system which includes all markings required in the appropriate Standard identified in Paragraph 3.1.1.,"if(expr(fun(equal),atom(rel(installation),var(solarWaterHeatingSystem)),data(TRUE))),then(and(obligation(expr(fun(has),atom(var(solarWaterHeatingSystem)),data(permanentLabel))),obligation(expr(fun(fixedTo),atom(var(permanentLabel)),data(prominentPartOfSystem))),obligation(expr(fun(complyWith),atom(var(permanentLabel)),data(nzbc_g12_as2_3.1.1)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r7.2.1.0.1,7.2.1 Solar water heaters and their components must meet the durability requirements specified in NZBC Clause B2.,"if(expr(fun(equal),atom(rel(installation),var(solarWaterHeater)),data(TRUE))),then(and(obligation(expr(fun(complyWith),atom(var(solarWaterHeater)),data(nzbc_b2))),obligation(expr(fun(complyWith),atom(var(solarWaterHeaterComponents)),data(nzbc_b2)))))"
lrml/NZ_NZBC-G12AS2#3.12.lrml,r7.2.2.0.1,7.2.2 A solar water heater is easy to access and moderately difficult to replace and therefore the durability requirement is 15 years.,"if(expr(fun(equal),atom(rel(installation),var(solarWaterHeater)),data(TRUE))),then(obligation(expr(fun(greaterThanEqual),atom(rel(durability),var(solarWaterHeater)),data(15years))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r1.0.1.1,"1.0.1 This Acceptable Solution applies to above-ground non-pressure (gravity flow) sanitary plumbing for buildings having 3 levels or less and includes all pipework for foul water within, or on the building, including any basements.","if(and(expr(fun(lessThanEqual),atom(rel(buildingStorey),var(building)),data(3)),expr(fun(aboveGround)),or(expr(fun(within),atom(var(foulWaterPipework)),data(building)),expr(fun(on),atom(var(foulWaterPipework)),data(building))))),then(obligation(expr(fun(equal),atom(var(complyWith)),data(nzbc_g13_as1))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r1.0.2.1,"1.0.2 The solution does not include: a) Specialised types of sanitary fixtures or sanitary appliances used within buildings such as hospitals, laboratories and factories","if(and(or(expr(fun(equal),atom(rel(specialisedTypes),var(sanitaryFixture)),data(TRUE)),expr(fun(equal),atom(rel(specialisedTypes),var(sanitaryAppliance)),data(TRUE))),expr(fun(within),atom(var(building)),data(hospitalsLaboratoriesFactories)))),then(obligation(not(expr(fun(complyWith)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r1.0.2.2,"1.0.2 The solution does not include: The conveyance of industrial liquid wastes, chemical or toxic wastes and other wastes which cannot be discharged to a sewer without pretreatment.","if(or(expr(fun(equal),atom(rel(conveyance),var(industrialLiquidWaste)),data(TRUE)),expr(fun(equal),atom(rel(conveyance),var(chemicalWaste)),data(TRUE)),expr(fun(equal),atom(rel(conveyance),var(toxicWaste)),data(TRUE)),expr(fun(equal),atom(rel(conveyance),var(wastesWhichCanNotBeDischargedToA_SewerWithoutPretreatment)),data(TRUE)))),then(obligation(not(expr(fun(complyWith)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r2.1.1.1,2.1.1 Materials for sanitary plumbing systems using gravity flow shall comply with Table 1.,"if(expr(fun(equal),atom(rel(type),var(sanitaryPlumbingSystem)),data(gravityFlow))),then(obligation(expr(fun(complyWith),atom(var(materials)),data(nzbc_g13_as1_t_1))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.1.1.1,3.1.1 Discharge points from sanitary fixtures and sanitary appliances shall have a water trap to prevent foul air from the plumbing system entering the building.,"if(expr(fun(from),atom(var(dischargePoint)),or(data(sanitaryFixture),data(sanitaryAppliance)))),then(obligation(expr(fun(greaterThanEqual),expr(fun(count),atom(var(waterTrap))),data(1))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.1.2.1,"3.1.2 Water traps shall be: a) Removable, b) Able to be dismantled, or c) Fitted with a cleaning eye.","if(expr(fun(equal),atom(var(waterTrap)),data(TRUE))),then(or(obligation(expr(fun(equal),atom(rel(feature),var(waterTrap)),data(removable))),expr(fun(equal),atom(rel(feature),var(waterTrap)),data(ableToBeDismantled)),expr(fun(equal),atom(rel(feature),var(waterTrap)),data(hasCleaningEye))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.2.1.0.1,"3.2.1 Under normal operating conditions, fixture traps shall retain a water seal depth of not less than 25 mm (see Figure 1).","if(and(expr(fun(equal),atom(rel(type),var(trap)),data(fixture)),expr(fun(equal),atom(rel(operatingCondition),var(trap)),data(normal)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(waterSealDepth),var(trap)),data(25mm))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.2.2.0.1,3.2.2 The diameter of the water trap shall be not less than that given in Table 2.,"if(expr(fun(equal),atom(var(waterTrap)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(rel(diameter),var(waterTrap)),data(nzbc_g13_as1_t_2))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.4.1.0.1,3.4.1 Floor waste outlets shall have a removable grating that is flush with the floor.,"if(expr(fun(equal),atom(var(floorWaste)),data(TRUE))),then(and(obligation(expr(fun(has),atom(var(floorWaste)),data(removableGrating))),obligation(expr(fun(flushWith),atom(var(removableGrating)),data(floor)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.4.2.0.1,3.4.2 The floor waste shall have a minimum diameter of 40 mm.,"if(expr(fun(equal),atom(var(floorWaste)),data(TRUE))),then(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(floorWaste)),data(40mm))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.4.2.0.2,"3.4.2 The floor waste, and the water trap if used, shall have a minimum diameter of 40 mm.","if(and(expr(fun(equal),atom(var(floorWaste)),data(TRUE)),expr(fun(equal),atom(var(waterTrap)),data(TRUE)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(floorWaste)),data(40mm))),expr(fun(greaterThanEqual),atom(rel(diameter),var(waterTrap)),data(40mm))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.4.4.0.2,3.4.4 Floor waste pipes may be combined to form a floor waste stack and shall have a diameter not less than that given in Table 3 (see Figure 3).,"if(expr(fun(connectedTo),atom(var(industrialFloorWastePipe)),data(floorWasteStack))),then(permission(not(expr(fun(equal),atom(var(industrialFloorWastePipe)),data(vented)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r3.4.6.0.3,All trap charging systems shall incorporate backflow prevention in accordance with G12/AS1.,"if(expr(fun(equal),atom(var(trapChargingSystem)),data(TRUE))),then(and(obligation(expr(fun(has),atom(var(trapChargingSystem)),data(backflowPrevention))),obligation(expr(fun(complyWith),atom(var(backflowPrevention)),data(nzbc_g12_as1)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.2.1.0.1,4.2.1 Access points shall be provided in discharge pipes to allow the easy clearance of blockages.,"if(expr(fun(equal),atom(var(dischargePipe)),data(TRUE))),then(obligation(expr(fun(greaterThanEqual),expr(fun(count),atom(var(accessPoint))),data(1))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.4.1.0.1,4.4.1 The gradient of discharge pipes shall be not less than that required in Table 4 for the relevant discharge unit loading.,"if(expr(fun(equal),atom(var(dischargePipe)),data(TRUE))),then(obligation(not(expr(fun(lessThan),atom(rel(gradient),var(complyWith)),data(nzbc_g13_as1_t_4)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.5.1.0.1,"4.5.1 Waste water fixture discharge pipes shall discharge either to: a) A gully trap, in accordance with Figure 5 of G13/AS1 and Figure 3 of G13/AS2, or b) A discharge stack as in Paragraph 4.7 and Figures 7 and 8.","if(and(expr(fun(equal),atom(rel(type),var(dischargePipe)),data(wasteWater)),expr(fun(equal),atom(rel(type),var(dischargePipe)),data(fixture)))),then(or(and(obligation(expr(fun(complyWith),atom(rel(gullyTrap),var(dischargePipe)),data(nzbc_g13_as1_figure_5))),obligation(expr(fun(complyWith),atom(rel(gullyTrap),var(dischargePipe)),data(nzbc_g13_as2_figure_3)))),and(obligation(expr(fun(complyWith),atom(rel(dischargeStack),var(dischargePipe)),data(nzbc_g13_as1_4.7))),obligation(expr(fun(complyWith),atom(rel(dischargeStack),var(dischargePipe)),data(nzbc_g13_as1_figure_7))),obligation(expr(fun(complyWith),atom(rel(dischargeStack),var(dischargePipe)),data(nzbc_g13_as1_figure_8))))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.5.2.0.1,4.5.2 Water seal protection: Waste water fixture discharge pipes shall be vented to comply with Paragraph 5.0 and as required in Table 5.,"if(and(expr(fun(equal),atom(rel(type),var(dischargePipe)),data(wasteWater)),expr(fun(equal),atom(rel(type),var(wasteWater)),data(fixture)))),then(and(obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_5.0))),obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_t_5)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.6.1.0.1,"4.6.1 Fixture discharge pipes serving soil fixtures shall discharge either: a) Directly to the drain, as shown in Figure 6(1), or b) To a stack, as in Paragraph 4.7 and as shown in Figures 7 and 8.","if(expr(fun(equal),atom(rel(type),var(dischargePipe)),data(soilFixture))),then(or(obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_figure_6.1))),and(obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_4.7))),obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_figure_7))),obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_figure_8))))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r4.6.2.0.1,4.6.2 Water seal protection: Soil fixture discharge pipes shall be vented to comply with Paragraph 5.0 and as required in Table 5 (see Figure 6(2)).,"if(expr(fun(equal),atom(rel(type),var(dischargePipe)),data(soilFixture))),then(and(obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_4))),obligation(expr(fun(complyWith),atom(var(dischargePipe)),data(nzbc_g13_as1_t_5)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.1.1.0.1,5.1.1 Discharge pipes shall be vented where required by Table 5.,"if(and(expr(fun(equal),atom(var(dischargePipe)),data(TRUE)),expr(fun(requiredBy),atom(var(vent)),data(nzbc_g13_as1_t_5)))),then(obligation(expr(fun(has),atom(var(dischargePipe)),data(vent))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.3.1.0.1,"5.3.1 Fixture vent pipes, branch vent pipes, discharge stack vents and relief vents shall have a diameter of no less than that given in Table 6.","if(or(expr(fun(equal),atom(rel(type),var(ventPipe)),or(data(fixture),data(branch))),expr(fun(equal),atom(var(dischargeStackVent)),data(TRUE)),expr(fun(equal),atom(var(reliefVent)),data(TRUE)))),then(or(obligation(expr(fun(complyWith),atom(rel(diameter),var(ventPipe)),data(nzbc_g13_as1_t_6))),expr(fun(complyWith),atom(rel(diameter),var(dischargeStackVent)),data(nzbc_g13_as1_t_6)),expr(fun(complyWith),atom(rel(diameter),var(reliefVent)),data(nzbc_g13_as1_t_6))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.6.1.0.1,"5.6.1 The discharge stack vent, if also acting as a drain vent pipe shall have a diameter of not less than 80 mm.","if(expr(fun(actAs),atom(var(dischargeStackVent)),data(drainVentPipe))),then(obligation(not(expr(fun(lessThan),atom(rel(diameter),var(dischargeStackVent)),data(80mm)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.6.1.0.2,Where not acting as a drain vent the discharge stack vent pipe shall have a diameter of not less than that required in Table 6.,"if(not(expr(fun(actAs),atom(var(dischargeStackVent)),data(drainVentPipe)))),then(obligation(expr(fun(complyWith),atom(rel(diameter),var(dischargeStackVent)),data(nzbc_g13_as1_t_6))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.7.1.0.1,5.7.1 Open vent pipes shall terminate outside the building in accordance with Paragraphs 5.7.2 and 5.7.3 or 5.7.4.,"if(expr(fun(equal),atom(rel(type),var(ventPipe)),data(open))),then(and(obligation(expr(fun(complyWith),atom(var(ventpipe)),data(nzbc_g13_as1_5.7.2))),or(obligation(expr(fun(complyWith),atom(var(ventpipe)),data(nzbc_g13_as1_5.7.3))),obligation(expr(fun(complyWith),atom(var(ventpipe)),data(nzbc_g13_as1_5.7.4))))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.8.1.0.1,5.8.1 General Air admittance valves may be used as venting where specified in accordance with Table 5.,"if(expr(fun(has),atom(var(vent)),data(airAdmittanceValve))),then(permission(expr(fun(complyWith),atom(var(vent)),data(nzbc_g13_as1_t_5))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.8.2.0.1,"5.8.2 Air admittance valves shall be manufactured to ASSE 1050, ASSE 1051, EN 12380 or AS/NZS 4936.","if(expr(fun(equal),atom(var(airAdmittanceValve)),data(TRUE))),then(obligation(expr(fun(complyWith),atom(var(airAdmittanceValve)),or(data(asse_1050),data(asse_1051),data(en_12380),data(as/nzs_4936)))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r5.8.3.0.2,Air admittance valves that form an integral part of a fixture trap shall only be used as a trap vent.,"if(expr(fun(integralPart),atom(var(airAdmittanceValve)),data(fixtureTrap))),then(obligation(expr(fun(actAs),atom(var(airAdmittanceValve)),data(trapVent))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r6.1.1.0.1,6.1.1 Jointing methods for PVC-U pipe shall comply with AS/NZS 2032.,"if(expr(fun(equal),atom(rel(material),var(pipe)),data(pvc-u))),then(obligation(expr(fun(complyWith),atom(rel(jointingMethod),var(pipe)),data(as/nzs_2032))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r6.2.1.0.1,6.2.1 Pipes shall be supported at centres not exceeding those in Table 7.,"if(expr(fun(equal),atom(var(pipe)),data(TRUE))),then(and(obligation(expr(fun(locatedAt),atom(rel(support),var(pipe)),data(centre))),expr(fun(complyWith),atom(rel(span),var(support)),data(nzbc_g13_as1_t_7))))"
lrml/NZ_NZBC-G13AS1#2.7.lrml,r6.4.1.0.1,6.4.1 Fire stopping shall be fitted to pipes passing through fire separations in accordance with C/AS2 Paragraph 4.4.,"if(expr(fun(passThrough),atom(var(pipe)),data(fireSeparation))),then(and(obligation(expr(fun(has),atom(var(penetration)),data(fireStop))),obligation(expr(fun(complyWith),atom(var(fireStop)),or(data(nzbc_cas2),data(nzbc_cas3),data(nzbc_cas4),data(nzbc_cas5),data(nzbc_cas6))))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r1.0.1.0.1,1.0.1 This Acceptable Solution is for below ground non-pressure (gravity flow) foul water drains having a diameter of no greater than 150 mm.,"if(and(expr(fun(is),atom(rel(medium),var(drain)),data(foulWater)),expr(fun(below),atom(rel(elevation),var(drain)),data(ground)),expr(fun(is),atom(rel(type),var(drain)),data(gravityFlow)),expr(fun(lessThanEqual),atom(rel(diameter),var(drain)),data(150mm)))),then(obligation(expr(fun(complyWith),atom(var(drain)),data(nzbc_g13_as2))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r1.0.2.0.1,"1.0.2 It does not apply to foul water drainage systems where it is necessary to dispose of industrial liquid wastes, chemical or toxic wastes and other wastes which cannot be discharged to a sewer without pre-treatment. See G14/VM1.","if(and(expr(fun(is),atom(rel(medium),var(drain)),data(foulWater)),not(not(fun(is),atom(rel(medium),var(drain)),data(industrialLiquidWaste))),not(not(fun(is),atom(rel(medium),var(drain)),data(chemicalWaste))),not(not(fun(is),atom(rel(medium),var(drain)),data(toxicWaste))),not(not(fun(is),atom(rel(medium),var(drain)),data(toxicWaste))),obligation(expr(fun(has),atom(rel(medium),var(drain)),data(treatment))),obligation(expr(fun(into),atom(rel(discharge),var(drain)),data(sewer))))),then(prohibition(expr(fun(complyWith),atom(var(drain)),data(nzbc_g13_as2))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r2.0.1.0.1,2.0.1 Materials for drainage pipes and joints shall comply with the appropriate standards shown in Table 1.,"if(or(expr(fun(equal),atom(rel(material),var(drainagePipe)),data(TRUE)),expr(fun(equal),atom(rel(material),var(drainagePipeJoint)),data(TRUE)))),then(obligation(expr(fun(complyWith),atom(rel(material),var(drainagePipeJoint)),data(t_1))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r2.1.1.0.1.a.1,"2.1 Fill materials 2.1.1 Fill materials, as shown in Figure 7, shall be: a) Bedding material of clean granular non-cohesive material with a maximum particle size of 20 mm","if(expr(fun(equal),atom(rel(location),var(drain)),data(belowGround))),then(and(obligation(expr(fun(is),atom(var(beddingFill)),data(clean))),expr(fun(is),atom(var(beddingFill)),data(granular)),expr(fun(is),atom(var(beddingFill)),data(non-cohesive)),expr(fun(lessThanEqual),atom(rel(size),var(beddingFillParticle)),data(20mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r2.1.1.0.1.b.1,"2.1 Fill materials 2.1.1 Fill materials, as shown in Figure 7, shall be: Selected fill of fine-grained soil or granular material that is free from topsoil and rubbish and has a maximum particle size of 20 mm","if(expr(fun(equal),atom(rel(location),var(drain)),data(belowGround))),then(and(obligation(expr(fun(is),atom(var(selectedFill)),data(clean))),expr(fun(is),atom(var(fill)),or(data(fine-grained),data(granular))),not(not(fun(includes),atom(var(fill)),or(data(topsoil),data(rubbish)))),expr(fun(lessThanEqual),atom(rel(size),var(selectedFillParticle)),data(20mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r2.1.1.0.1.c.1,"2.1 Fill materials 2.1.1 Fill materials, as shown in Figure 7, shall be: Ordinary fill of excavated material.","if(expr(fun(equal),atom(rel(location),var(drain)),data(belowGround))),then(obligation(expr(fun(equal),atom(var(ordinaryFill)),data(excavatedMaterial))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.1.1.0.1,"3.1.1 To reduce the risk of blockages, the foul water drainage system shall: a) Have a simple layout that incorporates the least number of changes of direction, b) Use bends having a radius of the practical maximum, and c) Be laid only in straight lines between bends or junctions (both horizontally and vertically).","if(and(expr(fun(is),atom(rel(medium),var(drain)),data(foulWater)),obligation(not(expr(fun(has),atom(var(drain)),data(blockage)))),expr(fun(has),atom(rel(system),var(drain)),data(changesOfDirection)),expr(fun(has),atom(rel(pipe),var(drain)),data(bend)),expr(fun(inBetween),atom(rel(section),var(pipe)),data(bends)))),then(and(obligation(expr(fun(is),expr(fun(min),atom(rel(quantity),var(changesOfDirection))),data(TRUE))),obligation(expr(fun(is),expr(fun(max),atom(rel(radius),var(bend))),data(TRUE))),obligation(expr(fun(is),atom(rel(section),var(pipe)),data(straight)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.2.1.0.1,"3.2.1 Any connection to a drain, excluding vent pipe connections, shall be made by means of sweep or oblique junctions. The angle that the branch makes at the point of entry with the main drain, shall be no greater than 60° (see Figure 1).","if(and(expr(fun(include),atom(var(drain)),data(connection)),not(not(fun(equal),atom(var(connection)),data(ventPipe))))),then(and(obligation(expr(fun(equal),atom(rel(type),var(connection)),data(sweepJunction))),obligation(expr(fun(equal),atom(rel(type),var(connection)),data(obliqueJunction))),obligation(expr(fun(lessThanEqual),atom(rel(angle),var(connection)),data(60°)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1,"3.3.1 All gully traps shall be constructed to prevent the ingress of surface water and foreign bodies likely to cause a blockage, shall be located within the legal boundary of the land on which the building is erected","if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(and(obligation(expr(fun(preventIngress),atom(var(gullyTrap)),data(surfaceWater))),expr(fun(preventIngress),atom(var(gullyTrap)),data(foreignBodies)),expr(fun(within),atom(rel(location),var(gullyTrap)),data(siteBoundary))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.a.i.1,3.3.1 All gully traps shall have (see Figures 2 and 3): The overflow level of the gully dish no less than: 100 mm above unpaved surfaces,"if(and(expr(fun(include),atom(var(drain)),data(gullyTrap)),expr(fun(equal),atom(rel(type),var(surface)),data(unpaved)),expr(fun(equal),atom(rel(elevation),var(gullyTrapOverflow)),data(o1)),expr(fun(equal),atom(rel(elevation),var(surface)),data(o2)))),then(obligation(expr(fun(greaterThanEqual),atom(var(o1-o2)),data(100mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.b.1,b) A grating that will allow surcharge,"if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(obligation(expr(fun(include),atom(var(gullyTrap)),data(grating))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.c.1,3.3.1 All gully traps shall have (see Figures 2 and 3): A minimum outlet pipe diameter of 100 mm,"if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(outletPipe)),data(100mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.d.1,3.3.1 All gully traps shall have (see Figures 2 and 3): A water seal depth of at least 65 mm,"if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(obligation(expr(fun(greaterThanEqual),atom(rel(depth),var(waterseal)),data(65mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.g.1,"3.3.1 All gully traps shall have (see Figures 2 and 3): Waste pipe outlets located at least 20 mm above water seal level, and at least 20 mm below the grating","if(and(expr(fun(dischargeTo),atom(var(wastePipe)),data(gullyTrap)),and(expr(fun(equal),atom(rel(elevation),var(wastePipeOutlet)),data(w1)),expr(fun(equal),atom(rel(elevation),var(waterseal)),data(w2)),expr(fun(equal),atom(rel(elevation),var(grating)),data(w3))))),then(and(expr(fun(greaterThanEqual),atom(var(w1)),data(w2+20mm)),expr(fun(lessThanEqual),atom(var(w1)),data(w3-20mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.1.0.1.i.1,"3.3.1 All gully traps shall have (see Figures 2 and 3): The top of the water seal no more than 600 mm below the top of the gully dish, and i) Adequate support from bedding and backfilling with: i) concrete no less than 75 mm thick surrounding the entire gully dish and which is separated from the building foundation, where the gully trap is likely to be damaged","if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(and(obligation(expr(fun(has),atom(var(gullyTrap)),data(support))),obligation(expr(fun(separatedFrom),atom(rel(support),var(gullyDish)),data(buildingFoundation))),obligation(expr(fun(with),atom(rel(support),var(gullyDish)),data(concreteSurround))),obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(concreteSurround)),data(75mm))),obligation(expr(fun(has),atom(var(gullyDish)),data(accessSpace))),obligation(expr(fun(is),atom(var(accessSpace)),data(vertical))),obligation(expr(fun(above),atom(var(accessSpace)),data(gullyDish))),obligation(expr(fun(greaterThanEqual),atom(var(accessSpace)),data(600mm)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.2.0.1,"3.3.2 In order to provide overflow relief for the drainage system, every building used for Housing shall be provided with at least one gully trap which shall:","if(expr(fun(equal),atom(rel(purpose),var(building)),data(housing))),then(expr(fun(include),atom(var(drain)),data(gullyTrap)))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.2.0.1.a.1,"3.3.2 In order to provide overflow relief for the drainage system, every building used for Housing shall be provided with at least one gully trap which shall: a) Be positioned so that the top of the gully dish is no less than 150 mm below the overflow level of the lowest sanitary fixture served by the drainage system","if(and(expr(fun(is),expr(fun(topOf),atom(rel(elevation),var(gullyDish))),data(g1)),expr(fun(servedBy),expr(fun(forEach),atom(var(sanitaryFixture))),data(drain),expr(fun(is),expr(fun(topOf),atom(rel(overflow),var(sanitaryFixture))),data(g2))),expr(fun(inBetween),atom(var(dimension)),and(data(g1),data(g2))))),then(obligation(expr(fun(greaterThanEqual),atom(var(dimension)),data(150mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.2.0.1.b.1,"3.3.2 In order to provide overflow relief for the drainage system, every building used for Housing shall be provided with at least one gully trap which shall: Have a grating that will allow surcharge","if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(and(obligation(expr(fun(has),atom(var(gullyTrap)),data(grating))),expr(fun(allow),atom(var(grating)),data(surcharge))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.2.0.1.c.1,"3.3.2 In order to provide overflow relief for the drainage system, every building used for Housing shall be provided with at least one gully trap which shall: Be located in a visible position","if(expr(fun(include),atom(var(drain)),data(gullyTrap))),then(obligation(expr(fun(is),atom(rel(location),var(gullyTrap)),data(visible))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.3.2.0.1.d.1,"3.3.2 In order to provide overflow relief for the drainage system, every building used for Housing shall be provided with at least one gully trap which shall: Be installed so that surcharge cannot enter into or under buildings.","if(and(expr(fun(include),atom(var(drain)),data(gullyTrap)),expr(fun(has),atom(var(drain)),data(surcharge)))),then(and(prohibition(expr(fun(into),atom(rel(flow),var(surcharge)),data(building))),prohibition(expr(fun(under),atom(rel(flow),var(surcharge)),data(building)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.1.0.1,3.4.1 Grease traps shall be provided for any discharge pipe serving a sink(s) where the foul water discharges to a soak pit.,"if(and(expr(fun(has),atom(var(sink)),data(dischargePipe)),expr(fun(is),atom(rel(medium),var(drain)),data(foulWater)),expr(fun(dischargeTo),atom(var(drain)),data(soakPit)))),then(obligation(expr(fun(has),atom(var(dischargePipe)),data(greaseTrap))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.2.0.1,"3.4.2 In buildings other than Housing, grease traps shall be provided where waste water is likely to convey grease.","if(and(not(not(fun(equal),atom(rel(purpose),var(building)),data(housing))),expr(fun(contains),atom(var(wasteWater)),data(grease)))),then(expr(fun(includes),atom(var(drain)),data(greaseTrap)))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.3.0.1,"3.4.3 The capacity of a grease trap shall be at least twice the capacity of all sanitary fixtures and sanitary appliances discharging to it, and in no case less than 100 litres as shown in Figure 4.","if(expr(fun(dischargeTo),expr(fun(forEach),atom(var(sanitaryFixture))),data(greaseTrap),expr(fun(equal),expr(fun(sum),atom(rel(capacity),var(sanitaryFixture))),data(c1)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(capacity),var(greaseTrap)),data(2*(c1+c2)))),obligation(expr(fun(greaterThanEqual),atom(rel(capacity),var(greaseTrap)),data(100litres)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.4.0.1,"3.4.4 For restaurants and cafés, the capacity of the grease trap shall be at least 5 litres for each person for whom seating is provided, and in no case less than that required by Paragraph 3.4.3.","if(and(expr(fun(is),atom(rel(activity),var(building)),or(data(restaurant),data(café))),expr(fun(has),atom(var(building)),data(seating)),expr(fun(equal),atom(rel(quantity),var(seating)),data(s1)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(capacity),var(greaseTrap)),data(s1*5litres))),expr(fun(complyWith),expr(fun(min),atom(rel(capacity),var(greaseTrap))),data(paragraph_3.4.3))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.5.0.1,3.4.5 Grease traps located outside a building shall be configured as shown in Figure 4.,"if(expr(fun(outside),atom(rel(location),var(greaseTrap)),data(building))),then(expr(fun(complyWith),atom(var(greaseTrap)),data(nzbc_f4)))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.4.6.0.1,3.4.6 The top of the outlet junction shall be extended to finished ground level and fitted with a watertight rodding point access cover as shown in Figures 4 and 10.,"if(expr(fun(equal),atom(var(greaseTrap)),data(TRUE))),then(and(obligation(expr(fun(include),atom(var(greaseTrap)),data(outletJunction))),expr(fun(equal),atom(rel(elevation),var(outletJunction)),data(finishedGroundLevel)),expr(fun(equal),atom(var(accessPoint)),data(roddingPoint)),expr(fun(equal),atom(var(accessCover)),data(watertight))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.5.1.0.1,"3.5.1 Drains shall: a) Be laid at an even grade, and b) Have no obstructions to flow.","if(expr(fun(equal),atom(var(drain)),data(TRUE))),then(and(obligation(expr(fun(equal),atom(rel(grade),var(drain)),data(even))),not(not(fun(include),atom(var(drain)),data(onstructions)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.5.2.0.1,3.5.2 Drains shall be installed at the maximum practicable gradient.,"if(expr(fun(equal),atom(var(drain)),data(TRUE))),then(expr(fun(is),atom(rel(gradient),var(drain)),data(maximumPracticable)))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.5.3.0.1,3.5.3 The gradient of drainage pipes shall be not less than that required in Table 2 for the relevant discharge unit loading.,"if(expr(fun(equal),atom(rel(dischargeUnit),var(drain)),data(TRUE))),then(expr(fun(greaterThanEqual),atom(rel(gradient),var(drain)),data(eval(t_2))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.6.1.0.1,3.6.1 The diameter of a drain shall not decrease in size in the direction of flow.,"if(expr(fun(equal),atom(var(drain)),data(TRUE))),then(prohibition(not(expr(fun(decrease),atom(rel(diameter),var(drain)),data(directionOfFlow)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.6.2.0.1,"3.6.2 Drains shall have a diameter of not less than 100 mm, except that 80 mm is acceptable where the drain serves only waste water fixtures.","if(and(expr(fun(equal),atom(var(drain)),data(TRUE)),expr(fun(equal),atom(rel(serves),var(drain)),data(wasteWaterFixtures)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(drain)),data(80mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r3.6.2.0.2,"3.6.2 Drains shall have a diameter of not less than 100 mm, except that 80 mm is acceptable where the drain serves only waste water fixtures.","if(and(expr(fun(equal),atom(var(drain)),data(TRUE)),not(not(fun(equal),atom(rel(serves),var(drain)),data(wasteWaterFixtures))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(drain)),data(100mm))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r4.1.1.0.1,4.1.1 The drainage system shall be ventilated to allow a flow of air and to minimise the build up of foul air.,"if(expr(fun(equal),atom(var(drain)),data(TRUE))),then(obligation(expr(fun(is),atom(var(drain)),data(ventilated))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r4.1.2.0.1,"4.1.2 Every main drain, and every branch drain longer than 10 m, shall be ventilated in accordance with Table 3.","if(or(expr(fun(equal),atom(rel(type),var(drain)),data(main)),and(expr(fun(equal),atom(rel(type),var(drain)),data(branch)),expr(fun(greaterThanEqual),atom(rel(length),var(drain)),data(3m))))),then(obligation(expr(fun(complyWith),atom(var(drain)),data(t_3))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r4.2.1.0.1,"4.2.1 A main drain vent shall have a minimum diameter of 80 mm, and shall comply with termination requirements of Paragraph 5.7.3 of G13/AS1 ""Sanitary Plumbing"".","if(expr(fun(equal),atom(rel(type),var(drain)),data(main))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(diameter),var(vent)),data(80mm))),expr(fun(complyWith),atom(rel(terminal),var(vent)),data(G13/AS1_paragraph_5.7.3))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r4.2.2.0.1,4.2.2 Branch drain vents shall be sized in accordance with Table 6 in G13/AS1.,"if(and(expr(fun(equal),atom(rel(type),var(drain)),data(branch)),expr(fun(has),atom(var(drain)),data(vent)))),then(obligation(expr(fun(complyWith),atom(rel(size),var(vent)),data(g13/as1_t_6))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.1.1.0.1,5.1.1 Rigid pipes shall have flexible joints to resist damage from differential settlement.,"if(expr(fun(equal),atom(rel(material),var(pipe)),data(rigid))),then(obligation(expr(fun(equal),atom(rel(material),var(pipeJoint)),data(flexible))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.1.2.0.1,5.1.2 Jointing for PVC-U pipes and fittings shall be in accordance with the methods described in AS/NZS 2032.,"if(or(expr(fun(equal),atom(rel(material),var(pipe)),data(pvc-u)),expr(fun(equal),atom(rel(material),var(pipeFitting)),data(pvc-u)))),then(obligation(expr(fun(complyWith),atom(var(pipeJoint)),data(as/nzs_2032))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.3.1.0.1,"5.3.1 Figure 7 gives acceptable methods for the bedding and backfilling of the drainage pipes listed in Table 1 except where: a) The trench is located within or above peat, b) Scouring of the trench is likely due to unstable soils, c) The horizontal separation between any building foundation and the underside of the pipe trench is less than that required by Paragraph 5.7.1, or d) The cover H to the pipe is more than 2.5 m.","if(and(expr(fun(equal),atom(var(pipe)),data(TRUE)),not(not(fun(within),atom(rel(location),var(trench)),data(peat))),not(not(fun(above),atom(rel(location),var(trench)),data(peat))),not(not(fun(equal),atom(rel(type),var(soil)),data(unstable))),and(expr(fun(equal),atom(rel(elevation),var(ground)),data(h1)),expr(fun(equal),atom(rel(elevation),var(topOfPipe)),data(h2)),expr(fun(greaterThan),atom(var(h1-h2)),data(2.5m))))),then(obligation(expr(fun(complyWith),atom(var(drain)),data(figure_7))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.4.1.0.1.1,"The width of the trench at the top of the pipe shall be no more than 600 mm unless the pipes in the trench are covered with concrete, as shown in Figure 7 (c).","if(and(expr(fun(equal),atom(rel(location),var(pipe)),data(inGround)),expr(fun(greaterThan),atom(rel(width),var(trenchAtTopOfPipe)),data(600mm)))),then(obligation(expr(fun(equal),atom(rel(cover),var(trench)),data(concrete))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.8.2.0.1.b.1,Junctions beneath the building joining at an angle of not more than 45o (see Figure 13).,"if(expr(fun(beneath),atom(rel(location),var(drainJunction)),data(building))),then(expr(fun(lessThanEqual),atom(var(junctionAngle)),data(45°)))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.9.1.0.1,"5.9.1 Where two or more soil fixtures are connected to a branch drain beneath the building, access for cleaning shall be provided by a sealed floor level rodding point located downstream of the highest fixture connection to the branch drain (see Figures 10 and 13).","if(and(expr(fun(greaterthanEqual),atom(rel(count),var(soilFixture)),data(2)),expr(fun(connectedTo),atom(var(soilFixture)),data(branchDrain)),expr(fun(beneath),atom(rel(location),var(branchDrain)),data(building)))),then(and(expr(fun(equal),atom(var(cleaningAccess)),data(roddingPoint)),expr(fun(equal),atom(rel(elevation),var(roddingPoint)),data(floorlevel)),expr(fun(equal),atom(rel(type),var(roddingPoint)),data(sealed)),expr(fun(equal),atom(rel(location),var(roddingPoint)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.9.3.0.1,5.9.3 Access points may be located in a space containing a soil fixture.,"if(expr(fun(equal),atom(rel(location),var(accessPoint)),data(space))),then(permission(expr(fun(contain),atom(var(space)),data(soilFixture))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r5.10.1.0.1,"5.10.1 Where a drain or part of a drain is no longer required, it shall be disconnected from the foul water drainage system at the junction with the live drain or at the property boundary.","then(or(obligation(expr(fun(disconnect),atom(var(drainSection)),data(atLiveDrainJunction))),obligation(expr(fun(disconnect),atom(var(drainSection)),data(propertyBoundary)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r6.1.1.0.1,6.1.1 All sections of the drainage system shall be tested by water test or air test to ensure watertightness.,"then(or(obligation(expr(fun(verified),atom(rel(soundness),var(drainSection)),data(waterTest))),obligation(expr(fun(verified),atom(rel(soundness),var(drainSection)),data(airTest)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r6.1.3.0.1,6.1.3 Air tests may be carried out in accordance with either clause 15.3 of AS/NZS 3500.2 or paragraph 8.3 of E1/VM1.,"if(expr(fun(equal),atom(var(airTest)),data(TRUE))),then(or(obligation(expr(fun(complyWith),atom(var(airTest)),data(as/nzs_3500.2_clause_15.3))),obligation(expr(fun(complyWith),atom(var(airTest)),data(e1/vm1_paragraph_8.3)))))"
lrml/NZ_NZBC-G13AS2#2.7.lrml,r6.1.5.0.1,"6.1.5 Where a building is proposed to be built over an existing drain, the drain shall be verified as being sound both before and after construction.","if(expr(fun(over),atom(var(building)),data(existingDrain))),then(and(expr(fun(verified),atom(rel(soundness),var(existingDrain)),data(beforeConstruction)),expr(fun(verified),atom(rel(soundness),var(existingDrain)),data(afterConstruction))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r1.0.1,1.0.1 The method of solid waste disposal in multi-unit and group dwellings shall be by the provision of moveable containers having a capacity of at least 80 litres for each dwelling unit.,"if(atom(var(multiUnitDwelling)),or(atom(var(groupDwelling)))),then(obligation(atom(var(disposalMethod),data(moveableContainer))),and(atom(rel(volume()),var(moveableContainer),data(80lPerDwellingUnit),operator(greaterThanEqual))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r1.0.2,"1.0.2 Where containers are stored in a common area within a building or part of a building, a space of at least 0.5 m x 0.5 m by 1 m high shall be provided for each dwelling unit.","if(atom(var(wasteStorageArea),data(common),operator(equal)),and(atom(rel(located),var(wasteStorageArea),data(withinBuilding)))),then(obligation(atom(rel(length),var(wasteStorageArea),data(0.5mperHouseholdUnit),operator(greaterThanEqual))),and(atom(rel(width),var(wasteStorageArea),data(0.5mperHouseholdUnit),operator(greaterThanEqual))),and(atom(rel(height),var(wasteStorageArea),data(1mperHouseholdUnit),operator(greaterThanEqual))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r1.0.3,"1.0.3 If a common storage area such as a ground floor rubbish area is provided within the building, it shall be adequately ventilated to the open air in compliance with NZBC G4.","if(atom(var(wasteStorageArea)),and(atom(var(type),data(common),operator(equal))),and(atom(var(location),data(withinBuilding)))),then(obligation(atom(rel(complyWith),var(ventilation),data(nzbc_g4))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r2.0.1,"2.0.1 In multi-unit and group dwellings, the maximum carry distance between any occupancy and a common solid waste storage area or chute shall be 30 m.","if(atom(var(multiUnitDwelling)),or(atom(var(groupDwelling)))),then(prohibiton(atom(var(carryDistance),data(30m),operator(greaterThan))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.1.1,3.0.1 An acceptable common storage area for solid waste (see Figure 1) shall: a) Have interior surfaces which are easily cleaned,"if(atom(var(wasteStorageArea)),and(atom(var(type),data(common),operator(equal)))),then(obligation(atom(var(interiorSurface),data(easilyCleaned),operator(equal))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.1.2,3.0.1 An acceptable common storage area for solid waste (see Figure 1) shall: Be totally enclosed and separated from habitable spaces and food preparation areas,"if(atom(var(wasteStorageArea)),and(atom(var(type),data(common),operator(equal)))),then(obligation(atom(var(enclosure),data(fullyEnclosed),operator(equal))),and(not(atom(rel(adjacent),var(location),data(habitableSpace)))),and(not(atom(rel(adjacent),var(location),data(foodPreparationArea)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.1.3,3.0.1 An acceptable common storage area for solid waste (see Figure 1) shall: Be protected from high temperatures which could hasten putrification,"if(atom(var(wasteStorageArea)),and(atom(var(type),data(common),operator(equal)))),then(obligation(not(atom(var(exposure),data(highTemperature)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.1.4,3.0.1 An acceptable common storage area for solid waste (see Figure 1) shall: Be screened from habitable spaces to reduce visual impact.,"if(atom(var(wasteStorageArea)),atom(var(type),data(common),operator(equal))),then(obligation(atom(var(visualImpact),data(low),operator(equal))),obligation(and(atom(rel(screenedFrom),var(visualExposure),data(habitableSpace)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.2,3.0.2 Concrete floors are acceptable if they have a U5 trowelled finish complying with NZS 3114 and are graded at 1 in 50 to a floor drain. Floor drains shall comply with NZBC G13.,"if(atom(var(floor)),and(atom(var(material),data(concrete),operator(equal))),and(atom(var(location),data(wasteStorageArea),operator(equal)))),then(obligation(atom(var(surfaceFinish),data(U5),operator(equal))),obligation(and(atom(var(slope),data(1_in_50),operator(equal)))),obligation(and(atom(rel(towards),var(slope),data(floorWaste)))),obligation(and(atom(rel(complyWith),var(floorWaste),data(nzbc_g13)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.3,"3.0.3 Walls in spaces where storage bins are likely to receive food wastes and are subject to spillage shall be constructed of concrete, galvanised sheet steel, vinyl or similar material.","if(atom(var(wall)),and(atom(var(location),data(wasteStorageArea)))),then(obligation(atom(var(material),data(concrete),operator(equal))),obligation(or(atom(var(material),data(galvanisedSteelSheet),operator(equal)))),obligation(or(atom(var(material),data(vinyl),operator(equal)))),obligation(or(atom(var(material),data(concrete),operator(similarTo)))),obligation(or(atom(var(material),data(galvanisedSteelSheet),operator(similarTo)))),obligation(or(atom(var(material),data(vinyl),operator(similarTo)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.4,3.0.4 Windows facing north in any food waste storage area shall be screened from direct sunlight in order to reduce the likelihood of putrification.,"if(atom(var(window)),and(atom(var(orientation),data(north))),and(atom(var(location),data(wasteStorageArea)))),then(obligation(atom(rel(screenedFrom),var(thermalExposure),data(directSunlight))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.5,3.0.5 An alternative solution is for perishable wastes to be stored within a refrigerated store room.,"if(atom(var(solidWaste)),atom(var(type),data(perishable))),then(permission(atom(var(wasteStorageArea),data(refrigerated))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.6,3.0.6 opening windows shall be screened to prevent entry by insects and other vermin.,"if(atom(var(window)),and(atom(var(operation),data(openable))),and(atom(var(location),data(wasteStorageArea)))),then(obligation(atom(rel(screenedFrom),var(access),data(vermin))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.7,"3.0.7 A water supply tap, complying with NZBC G12, shall be provided for washing down common waste storage areas.","if(atom(var(wasteStorageArea)),atom(var(type),data(common),operator(equal))),then(obligation(expr(fun(count)),atom(var(waterSupplyTap),data(1),operator(greaterThan))),obligation(and(atom(rel(complyWith),var(waterSupplyTap),data(nzbc_g12)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.8,3.0.8 Ventilation: Storage areas located indoors shall be adequately ventilated to open air in compliance with NZBC G4.,"if(atom(var(wasteStorageArea)),and(atom(var(location),data(withinBuilding),operator(equal)))),then(obligation(atom(rel(complyWith),var(ventilation),data(nzbc_g4))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.9,"3.0.9 Mechanical ventilation: Where mechanical ventilation is used, it shall: a) Provide no less than 6 air changes per hour, b) Maintain a negative pressure within the storage area relative to adjacent areas (if any), and c) Discharge foul air to a safe place to avoid the likelihood of exhaust air entering any building.","if(atom(var(ventilation)),and(atom(var(type),data(mechanicalVentilation)))),then(obligation(atom(var(ventilationRate),data(6airChangesPerHour),operator(greaterThanEqual))),obligation(and(atom(var(airPressure),data(ambientAirPressure),operator(lessThan)))),obligation(and(atom(rel(towards),var(discharge),data(safePlace),operator(equal)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.0.10,3.0.10 Access between the storage area and collection vehicle shall comply with NZBC D1.,"if(atom(var(access)),and(atom(var(from),data(wasteStorageArea))),and(atom(var(to),data(collectionVehicle)))),then(obligation(atom(rel(complyWith),var(accessRoute),data(nzbc_d1))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r3.1.1,"3.1.1 NZS 4304 Section 6.2 is another Acceptable Solution for storage areas, but may exceed the performance criteria of NZBC G15.","if(atom(var(wasteStorageArea))),then(permission(atom(rel(complyWith),var(wasteStorageArea),data(prescriptiveStatement_nzs_4304_6.2))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r4.0.1,"4.0.1 Where waste chutes with side-entry hoppers (see Figure 2) are used as an alternative to common storage areas, the chute shall: a) Have a minimum internal diameter of 450 mm, b) Be self-cleaning, vertical and have smooth joints, c) Be vented at the top above the roof line, and at the bottom above the container, and d) Terminate centrally over a suitable container located in a room complying with Paragraphs 3.0.1 to 3.0.9.","if(atom(var(solidWasteChute))),then(obligation(atom(var(internalDiameter),data(450mm),operator(greaterThanEqual))),obligation(and(atom(var(cleaningMode),data(selfCleaning),operator(equal)))),obligation(and(atom(var(orientation),data(vertical),operator(equal)))),obligation(and(atom(var(interiorSurface),data(smooth),operator(equal)))),obligation(and(atom(var(hasVent),data(aboveRoofLine)))),obligation(and(atom(var(hasVent),data(bottomOfChute)))),obligation(and(atom(var(disposalMethod),data(moveableContainer)))),obligation(and(atom(rel(located),var(moveableContainer),data(room)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.1)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.2)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.3)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.4)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.5)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.6)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.7)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.8)))),obligation(and(atom(rel(complyWith),var(room),data(prescriptiveStatements_nzbc_g15_3.0.9)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r4.0.2.1,"4.0.2 Side-entry hoppers (see Figure 2) shall: a) Have a maximum opening diameter of 250 mm, b) Have self-closing, tight-fitting doors to prevent odours escaping, c) Have an easily cleaned wall surface surrounding the opening for 300 mm (this may be galvanised steel, ceramic tiles or similar material), d) Be located outside any dwelling or enclosed stair access, and away from any habitable space or food preparation area, and e) Have adequate ventilation, preferably by being located in the open air (e.g. on an outside balcony).","if(atom(var(sideEntryHopper))),then(obligation(atom(var(openingDiameter),data(250mm),operator(lessThanEqual))),obligation(and(atom(var(hasDoor)))),obligation(and(atom(var(door),data(selfClosing),operator(equal)))),obligation(and(atom(var(door),data(tightFitting),operator(equal)))),obligation(and(atom(var(surfaceFinish),data(easilyCleaned)))),permission(and(atom(var(surface),data(galvanisedSteelSheet)))),obligation(and(not(atom(rel(located),var(sideEntryHopper),data(dwelling))))),obligation(and(not(atom(rel(located),var(sideEntryHopper),data(enclosedStairAccess))))),obligation(and(not(atom(rel(adjacent),var(sideEntryHopper),data(habitableSpace))))),obligation(and(not(atom(rel(adjacent),var(sideEntryHopper),data(foodPreparationArea))))),obligation(and(atom(var(ventilation),data(adequate)))),permission(and(atom(rel(located),var(sideEntryHopper),data(openAir)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r4.0.2.3,"4.0.2 Side-entry hoppers (see Figure 2) shall: a) Have a maximum opening diameter of 250 mm, b) Have self-closing, tight-fitting doors to prevent odours escaping, c) Have an easily cleaned wall surface surrounding the opening for 300 mm (this may be galvanised steel, ceramic tiles or similar material), d) Be located outside any dwelling or enclosed stair access, and away from any habitable space or food preparation area, and e) Have adequate ventilation, preferably by being located in the open air (e.g. on an outside balcony). Where hoppers are inside buildings, they shall be located in separate ventilated compartments complying with NZBC G4.","if(atom(var(sideEntryHopper))),then(obligation(atom(var(openingDiameter),data(250mm),operator(lessThanEqual))),obligation(and(atom(var(hasDoor)))),obligation(and(atom(var(door),data(selfClosing),operator(equal)))),obligation(and(atom(var(door),data(tightFitting),operator(equal)))),obligation(and(atom(var(surfaceFinish),data(easilyCleaned)))),permission(and(atom(var(surface),data(materials)))),permission(and(atom(var(surface),data(galvanisedSteelSheet),operator(similarTo)))),permission(and(atom(var(surface),data(ceramicTiles),operator(similarTo)))),obligation(and(not(atom(rel(located),var(sideEntryHopper),data(dwelling))))),obligation(and(not(atom(rel(located),var(sideEntryHopper),data(enclosedStairAccess))))),obligation(and(not(atom(rel(adjacent),var(sideEntryHopper),data(habitableSpace))))),obligation(and(not(atom(rel(adjacent),var(sideEntryHopper),data(foodPreparationArea))))),obligation(and(atom(var(ventilation),data(adequate)))),permission(and(atom(rel(located),var(sideEntryHopper),data(openAir)))),obligation(and(atom(rel(complyWith),var(ventilation),data(nzbc_g4)))))"
lrml/NZ_NZBC-G15AS1#2.7.lrml,r4.0.3,"4.0.3 Buildings incorporating waste chutes, shall be provided with a water supply tap on every second floor, adjacent to the chute, to facilitate cleaning.","if(atom(var(solidWasteChute))),then(obligation(atom(var(waterSupplyTap),data(1perEverySecondFloor))),obligation(and(atom(rel(adjacent),var(waterSupplyTap),data(solidWasteChute)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.1.0.1,"1.1.1 Type The acceptable solutions described in this document are for chimneys built of brickwork, concrete or precast pumice concrete, that are connected to timber frame or masonry buildings complying with NZS 3604 or NZS 4229.","if(and(expr(fun(is),atom(rel(construction),var(chimney)),or(data(brickwork),data(concrete),data(precastPumiceConcrete))),expr(fun(connectTo),atom(var(chimney)),data(building)),expr(fun(is),atom(rel(construction),var(building)),or(data(timberFrame),data(masonry))),expr(fun(complyWith),atom(rel(construction),var(building)),or(data(nzs_3604),data(nzs_4229))))),then(obligation(expr(fun(complyWith),atom(var(chimney)),data(nzbc_b1_as3))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.2.0.1,1.1.2 Height The height of any chimney measured from the top of the chimney foundation slab to the top of the chimney stack shall not exceed 9 m.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(define),expr(fun(topOf),atom(rel(slab),var(foundation))),data(x)),expr(fun(define),expr(fun(topOf),atom(rel(stack),var(chimney))),data(y)),expr(fun(inBetween),atom(rel(height),var(chimney)),and(data(x),data(y))))),then(prohibition(expr(fun(greaterThan),atom(rel(height),var(chimney)),data(9m))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.2.0.2,Chimneys shall not cantilever more than 2.4 m above the fixing at roof level (refer Paragraph 1.7).,"if(and(expr(fun(is),atom(var(chimney)),data(cantilevered)),expr(fun(at),atom(rel(base),var(chimney)),data(roof)))),then(prohibition(expr(fun(greaterThan),atom(rel(height),var(chimney)),data(2.4m))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.3.0.1.a.1,1.1.3 Size The width (measured along the building line) and depth (measured perpendicular to the building line) shall not exceed: a) For the foundation and chimney base – precast pumice concrete 1600 mm wide x 1050 mm deep,"if(and(expr(fun(define),expr(fun(width),atom(rel(foundation),var(chimney))),data(w)),expr(fun(along),atom(rel(measurement),var(w)),data(buildingLine)),expr(fun(define),expr(fun(depth),atom(rel(foundation),var(chimney))),data(d)),expr(fun(perpendicular),atom(rel(measurement),var(d)),data(buildingLine)),expr(fun(is),atom(rel(construction),var(chimney)),data(precastPumiceConcrete)))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(1600mm))),expr(fun(lessThanEqual),atom(rel(depth),var(chimney)),data(1050mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.3.0.1.a.2,1.1.3 Size The width (measured along the building line) and depth (measured perpendicular to the building line) shall not exceed: a) For the foundation and chimney base – brickwork or concrete 1200 mm wide x 1050 mm deep,"if(and(expr(fun(define),expr(fun(width),atom(rel(foundation),var(chimney))),data(w)),expr(fun(along),atom(rel(measurement),var(w)),data(buildingLine)),expr(fun(define),expr(fun(depth),atom(rel(foundation),var(chimney))),data(d)),expr(fun(perpendicular),atom(rel(measurement),var(d)),data(buildingLine)),expr(fun(is),atom(rel(construction),var(chimney)),or(data(brickwork),data(concrete))))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(1200mm))),expr(fun(lessThanEqual),atom(rel(depth),var(chimney)),data(1050mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.3.0.1.a.3,1.1.3 Size The width (measured along the building line) and depth (measured perpendicular to the building line) shall not exceed:   For a brick chimney stack – single skin (see Figure 2) 500 mm wide x 500 mm deep,"if(and(expr(fun(define),expr(fun(width),atom(rel(stack),var(chimney))),data(w)),expr(fun(along),atom(rel(measurement),var(w)),data(buildingLine)),expr(fun(define),expr(fun(depth),atom(rel(stack),var(chimney))),data(d)),expr(fun(perpendicular),atom(rel(measurement),var(d)),data(buildingLine)),expr(fun(is),atom(rel(construction),var(stack)),data(singleSkinBrick)))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(500mm))),expr(fun(lessThanEqual),atom(rel(depth),var(chimney)),data(500mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.3.0.1.b.1,1.1.3 Size The width (measured along the building line) and depth (measured perpendicular to the building line) shall not exceed:   For a brick chimney stack – double skin (see Figure 3) - 1200 mm wide x 680 mm deep,"if(and(expr(fun(define),expr(fun(width),atom(rel(stack),var(chimney))),data(w)),expr(fun(along),atom(rel(measurement),var(w)),data(buildingLine)),expr(fun(define),expr(fun(depth),atom(rel(stack),var(chimney))),data(d)),expr(fun(perpendicular),atom(rel(measurement),var(d)),data(buildingLine)),expr(fun(is),atom(rel(construction),var(stack)),data(doubleSkinBrick)))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(1200mm))),expr(fun(lessThanEqual),atom(rel(depth),var(chimney)),data(680mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.3.0.1.b.2,1.1.3 Size The width (measured along the building line) and depth (measured perpendicular to the building line) shall not exceed: For a concrete or precast pumice concrete chimney stack - 1200 mm wide x 700 mm deep,"if(and(expr(fun(define),expr(fun(width),atom(rel(stack),var(chimney))),data(w)),expr(fun(along),atom(rel(measurement),var(w)),data(buildingLine)),expr(fun(define),expr(fun(depth),atom(rel(stack),var(chimney))),data(d)),expr(fun(perpendicular),atom(rel(measurement),var(d)),data(buildingLine)),expr(fun(is),atom(rel(construction),var(stack)),or(data(concrete),data(precastPumiceConcrete))))),then(and(obligation(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(1200mm))),expr(fun(lessThanEqual),atom(rel(depth),var(chimney)),data(700mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.1.4.0.1,1.1.4 Chimney liners Where chimney liners are used they are to be separated from the chimney to ensure free thermal movement. This shall be achieved by coating the liner with a suitable debonding agent or by wrapping it in a combustible material no less than 0.25 mm thick.,"if(expr(fun(has),atom(var(chimney)),data(liner))),then(or(and(obligation(expr(fun(has),atom(var(liner)),data(coating))),expr(fun(is),atom(rel(material),var(coating)),data(debondingAgent))),and(expr(fun(has),atom(var(liner)),data(wrapping)),expr(fun(is),atom(rel(type),var(wrapping)),data(combustible)),expr(fun(greaterThanEqual),atom(rel(thickness),var(wrapping)),data(0.25mm)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.2.1.0.1.a.1,1.2.1 Chimney wall thicknesses shall be no less than: a) Brick – single skin (see Figure 2) 155 mm,"if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(brick)),expr(fun(is),atom(rel(type),var(brick)),data(singleskin)),expr(fun(of),atom(rel(wall),var(chimney)),and(data(stack),data(gather),data(base))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(155mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.2.1.0.1.a.2,1.2.1 Chimney wall thicknesses shall be no less than: a) Brick – single skin (see Figure 2) 155 mm – double skin (see Figure 3) 245 mm,"if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(brick)),expr(fun(is),atom(rel(type),var(brick)),data(doubleskin)),expr(fun(of),atom(rel(wall),var(chimney)),and(data(stack),data(gather),data(base))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(245mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.2.1.0.1.b.1,1.2.1 Chimney wall thicknesses shall be no less than: Concrete 170 mm,"if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(concrete)),expr(fun(of),atom(rel(wall),var(chimney)),and(data(stack),data(gather),data(base))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(170mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.2.1.0.1.c.1,1.2.1 Chimney wall thicknesses shall be no less than: Precast pumice concrete 85 mm,"if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(precastPumiceConcrete)),expr(fun(of),atom(rel(wall),var(chimney)),and(data(stack),data(gather),data(base))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(85mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.3.3.0.1,1.3.3 The chimney foundation walls shall be 150 mm thick reinforced concrete.  Vertical and horizontal reinforcing steel shall be as given in Paragraph 1.6.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(reinforcedConcrete)),expr(fun(of),atom(var(wall)),data(foundation)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(150mmm))),expr(fun(complyWith),atom(rel(reinforcingSteel),var(wall)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(1.6))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.3.3.0.2,1.3.3 The chimney foundation walls shall be 190 mm thick concrete masonry. Vertical and horizontal reinforcing steel shall be as given in Paragraph 1.6.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(concreteMasonry)),expr(fun(of),atom(var(wall)),data(foundation)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(150mmm))),expr(fun(complyWith),atom(rel(reinforcingSteel),var(wall)),data(rule)),expr(fun(equal),atom(rel(key),var(rule)),data(1.6))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.3.3.0.3,1.3.3 The chimney foundation walls shall be brick construction complying with Figures 2 or 3.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(brick)),expr(fun(of),atom(var(wall)),data(foundation)))),then(and(obligation(expr(fun(greaterThanEqual),atom(rel(thickness),var(wall)),data(150mmm))),expr(fun(complyWith),atom(var(wall)),data(figure)),expr(fun(equal),atom(rel(key),var(figure)),or(data(figure_2),data(figure_3)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.4.1.0.1,"1.4.1 Hearth slabs shall be of concrete no less than 75 mm thick, reinforced with D10 bars located centrally at 225 mm centres each way. See Figure 1.","if(and(expr(fun(has),atom(var(chimney)),data(hearth)),expr(fun(of),atom(var(slab)),data(hearth)))),then(and(obligation(expr(fun(is),atom(rel(construction),var(slab)),data(concrete))),expr(fun(greaterThanEqual),atom(rel(thickness),var(slab)),data(75mm)),expr(fun(has),atom(var(slab)),data(reinforcingSteel)),expr(fun(is),atom(rel(type),var(reinforcingSteel)),data(D10bars_2ways)),expr(fun(is),atom(rel(placement),var(reinforcingSteel)),data(225mmCentres)),expr(fun(is),atom(rel(placement),var(reinforcingSteel)),data(225mmCentres))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.5.1.0.1,"1.5.1 The widths of openings in chimney breasts, and their supporting lintels, shall comply with Table 1.","if(and(expr(fun(has),atom(var(chimney)),data(breast)),expr(fun(has),atom(var(breast)),data(opening)),expr(fun(has),atom(var(opening)),data(lintel)))),then(and(obligation(expr(fun(complyWith),atom(rel(width),var(opening)),data(table))),obligation(expr(fun(complyWith),atom(rel(size),var(lintel)),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_1)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.6.1.0.1,"1.6.1 Reinforcing of foundation walls, chimney bases (including the gathers) and chimney stacks (see Figures 2 to 5 inclusive) shall comprise: a) D12 bars at 400 mm maximum centres vertically. Laps in bars shall be no less than 300 mm. b) R6 bars at 200 mm centres horizontally. These will be in the form of closed stirrups in the stack and U bars elsewhere.","if(and(expr(fun(has),atom(var(chimney)),or(data(stack),data(base),data(gather),data(foundation))),expr(fun(of),atom(rel(reinforcing),var(wall)),and(data(stack),data(gather),data(foundation))))),then(and(obligation(expr(fun(is),atom(rel(type),var(reinforcing)),and(data(verticalReinforcingBar),data(horizontalReinforcingBar)))),obligation(expr(fun(is),atom(rel(size),var(verticalReinforcingBar)),data(d12))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(verticalReinforcingBar)),data(400mmCentres))),obligation(expr(fun(greaterThanEqual),atom(rel(lap),var(verticalReinforcingBar)),data(300mm))),obligation(expr(fun(greaterThanEqual),atom(rel(size),var(horizontalReinforcingBar)),data(R6))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(horizontalReinforcingBar)),data(200mmCentres))),obligation(expr(fun(is),atom(rel(type),var(horizontalReinforcingBar)),data(u-bar)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.6.1.0.2,"1.6.1 Reinforcing of foundation walls, chimney bases (including the gathers) and chimney stacks (see Figures 2 to 5 inclusive) shall comprise: a) D12 bars at 400 mm maximum centres vertically. Laps in bars shall be no less than 300 mm. b) R6 bars at 200 mm centres horizontally. These will be in the form of closed stirrups in the stack and U bars elsewhere.","if(and(expr(fun(has),atom(var(chimney)),or(data(stack),data(base),data(gather),data(foundation))),expr(fun(of),atom(rel(reinforcing),var(wall)),data(stack)))),then(and(obligation(expr(fun(is),atom(rel(type),var(reinforcing)),and(data(verticalReinforcingBar),data(horizontalReinforcingBar)))),obligation(expr(fun(is),atom(rel(size),var(verticalReinforcingBar)),data(d12))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(verticalReinforcingBar)),data(400mmCentres))),obligation(expr(fun(greaterThanEqual),atom(rel(lap),var(verticalReinforcingBar)),data(300mm))),obligation(expr(fun(greaterThanEqual),atom(rel(size),var(horizontalReinforcingBar)),data(R6))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(horizontalReinforcingBar)),data(200mmCentres))),obligation(expr(fun(is),atom(rel(type),var(horizontalReinforcingBar)),data(stirrup))),obligation(expr(fun(is),atom(rel(type),var(stirrup)),data(closed)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.6.1.0.3,"1.6.1 Reinforcing of foundation walls, chimney bases (including the gathers) and chimney stacks (see Figures 2 to 5 inclusive) shall comprise: a) D12 bars at 400 mm maximum centres vertically. Laps in bars shall be no less than 300 mm. b) R6 bars at 200 mm centres horizontally. These will be in the form of closed stirrups in the stack and U bars elsewhere. c) Double horizontal reinforcing at any change in direction of the vertical steel (e.g. at the gather/stack intersection).","if(and(expr(fun(has),atom(var(chimney)),or(data(stack),data(base),data(gather),data(foundation))),expr(fun(of),atom(rel(reinforcing),var(wall)),and(data(stack),data(gather),data(foundation))),expr(fun(at),atom(rel(reinforcing),var(wall)),data(intersection)),expr(fun(inBetween),atom(var(intersection)),and(data(gather),data(stack))),expr(fun(is),atom(rel(direction),var(verticalReinforcingBar)),data(change)))),then(and(obligation(expr(fun(is),atom(rel(type),var(reinforcing)),and(data(verticalReinforcingBar),data(horizontalReinforcingBar)))),obligation(expr(fun(is),atom(rel(size),var(verticalReinforcingBar)),data(d12))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(verticalReinforcingBar)),data(400mmCentres))),obligation(expr(fun(greaterThanEqual),atom(rel(lap),var(verticalReinforcingBar)),data(300mm))),obligation(expr(fun(greaterThanEqual),atom(rel(size),var(horizontalReinforcingBar)),data(R6))),obligation(expr(fun(lessThanEqual),atom(rel(spacing),var(horizontalReinforcingBar)),data(200mmCentres))),obligation(expr(fun(equal),expr(fun(count),atom(var(horizontalReinforcingBar))),data(2)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.2.0.1,"1.7.2 Where a packer (see Figures 2, 3, 6 and 7(b)) is shown between the chimney and building it shall be: a) Concrete, brick, steel (angle, channel or Z section), or any insulating material which has a long term operating temperature of no less than 150°C, b) Secured in place to prevent it dislodging, and c) Capable of withstanding a compressive force of 10 kN without shortening by more than 1.5 mm.","if(expr(fun(inBetween),atom(rel(exists),var(packer)),and(data(chimney),data(building)))),then(and(or(obligation(expr(fun(is),atom(rel(construction),var(packer)),or(data(Concrete,brick,steel(angle,channel),data(Zsection))))),expr(fun(is),atom(rel(construction),var(packer)),data(anyinsulatingmaterialwhichhasalongtermoperatingtemperatureofnolessthan150√Ç¬∞C))),expr(fun(secured),atom(var(packer)),data(inPlace)),expr(fun(capableOf),atom(var(packer)),data(withstandingA_compressiveForceOf_10kN_withoutShorteningByMoreThan_1.5mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.3.0.1,1.7.3 Floor and roof brackets The brackets shall comprise a 50 mm x 4 mm hot dip galvanised steel strap placed around the chimney.,"if(and(not(expr(fun(integralWith),atom(rel(constructed),var(chimney)),data(building))),expr(fun(securedBy),atom(var(chimney)),data(bracket)))),then(obligation(expr(fun(comprise),atom(var(bracket)),data(50mm_x_4mmHotDipGalvanisedSteelStrapPlacedAroundTheChimney))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.6.0.1,1.7.6 Brick chimneys Brick chimneys shall be restrained at roof level by a zinc coated 50 x 1.0 mm mild steel 'U' strap used in conjunction with closely spaced wall ties.,"if(expr(fun(equal),atom(rel(construction),var(chimney)),data(brick))),then(and(obligation(expr(fun(restrainedBy),atom(var(chimney)),data(u-strap))),expr(fun(restrainedAt),atom(var(chimney)),data(roofLevel)),expr(fun(equal),atom(rel(material),var(u-strap)),data(mildSteel)),expr(fun(equal),atom(rel(type),var(u-strap)),data(zincCoated)),expr(fun(equal),atom(rel(size),var(u-strap)),data(5_x_.0mm)),expr(fun(greaterThanEqual),atom(rel(spacing),var(u-strap)),data(50mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.7.0.1,"1.7.7 Wall ties (see Figure 7(a)) shall be located in mortar joints at 225 mm maximum centres up each side of the chimney, except that pairs of ties shall be used for chimneys wider than 600 mm.","if(expr(fun(lessThanEqual),atom(rel(width),var(chimney)),data(600mm))),then(and(obligation(expr(fun(locatedIn),atom(var(wallTies)),data(mortarJoints))),expr(fun(locatedAt),atom(var(wallTies)),data(225mmMaximumCentresUpEachSideOfTheChimney))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.7.0.2,"1.7.7 Wall ties (see Figure 7(a)) shall be located in mortar joints at 225 mm maximum centres up each side of the chimney, except that pairs of ties shall be used for chimneys wider than 600 mm.","if(expr(fun(greaterThan),atom(rel(width),var(chimney)),data(600mm))),then(and(obligation(expr(fun(locatedIn),atom(var(wallTies)),data(mortarJoints))),expr(fun(locatedAt),atom(var(wallTies)),data(225mmMaximumCentresUpEachSideOfTheChimney)),expr(fun(usedIn),atom(var(wallTies)),data(pairs))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.8.0.1,1.7.8 Wall ties shall be constructed from either 4 mm diameter galvanised bar or 25 x 1.5 mm zinc coated steel strip capable of withstanding a load of 1.2 kN without elongating or shortening by more than 1.5 mm.,"if(expr(fun(equal),atom(var(wallTies)),data(TRUE))),then(or(obligation(expr(fun(equal),atom(rel(material),var(wallTies)),data(4mmDiameterGalvanisedBar))),expr(fun(equal),atom(rel(material),var(wallTies)),or(data(25_x_1.5mmZincCoatedSteelStripCapableOfWithstandingA_loadOf_1.2kN_withoutElongating),data(shorteningByMoreThan_1.5mm)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.9.0.1,1.7.9 Where zinc coating of components is required it shall be no less than 300 g/m2 in accordance with AS 1397.,"if(expr(fun(equal),atom(var(components)),data(zincCoated))),then(obligation(expr(fun(complyWith),atom(rel(density),var(zincCoating)),data(as_1397))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.10.0.1,1.7.10 Nails used to fix straps to roof or ceiling framing shall be spaced at no less than 35 mm in Radiata Pine,"if(and(expr(fun(affixedWithNails),atom(var(straps)),or(data(roofFraming),data(ceilingFraming))),expr(fun(is),atom(rel(material),var(framing)),data(radiataPine)))),then(obligation(expr(fun(greaterThanEqual),atom(rel(spacing),var(nails)),data(35mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.10.0.2,1.7.10 Nails used to fix straps to roof or ceiling framing shall be spaced at no less than 70 mm in other timbers.,"if(and(expr(fun(affixedWithNails),atom(var(straps)),or(data(roofFraming),data(ceilingFraming))),not(expr(fun(is),atom(rel(material),var(framing)),data(radiataPine))))),then(obligation(expr(fun(greaterThanEqual),atom(rel(spacing),var(nails)),data(70mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.13.0.1,"1.7.13 Precast pumice concrete chimneys Precast pumice concrete chimneys shall be restrained at roof level either by a 50 x 1 mm 'U' strap wrapped around the chimney, or by a hot dip galvanised deformed 6 mm reinforcing bar placed into the grout around the reinforcing steel, together with either fixing brackets or fixing ties (see Figure 7(b)). Straps and bars shall satisfy the relevant requirements of Paragraphs 1.7.6 to 1.7.12.","if(expr(fun(is),atom(rel(construction),var(chimney)),data(precastPumiceConcrete))),then(and(obligation(expr(fun(has),atom(var(chimney)),data(restraint))),obligation(expr(fun(at),atom(rel(location),var(restraint)),data(roof))),or(and(obligation(expr(fun(is),atom(rel(type),var(restraint)),data(u-strap))),obligation(expr(fun(is),atom(rel(size),var(u-strap)),data(5_x_mm))),obligation(expr(fun(is),atom(rel(method),var(restraint)),data(wrappedAroundChimney)))),and(obligation(expr(fun(is),atom(rel(type),var(restraint)),data(reinforcingBar))),obligation(expr(fun(is),atom(rel(size),var(reinforcingBar)),data(d6))),obligation(expr(fun(is),atom(var(reinforcingBar)),data(hotDipGalvanised))),obligation(expr(fun(is),atom(rel(method),var(restraint)),data(placedIntoGroutAroundReinforcingSteel))),obligation(expr(fun(include),atom(var(restraint)),or(data(bracket),data(tie)))))),obligation(expr(fun(complyWith),atom(var(restraint)),data(rule))),obligation(expr(fun(from),atom(rel(key),var(rule)),data(1.7.6))),obligation(expr(fun(to),atom(rel(key),var(rule)),data(1.7.12)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.14.0.1,"1.7.14 Fixing brackets (see Figure 7(b)) shall be made from 5.0 mm thick mild steel angle and drilled with: a) A 50 mm diameter hole to suit the reinforcing duct location, and b) A 14 mm diameter hole for the 12 mm diameter coach screw fixing to the double stud.","if(expr(fun(is),atom(rel(type),var(bracket)),data(fixing))),then(and(obligation(expr(fun(is),atom(rel(type),var(bracket)),data(angle))),expr(fun(is),atom(rel(material),var(bracket)),data(mildSteel)),expr(fun(equal),atom(rel(thickness),var(bracket)),data(5.0mm)),expr(fun(has),atom(var(bracket)),data(hole)),expr(fun(equal),expr(fun(count),atom(rel(type),var(hole))),data(2)),expr(fun(is),atom(rel(method),var(hole)),data(drilled)),expr(fun(define),atom(rel(type),var(hole)),data(h1)),expr(fun(define),atom(rel(type),var(hole)),data(h2)),expr(fun(equal),atom(rel(size),var(h1)),data(50mm)),expr(fun(for),atom(var(h1)),data(reinforcingDuct)),expr(fun(equal),atom(rel(size),var(h2)),data(14mm)),expr(fun(for),atom(var(h1)),data(coachScrew)),expr(fun(equal),atom(rel(size),var(coachScrew)),data(12mm)),expr(fun(for),atom(rel(fixing),var(coachScrew)),data(doubleStud))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.15.0.1.1,1.7.15 Fixing brackets shall be located in mortar joints between the units,"if(expr(fun(is),atom(rel(type),var(bracket)),data(fixing))),then(obligation(expr(fun(locatedIn),atom(var(bracket)),data(mortarJointBetweenTheUnits))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.15.0.1.2,1.7.15 Fixing brackets shall be spaced at no less than 480 mm centres for stacks up to 600 mm wide,"if(and(expr(fun(is),atom(rel(type),var(bracket)),data(fixing)),expr(fun(lessThanEqual),atom(rel(width),var(stack)),data(600mm)))),then(obligation(not(expr(fun(lessThan),atom(rel(spacedAt),var(bracket)),data(480mmCentres)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.15.0.1.3,1.7.15 Fixing brackets shall be spaced at no less than 320 mm centres for stacks wider than 600 mm.,"if(and(expr(fun(is),atom(rel(type),var(bracket)),data(fixing)),expr(fun(greaterThan),atom(rel(width),var(stack)),data(600mm)))),then(obligation(not(expr(fun(lessThan),atom(rel(spacedAt),var(bracket)),data(320mmCentres)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.16.0.1.1,"1.7.16 Fixing ties shall comprise 4 mm galvanised wire hairpins, which are hooked behind the reinforcing ducts and secured to the required adjacent double studding with four heavy duty fencing staples.","if(expr(fun(is),atom(rel(type),var(ties)),data(fixing))),then(and(obligation(expr(fun(is),atom(rel(type),var(ties)),data(4mmGalvanisedWireHairpins))),expr(fun(hookedBehind),atom(var(ties)),data(reinforcingDucts)),expr(fun(securedTo),atom(var(ties)),data(adjacentDoubleStudding)),expr(fun(securedBy),atom(var(ties)),data(fencingStaples)),expr(fun(is),atom(rel(type),var(fencingStaples)),data(heavyDuty)),expr(fun(equal),expr(fun(count),atom(var(fencingStaples))),data(4))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.16.0.1.2,The ties shall be located in mortar joints between the units,"if(expr(fun(is),atom(rel(type),var(ties)),data(fixing))),then(obligation(expr(fun(locatedIn),atom(var(ties)),data(mortarJointBetweenTheUnits))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.16.0.1.3,The ties shall be located at no less than 320 mm centres for stacks up to 600 mm wide,"if(and(expr(fun(is),atom(rel(type),var(ties)),data(fixing)),expr(fun(lessThanEqual),atom(rel(width),var(stack)),data(600mm)))),then(obligation(not(expr(fun(lessThan),atom(rel(spacedAt),var(ties)),data(320mmCentres)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.7.16.0.1.4,The ties shall be at no less than 160 mm centres for stacks wider than 600 mm.,"if(and(expr(fun(is),atom(rel(type),var(ties)),data(fixing)),expr(fun(greaterThan),atom(rel(width),var(stack)),data(600mm)))),then(obligation(not(expr(fun(lessThan),atom(rel(spacedAt),var(ties)),data(160mmCentres)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.1.0.1,1.8.1 Brickwork Brick chimney construction shall conform to the relevant sections of NZS 4210.,"if(expr(fun(is),atom(rel(construction),var(chimney)),data(brick))),then(obligation(expr(fun(complyWith),atom(rel(construction),var(chimney)),data(nzs_4210))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.2.0.1,"1.8.2 Concrete Chimneys of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(chimney)),data(nzs_3109))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.2.0.2,"1.8.2 Concrete Chimneys, foundations of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(foundation)),data(nzs_3109))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.2.0.3,"1.8.2 Concrete Chimneys, hearth slabs of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(has),atom(var(chimney)),data(slab)),expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(is),atom(rel(construction),var(slab)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(slab)),data(nzs_3109))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.3.0.1,"1.8.3 Precast pumice concrete Pumice concrete units for use in precast chimneys shall: a) Have pumice aggregate which: i) is free of combustible and organic matter, and ii) has a maximum aggregate size of no greater than 19 mm, with at least 40% but not more than 60% of the aggregate retained by a 4.75 mm standard test sieve, and b) Have a mix ratio by volume of no more than five parts of mixed pumice aggregate to one part of cement, c) Have a compressive strength of no less than 7 MPa at 28 days when cured and tested in accordance with NZS 3112: Part 2, d) After adequate curing, be air dried and kept under cover during storage, transport and on the site, e) Be laid dry. (Work left unfinished should be protected from rain.) f) Be joined with mortar which complies with NZS 4210, and g) Have ducts filled with grout complying with NZS 4210, except over the last 200 mm where bars are anchored in the gather (refer Paragraph 1.6.2 b)).","if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(precastConcrete)),expr(fun(has),atom(var(chimney)),data(part)),expr(fun(is),atom(rel(construction),var(part)),data(pumiceConcrete)),expr(fun(selectedBy),atom(rel(aggregate),var(pumice)),data(sieve)),expr(fun(equal),atom(rel(size),var(sieve)),data(4.75mm)))),then(and(obligation(not(expr(fun(include),atom(rel(aggregate),var(pumice)),or(data(combustible),data(organic))))),expr(fun(lessThanEqual),atom(rel(size),var(aggregate)),data(19mm)),expr(fun(greaterThanEqual),expr(fun(ratio),atom(rel(sieved),var(aggregate))),data(40%)),expr(fun(lessThanEqual),expr(fun(ratio),atom(rel(sieved),var(aggregate))),data(60%)),expr(fun(define),atom(rel(volume),var(aggregate)),data(v1)),expr(fun(define),atom(rel(volume),var(cement)),data(v2)),expr(fun(lessThanEqual),atom(var(v2)),data(v1/5)),expr(fun(is),atom(rel(mix),var(aggregate)),data(v1+v2)),expr(fun(greaterThanEqual),atom(rel(compressiveStrength),var(aggregate)),data(7MPa)),expr(fun(measuredAt),atom(rel(compressiveStrength),var(aggregate)),data(28days)),expr(fun(complyWith),atom(rel(compressiveStrength),var(aggregate)),data(nzs_3112_2)),expr(fun(is),atom(rel(part),var(chimney)),data(protected)),expr(fun(for),atom(var(protection)),and(data(storing),data(transport))),expr(fun(include),atom(rel(method),var(protection)),and(data(curing),data(airDrying))),expr(fun(from),atom(var(protection)),data(rain)),expr(fun(joinedWith),atom(rel(part),var(chimney)),data(mortar)),expr(fun(complyWith),atom(var(mortar)),data(nzs_4210)),expr(fun(has),atom(rel(part),var(chimney)),data(duct)),expr(fun(filledWith),atom(var(duct)),data(grout)),expr(fun(complyWith),atom(var(duct)),data(nzs_4210))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.4.0.1,1.8.4 Concrete masonry Concrete masonry construction for chimney foundation walls shall conform to the relevant sections of NZS 4229.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(concreteMasonry)))),then(obligation(expr(fun(complyWith),atom(rel(wall),var(foundation)),data(nzs_4229))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.5.0.1,1.8.5 Reinforcing steel Reinforcing used in chimneys is to conform to AS/NZS 4671,"if(expr(fun(has),atom(var(chimney)),data(reinforcingSteel))),then(obligation(expr(fun(complyWith),atom(rel(reinforcingSteel),var(chimney)),data(as/nzs_4671))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.5.0.1.a.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: a) For brick, be embedded centrally in the thickness of the grout","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(brick)))),then(and(obligation(expr(fun(embedInto),atom(rel(reinforcingSteel),var(chimney)),data(grout))),obligation(expr(fun(is),atom(rel(position),var(embedment)),data(central)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.5.0.1.b.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: For in-situ concrete, have cover to the steel in accordance with NZS 3109","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(inSituConcrete)))),then(and(obligation(expr(fun(has),atom(rel(reinforcingSteel),var(chimney)),data(cover))),obligation(expr(fun(complyWith),atom(rel(thickness),var(cover)),data(nzs_3109)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.5.0.1.c.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: For precast pumice concrete, be placed with grout in the preformed ducts in the units.","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(precastPumiceConcrete)))),then(and(obligation(expr(fun(in),atom(rel(reinforcingSteel),var(chimney)),data(duct))),obligation(expr(fun(is),atom(var(duct)),data(preformed))),obligation(expr(fun(in),atom(var(duct)),data(grout)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.8.6.0.1,1.8.6 Hot dip galvanising Hot dip galvanising shall comply with AS/NZS 4680.,"if(expr(fun(has),atom(rel(component),var(chimney)),data(hotDipGalvanising))),then(obligation(expr(fun(complyWith),atom(var(hotDipGalvanising)),data(as/nzs_4680))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.1.0.1,"1.9.1 The bracing described in Paragraphs 1.9.2 to 1.9.6 shall be provided in those buildings where one or more of the following apply: a) The area of the room containing the chimney exceeds 24 m2, b) The length of the wall on which the chimney is located exceeds 3.5 m between supporting braced walls which are perpendicular to it. This length may be increased to 6.5 m where the wall is supported, at each floor level and at the roof or ceiling level, by either a structural diaphragm which conforms with the relevant requiements of NZS 3604 or by dragon ties. The dragon ties shall: i) consist of a continuous length of 100 x 50 mm timber fixed in accordance with NZS 3604 clauses 8.3.3.3 and 8.3.3.4, ii) be run as a pair, with one dragon tie going from the wall on which the chimney is located, back to each of the supporting braced walls. The enclosed angle between the wall on which the chimney is located and each dragon tie shall be 60°, and iii) be located no more than 1.5 m out from each supporting braced wall. c) The floor area on any level of the building, for a given chimney type (see Table 2), is less than: i) 50 m2 for chimney Type 1, ii) 75 m2 for chimney Types 2, 3 and 4, iii) 150 m2 for chimney Types 5, 6 and 7.","if(and(expr(fun(has),atom(var(space)),data(chimney)),expr(fun(greaterThan),atom(rel(floorArea),var(space)),data(24m^2)),expr(fun(adjoin),atom(var(wall)),data(chimney)),expr(fun(greaterThan),atom(rel(span),var(wall)),data(3.5m)),expr(fun(inBetween),atom(rel(span),var(wall)),data(bracedWall)),or(expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),data(type1)),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(50m^2)))),expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),or(data(type2),data(type3),data(type4))),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(75m^2)))),expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),or(data(type5),data(type6),data(type7))),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(150m^2))))))),then(and(obligation(expr(fun(complyWith),atom(rel(bracing),var(building)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),and(data(1.9.2),data(1.9.3),data(1.9.4),data(1.9.5),data(1.9.6))))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.3.0.1,1.9.3 The number of bracing units to be provided for each chimney connection (see Paragraph 1.9.4) is given in Table 2.,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(expr(fun(in),expr(fun(forEach),atom(var(connection))),data(chimney),and(obligation(expr(fun(complyWith),expr(fun(count),atom(rel(unit),var(bracing))),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_2))))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.4.0.1.a.1,1.9.4 A chimney shall be considered as connected to the building when: a) At roof level: it is held either by a roof bracket or by a roof tie,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(roof)),expr(fun(securedBy),atom(var(chimney)),or(data(roofBracket),data(roofTie))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.4.0.1.b.1,"1.9.4 A chimney shall be considered as connected to the building when: At ground floor level: it is held by a floor bracket or the chimney base is integral with the building foundation wall,","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(ground)),or(expr(fun(securedBy),atom(var(chimney)),data(floorBracket)),expr(fun(integralWith),atom(rel(base),var(chimney)),data(foundationWall))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.4.0.1.c.1,1.9.4 A chimney shall be considered as connected to the building when: At an intermediate floor level: it is held either by a floor bracket or by closely spaced wall ties spanning the floor.,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(intermediateFloor)),or(expr(fun(securedBy),atom(var(chimney)),data(floorBracket)),and(expr(fun(securedBy),atom(rel(base),var(chimney)),data(wallTies)),expr(fun(across),atom(rel(span),var(wallTies)),data(floor)),expr(fun(greaterThanEqual),atom(rel(spacing),var(wallTies)),data(50mm)))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.5.0.1,"1.9.5 For earthquake ground movement in the direction perpendicular to the wall on which the chimney is located, structural diaphragms shall be provided at roof/ceiling level and at each floor level to which the chimney is connected. The diaphragms shall comply with all relevant clauses of NZS 3604 and NZS 4229.","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(obligation(expr(fun(at),atom(rel(location),var(diaphragm)),or(data(roof),data(ceiling)))),obligation(expr(fun(at),atom(rel(location),var(diaphragm)),data(floor))),obligation(expr(fun(has),atom(var(chimney)),data(connection))),obligation(expr(fun(complyWith),atom(var(diaphragm)),and(data(nzs_3604),data(nzs_4229)))))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r1.9.6.0.1,"1.9.6 For earthquake in the direction parallel to the wall on which the chimney is located, the bracing units required as determined from Paragraph 1.9.3 shall be provided solely by that wall.","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(and(obligation(expr(fun(complyWith),atom(rel(unit),var(bracing)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(1.9.3)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r2.1.1.0.1,2.1.1 Chimneys for solid fuel burning appliances shall comply with Paragraph 1.0 or with the relevant sections of AS/NZS 3869 and AS/NZS 2918 for sheetmetal chimneys.,"if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(is),atom(rel(fuelType),var(appliance)),data(solid)))),then(and(obligation(expr(fun(complyWith),atom(var(chimney)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(1.1.1_to_1.9.6)))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r2.2.1.0.1,"2.2.1 Solid fuel burning domestic appliances weighing no more than 130 kg shall be supported on a 65 mm thick hearth slab that is: a) Reinforced with 665 mesh, or D10 rods at 300 mm centres each way, placed centrally in the slab thickness, b) Supported on a timber or concrete floor, or integral with a concrete floor. (The floor supporting the hearth slab shall comply with NZS 3604 or NZS 4229 as appropriate), and c) Comprised of ordinary grade concrete complying with the relevant clauses of NZS 3109.","if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(lessThanEqual),atom(rel(weight),var(appliance)),data(130kg)))),then(and(obligation(expr(fun(supportedOn),atom(var(appliance)),data(slab))),expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(greaterThanEqual),atom(rel(thickness),var(slab)),data(65mm)),expr(fun(is),atom(rel(construction),var(slab)),data(concrete)),expr(fun(has),atom(var(concrete)),data(reinforcing)),or(and(expr(fun(is),atom(rel(type),var(reinforcing)),data(665mesh)),expr(fun(is),atom(rel(placement),var(reinforcing)),data(centrallyInSlabThickness))),and(expr(fun(is),atom(rel(type),var(reinforcing)),data(D10rod)),expr(fun(at),atom(rel(spacing),var(reinforcing)),data(300mmCentresEachWay)),expr(fun(is),atom(rel(placement),var(reinforcing)),data(centrallyInSlabThickness)))),or(and(expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),or(data(timber),data(concrete))),expr(fun(complyWith),atom(var(floor)),or(data(nzs_3604),data(nzs_4229)))),and(expr(fun(partof),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(concrete)))),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)),expr(fun(complyWith),atom(rel(grade),var(concrete)),data(nzs_3109))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r2.2.2.0.1,2.2.2 Hearth slabs on a timber floor shall be held in position by supporting members on all four sides of the hearth. These members shall each be held by four screws with a minimum shank diameter of 4.88 mm that penetrate the floor framing by 50 mm.,"if(and(expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(timber)))),then(and(expr(fun(of),expr(fun(forEach),atom(var(side))),data(slab),and(obligation(expr(fun(has),atom(var(side)),data(support))),expr(fun(by),atom(rel(fixing),var(support)),data(screw)),expr(fun(greaterThanEqual),expr(fun(count),atom(var(screw))),data(4)))),expr(fun(greaterThanEqual),atom(rel(shankDiameter),var(screw)),data(4.88mm)),expr(fun(equal),atom(rel(embedment),var(screw)),data(50mm))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r2.2.3.0.1,2.2.3 Hearth slabs on concrete floors shall be secured in position by four D10 starter rods. The rods shall be located in each corner of the hearth slab and they shall terminate each end with standard hooks complying with NZS 3109.,"if(and(expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(concrete)))),then(and(obligation(expr(fun(securedBy),atom(var(slab)),data(starterRod))),expr(fun(equal),atom(rel(size),var(starterRod)),data(D10)),expr(fun(greaterThanEqual),expr(fun(count),atom(var(starterRod))),data(4)),expr(fun(of),expr(fun(forEach),atom(var(corner))),data(slab),and(expr(fun(has),atom(var(corner)),data(support)),expr(fun(has),atom(rel(end),var(starterRod)),data(hook)),expr(fun(complyWith),atom(var(hook)),data(nzs_3109))))))"
lrml/NZ_NZBC-B1AS3#0.17.lrml,r2.2.4.0.1,"2.2.4 Paragraphs 2.2.1 to 2.2.3 provide an acceptable structural solution, but depending on the particular installation, different hearth dimensions may be necessary to meet the spread of fire requirements of NZBC Clause C2.2. Hearth slabs for solid fuel burning appliances shall comply with AS/NZS 2918.","if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(supportedOn),atom(var(appliance)),data(slab)),expr(fun(is),atom(rel(type),var(slab)),data(hearth)))),then(and(obligation(expr(fun(complyWith),atom(var(slab)),data(as/nzs_2918))),expr(fun(complyWith),atom(var(slab)),data(nzbc_c2.2))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.1.1.1,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the collection of industrial liquid waste.,"if(and(atom(rel(collectionSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(collectionSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.1.1.2,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the storage of industrial liquid waste.,"if(and(atom(rel(storageSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(storageSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.1.1.3,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the treatment of industrial liquid waste.,"if(and(atom(rel(treatmentSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(treatmentSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.1.1.4,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the disposal of industrial liquid waste.,"if(and(atom(rel(disposalSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(disposalSystem),var(industrialLiquidWaste),data(nzbc_g14),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.1.2,"1.1.2 Where waste is hazardous, the storage facilities shall also comply with NZBC F3 Hazardous Substances and Processes.","if(atom(rel(type),var(industrialLiquidWaste),data(hazardous),operator(equal))),then(and(obligation(atom(rel(storageFacility),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))),atom(rel(storageFacility),var(industrialLiquidWaste),data(nzbc_f3),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.1,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(safeArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.2,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(storageFacility))),then(obligation(atom(var(location),data(safeArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.3,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(safeArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.4,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(safeArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.5,1.4.1 Collection facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(bundedArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.6,1.4.1 Storage facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(storageFacility))),then(obligation(atom(var(location),data(bundedArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.7,1.4.1 Treatment facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(bundedArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.8,1.4.1 Disposal systems shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(bundedArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.9,"1.4.1 Collection facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(accessArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.10,"1.4.1 Storage facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(storageFacility))),then(obligation(atom(var(location),data(accessArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.11,"1.4.1 Treatment facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(accessArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.1.12,"1.4.1 Disposal systems shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(accessArea))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.4.2,"1.4.2 Storage tanks may be placed below ground provided: a) Precautions are taken to avoid: i) health or safety hazards, ii) corrosion that threatens the integrity of the tank or associated plant, and b) Tanks are designed to withstand the effects of associated loads.","if(and(atom(rel(strength),var(storageTank),data(structLoad),operator(greaterThan)),not(atom(rel(type),var(environment),data(hazardous),operator(equal))),not(atom(rel(type),var(environment),data(corrosive),operator(equal))))),then(permission(atom(rel(location),var(storageTank),data(groundLevel),operator(below))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.5.1,"1.5.1 All materials in contact with industrial liquid waste shall be resistant to corrosion, chemical attack, and any abrasion or physical abuse that can be reasonably expected.","if(atom(var(constructionMaterial),data(industrialLiquidWaste),operator(inContact))),then(and(obligation(atom(var(constructionMaterial),data(corrosion),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(chemicalAttack),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(abrasion),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(physicalAbuse),operator(resistantTo)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.5.2,1.5.2 Any corrosion allowance provided in the design of equipment handling liquid waste shall be adequate for the intended life of the facilities.,"if(atom(var(handlingEquipment),data(corrosion),operator(resistantTo))),then(obligation(atom(rel(durability),var(handlingEquipment),data(lifetime))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.6.1,"1.6.1 Industrial liquid waste systems, storage and treatment tanks and piping systems shall be tested on completion to avoid contamination of any soil, ground water or waterways through run-off from washing-down, rain, accidental overflows or other causes.","if(and(atom(var(installation),and(data(industrialLiquidWasteSystem),data(storageTank),data(treatmentTank),data(piping))),atom(rel(status),var(installation),data(completed),operator(equal)))),then(and(obligation(atom(var(installation),data(testing),operator(require))),obligation(atom(rel(protection),var(naturalWaterway),data(contamination),operator(from))),obligation(atom(rel(protection),var(groundWater),data(contamination),operator(from)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.6.2,"1.6.2 The area containing waste storage facilities shall be impervious and contained so as to avoid contamination of any soil, ground water or waterways through run-off from washing-down, rain, accidental overflows or other causes.","if(atom(rel(storageFacility),var(industrialLiquidWaste))),then(and(obligation(atom(var(facilityArea),data(impervious),operator(is))),atom(var(facilityArea),data(bunded),operator(is))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.6.3,"1.6.3 Industrial liquid waste facilities shall be installed to avoid contamination of any potable water supply, as required by NZBC G12 Water Supplies.","if(and(atom(var(waterSupply),data(potable),operator(is)),obligation(atom(rel(protection),var(waterSupply),data(contamination),operator(from))))),then(and(obligation(atom(rel(installation),var(collectionFacility),data(nzbc_g12),operator(complyWith))),obligation(atom(rel(installation),var(storageFacility),data(nzbc_g12),operator(complyWith))),obligation(atom(rel(installation),var(treatmentFacility),data(nzbc_g12),operator(complyWith)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.7.1.1,1.7.1 Separate systems shall be provided to convey and store industrial liquid wastes that require different treatment and/or disposal methods,"if(expr(fun(count),atom(rel(disposalMethod),var(industrialLiquidWaste),data(1),operator(greaterThan)))),then(obligation(expr(fun(atom(var(disposalSystem),data(unique),operator(is))),atom(var(disposalMethod)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.7.1.2,"1.7.1 Separate systems shall be provided to convey and store industrial liquid wastes that require different treatment methods, or where the wastes are incompatible.","if(expr(fun(count),atom(rel(disposalMethod),var(industrialLiquidWaste),data(1),operator(greaterThan)))),then(obligation(expr(fun(atom(var(disposalSystem),data(unique),operator(is))),atom(var(disposalMethod)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.8.1.1,1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: a) Comply with NZBC D1 Access Routes.,"if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(area),var(vehicleAccess),data(nzbc_d1),operator(complyWith))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.8.1.2,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: here possible, access layout shall provide sufficient space for vehicles to drive in and out of the facility without reversing or interference with other activities on the site","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(area),var(vehicleAccess),data(turningSpace),operator(adequte))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.8.1.3,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Drain any spilled waste to a kerbed area sloped so that the waste does not collect under the vehicle, or drain in an uncontrolled manner to other areas of the plant","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(and(obligation(atom(rel(drain),var(spillage),data(kerb),operator(towards))),prohibition(atom(rel(flow),var(spillage),or(data(vehicle),data(plantArea)),operator(towards)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.8.1.4,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Any spilled waste shall: i) be contained on-site for subsequent removal, ii) not enter the surface water system, and iii) not enter the sewage system unless the spilled waste is acceptable as a discharge to the sewer by the network utility operator.","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)),permission(not(atom(var(spillage),data(sewer),operator(dischargeInto)))))),then(prohibition(atom(rel(flow),var(spillage),data(sewer),operator(dischargeInto))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.8.1.5,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Any spilled waste shall: i) be contained on-site for subsequent removal, ii) not enter the surface water system, and iii) not enter the sewage system unless the spilled waste is acceptable as a discharge to the sewer by the network utility operator.","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(disposalMethod),var(spillage),data(on-site),operator(contained))),and(prohibition(atom(rel(flow),var(spillage),data(surfaceWaterSystem),operator(into)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.9.1.1,"1.9.1 Where unauthorised access to storage facilities may be hazardous, security shall be provided by: a) Locating the facilities in a lockable enclosed space within a building","if(and(permission(not(atom(var(access),data(storageFacility)))),atom(var(condition),data(hazardous)),atom(var(storageFacility),data(building),operator(within)))),then(obligation(atom(var(storageFacility),data(lockable))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r1.9.1.2,"1.9.1 Where unauthorised access to storage and treatment facilities may be hazardous, security shall be provided by: a) Locating the facilities in a lockable enclosed space within a building, or b) An external security fence with lockable gates if located in the open.","if(and(permission(not(atom(var(access),data(storageFacility)))),atom(var(condition),data(hazardous)),atom(var(storageFacility),data(building),operator(outside)))),then(obligation(atom(var(storageFacility),data(lockable))),and(obligation(atom(var(securityFence))),obligation(atom(var(securityGate),data(lockable)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.0.1,"2.0.1 Where the network utility operator accepts the discharge of industrial liquid waste to a sewer, the waste shall be conveyed in a plumbing and drainage disposal system complying with NZBC G13 Foul Water.","if(permission(atom(rel(disposalMethod),var(industrialLiquidWaste),data(sewer),operator(dischargeInto)))),then(and(obligation(atom(var(industrialLiquidWaste),data(disposalSystem),operator(conveyedIn))),obligation(atom(var(disposalSystem),data(nzbc_g13),operator(complyWith)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.1.1,"2.1.1 Screens, grit chambers, grease traps or similar appropriate equipment should be installed at the head of piping systems if suspended solids or material within the liquid waste might cause blockage of the piping system.","if(and(atom(rel(blockage),var(pipingSystem),data(possible),operator(is)),atom(rel(cause),var(blockage),data(suspendedSolid),operator(equal)))),then(and(obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(screens),operator(has))),obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(gritChamber),operator(has))),obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(greaseTrap),operator(has)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.1.2,"2.1.2 Wherever possible, piping systems shall convey industrial liquid waste using gravity flow.","if(atom(var(industrialLiquidWaste),data(pipingSystem),operator(conveyedIn))),then(obligation(atom(rel(disposalMethod),var(industrialLiquidWaste),data(gravityFlow),operator(equal))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.1.3,2.1.3 Gravity flow pipelines should have sufficient gradient to provide flow velocities that prevent the settlement of entrained solids and grit.,"if(atom(rel(disposalMethod),var(industrialLiquidWaste),data(gravityFlow),operator(equal))),then(and(obligation(atom(rel(slope),var(pipeline),data(sufficient),operator(is))),atom(rel(velocity),var(flow),data(velocityCausingSediment),operator(greaterThan))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.3.2,"2.3.2 Joints, fittings and valves – The number of joints, fittings and valves in the piping system shall be kept to a practical minimum.","if(atom(var(industrialLiquidWaste),data(pipingSystem),operator(conveyedIn))),then(and(obligation(expr(fun(count),atom(rel(joint),var(pipingSystem),data(minimum),operator(is)))),expr(fun(count),atom(rel(fitting),var(pipingSystem),data(minimum),operator(is))),expr(fun(count),atom(rel(valve),var(pipingSystem),data(minimum),operator(is)))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r2.3.3,2.3.3 Bends shall have a centreline radius of no less than 1.5 times the nominal pipe diameter.,"if(atom(rel(bend),var(pipingSystem))),then(obligation(atom(rel(centrelineRadius),var(bend),data(1.5*(nominalPipeDiameter)),operator(greaterThanEqual))))"
lrml/NZ_NZBC-G14VM1#2.6.lrml,r3.2.1,3.2.1 Free-standing tanks shall be secured against earthquake forces. The methods given in NZS 4219 are acceptable.,"if(atom(rel(type),var(tank),data(freeStanding))),then(and(obligation(atom(rel(protection),var(tank),data(seismic),operator(equal))),permission(atom(rel(seismicRestraint),var(tank),data(nzs_4219),operator(comply)))))"
