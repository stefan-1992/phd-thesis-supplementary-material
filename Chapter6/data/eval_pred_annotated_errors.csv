file,number,text,lrml,prediction,error_type
B1AS3,1.8.2.0.1,"1.8.2 Concrete Chimneys of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(chimney)),data(nzs_3109))))","if(is(chimney.construction, and(concrete, reinforcedConcrete))), then(obligation(complyWith(chimney.construction, nzs_3109_clause_2.1)))","IGNORE
HALO
"
B1AS3,1.8.2.0.2,"1.8.2 Concrete Chimneys, foundations of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(foundation)),data(nzs_3109))))","if(and(is(chimney.construction, concrete), has(chimney, foundation), is(foundation.construction, reinforcedConcrete))), then(obligation(complyWith(chimney.construction, nzs_3109_clause)))",HALO
B1AS3,1.8.2.0.3,"1.8.2 Concrete Chimneys, hearth slabs of reinforced concrete, shall comply with the relevant clauses of NZS 3109 for ordinary grade concrete.","if(and(expr(fun(has),atom(var(chimney)),data(slab)),expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(is),atom(rel(construction),var(slab)),data(reinforcedConcrete)),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)))),then(obligation(expr(fun(complyWith),atom(var(slab)),data(nzs_3109))))","if(and(is(chimney.construction, concrete), has(chimney, hearth), is(hearth.construction, reinforcedConcrete))), then(obligation(complyWith(chimney.construction, nzs_3109_clause)))",HALO
B1AS3,1.8.3.0.1,"1.8.3 Precast pumice concrete Pumice concrete units for use in precast chimneys shall: a) Have pumice aggregate which: i) is free of combustible and organic matter, and ii) has a maximum aggregate size of no greater than 19 mm, with at least 40% but not more than 60% of the aggregate retained by a 4.75 mm standard test sieve, and b) Have a mix ratio by volume of no more than five parts of mixed pumice aggregate to one part of cement, c) Have a compressive strength of no less than 7 MPa at 28 days when cured and tested in accordance with NZS 3112: Part 2, d) After adequate curing, be air dried and kept under cover during storage, transport and on the site, e) Be laid dry. (Work left unfinished should be protected from rain.) f) Be joined with mortar which complies with NZS 4210, and g) Have ducts filled with grout complying with NZS 4210, except over the last 200 mm where bars are anchored in the gather (refer Paragraph 1.6.2 b)).","if(and(expr(fun(is),atom(rel(construction),var(chimney)),data(precastConcrete)),expr(fun(has),atom(var(chimney)),data(part)),expr(fun(is),atom(rel(construction),var(part)),data(pumiceConcrete)),expr(fun(selectedBy),atom(rel(aggregate),var(pumice)),data(sieve)),expr(fun(equal),atom(rel(size),var(sieve)),data(4.75mm)))),then(and(obligation(not(expr(fun(include),atom(rel(aggregate),var(pumice)),or(data(combustible),data(organic))))),expr(fun(lessThanEqual),atom(rel(size),var(aggregate)),data(19mm)),expr(fun(greaterThanEqual),expr(fun(ratio),atom(rel(sieved),var(aggregate))),data(40%)),expr(fun(lessThanEqual),expr(fun(ratio),atom(rel(sieved),var(aggregate))),data(60%)),expr(fun(define),atom(rel(volume),var(aggregate)),data(v1)),expr(fun(define),atom(rel(volume),var(cement)),data(v2)),expr(fun(lessThanEqual),atom(var(v2)),data(v1/5)),expr(fun(is),atom(rel(mix),var(aggregate)),data(v1+v2)),expr(fun(greaterThanEqual),atom(rel(compressiveStrength),var(aggregate)),data(7MPa)),expr(fun(measuredAt),atom(rel(compressiveStrength),var(aggregate)),data(28days)),expr(fun(complyWith),atom(rel(compressiveStrength),var(aggregate)),data(nzs_3112_2)),expr(fun(is),atom(rel(part),var(chimney)),data(protected)),expr(fun(for),atom(var(protection)),and(data(storing),data(transport))),expr(fun(include),atom(rel(method),var(protection)),and(data(curing),data(airDrying))),expr(fun(from),atom(var(protection)),data(rain)),expr(fun(joinedWith),atom(rel(part),var(chimney)),data(mortar)),expr(fun(complyWith),atom(var(mortar)),data(nzs_4210)),expr(fun(has),atom(rel(part),var(chimney)),data(duct)),expr(fun(filledWith),atom(var(duct)),data(grout)),expr(fun(complyWith),atom(var(duct)),data(nzs_4210))))","if(is(chimney.construction, precastPumiceConcrete), obligation(equal(rel))), then(and(obligation(has(precastPumiceConcrete, aggregate)), obligation(is(aggregate.aggregate, and(combustible, organic)))), obligation(lessThanEqual(aggregate.aggregate, 19mm)), obligation(greaterThanEqual(aggregate.aggregate, 40%)), obligation(greaterThanEqual(aggregate.mix, 60%)), obligation(has(aggregate, airDried)), obligation(is(airDried, those)), obligation(complyWith(duct, nzs_4202)), obligation(has(unit, duct)), obligation(is(duct, nzs_4202)))","IGNORE
LENGTH"
B1AS3,1.8.4.0.1,1.8.4 Concrete masonry Concrete masonry construction for chimney foundation walls shall conform to the relevant sections of NZS 4229.,"if(and(expr(fun(has),atom(var(chimney)),data(foundation)),expr(fun(is),atom(rel(construction),var(foundation)),data(concreteMasonry)))),then(obligation(expr(fun(complyWith),atom(rel(wall),var(foundation)),data(nzs_4229))))","if(and(is(foundation.application, wall), is(foundation.system, concrete))), then(obligation(complyWith(foundation.construction, nzs_4229)))",LOGIC
B1AS3,1.8.5.0.1,1.8.5 Reinforcing steel Reinforcing used in chimneys is to conform to AS/NZS 4671,"if(expr(fun(has),atom(var(chimney)),data(reinforcingSteel))),then(obligation(expr(fun(complyWith),atom(rel(reinforcingSteel),var(chimney)),data(as/nzs_4671))))","if(and(has(chimney, reinforcing), is(reinforcing.application, wall), is(reinforcing.material, steel))), then(obligation(complyWith(reinforcing.reinforcing, as/nzs_4671)))",HALO
B1AS3,1.8.5.0.1.a.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: a) For brick, be embedded centrally in the thickness of the grout","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(brick)))),then(and(obligation(expr(fun(embedInto),atom(rel(reinforcingSteel),var(chimney)),data(grout))),obligation(expr(fun(is),atom(rel(position),var(embedment)),data(central)))))","if(and(has(chimney, reinforcing), is(reinforcing.material, steel))), then(and(obligation(is(reinforcing.type, brick)), obligation(is(reinforcing.centrally, thicknessOfGrout))))",LOGIC
B1AS3,1.8.5.0.1.b.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: For in-situ concrete, have cover to the steel in accordance with NZS 3109","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(inSituConcrete)))),then(and(obligation(expr(fun(has),atom(rel(reinforcingSteel),var(chimney)),data(cover))),obligation(expr(fun(complyWith),atom(rel(thickness),var(cover)),data(nzs_3109)))))","if(and(has(chimney, reinforcing), is(reinforcing.construction, in-situConcrete), has(reinforcing, cover), is(cover.material, concrete))), then(obligation(complyWith(cover.cover, and(nzs_3109, nzs_3109))))","REPEAT
LOGIC"
B1AS3,1.8.5.0.1.c.1,"1.8.5 Reinforcing steel Reinforcing used in chimneys shall: For precast pumice concrete, be placed with grout in the preformed ducts in the units.","if(and(expr(fun(has),atom(var(chimney)),data(reinforcingSteel)),expr(fun(is),atom(rel(construction),var(chimney)),data(precastPumiceConcrete)))),then(and(obligation(expr(fun(in),atom(rel(reinforcingSteel),var(chimney)),data(duct))),obligation(expr(fun(is),atom(var(duct)),data(preformed))),obligation(expr(fun(in),atom(var(duct)),data(grout)))))","if(and(has(chimney, reinforcing), is(reinforcing.construction, precastPumiceConcrete), has(reinforcing, grease), is(preformed.duct, unit))), then(obligation(is(reinforcing.type, grease)))","HALO
LOGIC"
B1AS3,1.8.6.0.1,1.8.6 Hot dip galvanising Hot dip galvanising shall comply with AS/NZS 4680.,"if(expr(fun(has),atom(rel(component),var(chimney)),data(hotDipGalvanising))),then(obligation(expr(fun(complyWith),atom(var(hotDipGalvanising)),data(as/nzs_4680))))","if(is(cladding.application, roof)), then(obligation(complyWith(roof, as/nzs_4608)))",HALO
B1AS3,1.9.1.0.1,"1.9.1 The bracing described in Paragraphs 1.9.2 to 1.9.6 shall be provided in those buildings where one or more of the following apply: a) The area of the room containing the chimney exceeds 24 m2, b) The length of the wall on which the chimney is located exceeds 3.5 m between supporting braced walls which are perpendicular to it. This length may be increased to 6.5 m where the wall is supported, at each floor level and at the roof or ceiling level, by either a structural diaphragm which conforms with the relevant requiements of NZS 3604 or by dragon ties. The dragon ties shall: i) consist of a continuous length of 100 x 50 mm timber fixed in accordance with NZS 3604 clauses 8.3.3.3 and 8.3.3.4, ii) be run as a pair, with one dragon tie going from the wall on which the chimney is located, back to each of the supporting braced walls. The enclosed angle between the wall on which the chimney is located and each dragon tie shall be 60Â°, and iii) be located no more than 1.5 m out from each supporting braced wall. c) The floor area on any level of the building, for a given chimney type (see Table 2), is less than: i) 50 m2 for chimney Type 1, ii) 75 m2 for chimney Types 2, 3 and 4, iii) 150 m2 for chimney Types 5, 6 and 7.","if(and(expr(fun(has),atom(var(space)),data(chimney)),expr(fun(greaterThan),atom(rel(floorArea),var(space)),data(24m^2)),expr(fun(adjoin),atom(var(wall)),data(chimney)),expr(fun(greaterThan),atom(rel(span),var(wall)),data(3.5m)),expr(fun(inBetween),atom(rel(span),var(wall)),data(bracedWall)),or(expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),data(type1)),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(50m^2)))),expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),or(data(type2),data(type3),data(type4))),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(75m^2)))),expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(expr(fun(is),atom(rel(type),var(chimney)),or(data(type5),data(type6),data(type7))),expr(fun(lessThan),atom(rel(floorArea),var(space)),data(150m^2))))))),then(and(obligation(expr(fun(complyWith),atom(rel(bracing),var(building)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),and(data(1.9.2),data(1.9.3),data(1.9.4),data(1.9.5),data(1.9.6))))))","if(and(define(room.area, b), containing(room.area, b), greaterThan(room.area, data(baseUnit(kind(metre)), value(24))), define(room.area, b), inBetween(b, data(b), equal(b.dimension, d), equal(b.dimension, h1), equal(b.dimension, h2), equal(b.dimension, h3), equal(h1.dimension, h2), equal(h2.dimension, h3), equal(h1.dimension, h4), equal(h2.dimension, h5), equal(h1.dimension, h6), equal(h1.dimension, h6), equal(h1.dimension, h7), equal(h1.dimension, h2), equal(h2.dimension, h3), fun)))","HALO
REPEAT
LENGTH"
B1AS3,1.9.3.0.1,1.9.3 The number of bracing units to be provided for each chimney connection (see Paragraph 1.9.4) is given in Table 2.,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(expr(fun(in),expr(fun(forEach),atom(var(connection))),data(chimney),and(obligation(expr(fun(complyWith),expr(fun(count),atom(rel(unit),var(bracing))),data(table))),obligation(expr(fun(equal),atom(rel(key),var(table)),data(t_2))))))","if(has(chimney, connection)), then(and(obligation(complyWith(count(bracingUnit), table)), equal(table.key, t_2)))",LOGIC
B1AS3,1.9.4.0.1.a.1,1.9.4 A chimney shall be considered as connected to the building when: a) At roof level: it is held either by a roof bracket or by a roof tie,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(roof)),expr(fun(securedBy),atom(var(chimney)),or(data(roofBracket),data(roofTie))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))","if(and(equal(chimney, TRUE), is(chimney.location, roofLevel), is(chimney.type, or(roofBracket, roofTie)))), then(obligation(considered(chimney, connected)))",LOGIC
B1AS3,1.9.4.0.1.b.1,"1.9.4 A chimney shall be considered as connected to the building when: At ground floor level: it is held by a floor bracket or the chimney base is integral with the building foundation wall,","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(ground)),or(expr(fun(securedBy),atom(var(chimney)),data(floorBracket)),expr(fun(integralWith),atom(rel(base),var(chimney)),data(foundationWall))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))","if(and(equal(chimney, TRUE), is(chimney.elevation, groundFloorLevel), or(is(chimney, or(hold, floorBracket)), integralWith(chimney, foundationWall)))), then(and(obligation(considered(chimney, connected)), at(chimney, groundFloorLevel), is(chimney, integral)))",LOGIC
B1AS3,1.9.4.0.1.c.1,1.9.4 A chimney shall be considered as connected to the building when: At an intermediate floor level: it is held either by a floor bracket or by closely spaced wall ties spanning the floor.,"if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)),expr(fun(at),atom(rel(position),var(chimney)),data(intermediateFloor)),or(expr(fun(securedBy),atom(var(chimney)),data(floorBracket)),and(expr(fun(securedBy),atom(rel(base),var(chimney)),data(wallTies)),expr(fun(across),atom(rel(span),var(wallTies)),data(floor)),expr(fun(greaterThanEqual),atom(rel(spacing),var(wallTies)),data(50mm)))))),then(expr(fun(connectedTo),atom(var(chimney)),data(building)))","if(equal(chimney.location, buildingStorey)), then(or(obligation(considered(chimney, connected)), at(chimney, intermediateFloorLevel), equal(chimney.type, floorBracket), equal(wallTies.size, closelySpaced), spanning(wallTies, floor)))",LOGIC
B1AS3,1.9.5.0.1,"1.9.5 For earthquake ground movement in the direction perpendicular to the wall on which the chimney is located, structural diaphragms shall be provided at roof/ceiling level and at each floor level to which the chimney is connected. The diaphragms shall comply with all relevant clauses of NZS 3604 and NZS 4229.","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(expr(fun(in),expr(fun(forEach),atom(var(buildingStorey))),data(building),and(obligation(expr(fun(at),atom(rel(location),var(diaphragm)),or(data(roof),data(ceiling)))),obligation(expr(fun(at),atom(rel(location),var(diaphragm)),data(floor))),obligation(expr(fun(has),atom(var(chimney)),data(connection))),obligation(expr(fun(complyWith),atom(var(diaphragm)),and(data(nzs_3604),data(nzs_4229)))))))","if(and(is(chimney.earth, building), is(building.earth, ground), is(ground.direction, perpendicular), on(ground.location, wall), has(ground, chimney))), then(and(obligation(is(diaphragm.type, structural)), obligation(at(diaphragm.location, and(roof, eachFloorLevel)))), obligation(complyWith(diaphragm.clause, nzs_3604)), obligation(complyWith(diaphragm.clause, nzs_4229)))",
B1AS3,1.9.6.0.1,"1.9.6 For earthquake in the direction parallel to the wall on which the chimney is located, the bracing units required as determined from Paragraph 1.9.3 shall be provided solely by that wall.","if(and(expr(fun(is),atom(rel(condition),var(rule)),data(TRUE)),expr(fun(equal),atom(rel(key),var(rule)),data(1.9.1)))),then(and(obligation(expr(fun(complyWith),atom(rel(unit),var(bracing)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(1.9.3)))))","if(parallelTo(earthQuake, wall)), then(and(obligation(providedBy(bracingUnit, thatWall)), define(bracingUnitRequired, rule), equal(rule.key, 1.9.3)))",
B1AS3,2.1.1.0.1,2.1.1 Chimneys for solid fuel burning appliances shall comply with Paragraph 1.0 or with the relevant sections of AS/NZS 3869 and AS/NZS 2918 for sheetmetal chimneys.,"if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(is),atom(rel(fuelType),var(appliance)),data(solid)))),then(and(obligation(expr(fun(complyWith),atom(var(chimney)),data(rule))),obligation(expr(fun(equal),atom(rel(key),var(rule)),data(1.1.1_to_1.9.6)))))","if(and(is(burningAppliance.type, solidFuel), has(burningAppliance, chimney))), then(and(obligation(complyWith(chimney, rule)), and(equal(rule.key, 1.0), with(chimney.relevantSection, as/nzs_3869), equal(chimney.relevantSection, as/nzs_2918))))",
B1AS3,2.2.1.0.1,"2.2.1 Solid fuel burning domestic appliances weighing no more than 130 kg shall be supported on a 65 mm thick hearth slab that is: a) Reinforced with 665 mesh, or D10 rods at 300 mm centres each way, placed centrally in the slab thickness, b) Supported on a timber or concrete floor, or integral with a concrete floor. (The floor supporting the hearth slab shall comply with NZS 3604 or NZS 4229 as appropriate), and c) Comprised of ordinary grade concrete complying with the relevant clauses of NZS 3109.","if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(lessThanEqual),atom(rel(weight),var(appliance)),data(130kg)))),then(and(obligation(expr(fun(supportedOn),atom(var(appliance)),data(slab))),expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(greaterThanEqual),atom(rel(thickness),var(slab)),data(65mm)),expr(fun(is),atom(rel(construction),var(slab)),data(concrete)),expr(fun(has),atom(var(concrete)),data(reinforcing)),or(and(expr(fun(is),atom(rel(type),var(reinforcing)),data(665mesh)),expr(fun(is),atom(rel(placement),var(reinforcing)),data(centrallyInSlabThickness))),and(expr(fun(is),atom(rel(type),var(reinforcing)),data(D10rod)),expr(fun(at),atom(rel(spacing),var(reinforcing)),data(300mmCentresEachWay)),expr(fun(is),atom(rel(placement),var(reinforcing)),data(centrallyInSlabThickness)))),or(and(expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),or(data(timber),data(concrete))),expr(fun(complyWith),atom(var(floor)),or(data(nzs_3604),data(nzs_4229)))),and(expr(fun(partof),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(concrete)))),expr(fun(is),atom(rel(grade),var(concrete)),data(ordinary)),expr(fun(complyWith),atom(rel(grade),var(concrete)),data(nzs_3109))))","if(and(equal(domesticAppliance.type, solidFuelBurningDomesticAppliance), lessThanEqual(weight, 130kg))), then(and(obligation(supportedOn(domesticAppliance, 65mmThickHearth)), obligation(has(domesticAppliance, reinforced)), obligation(is(reinforced, or(data(665Mesh), data(D10RodsAt300MmCentres)))), obligation(placedCentrallyIn(reinforced, slabThickness)), or(obligation(supportedOn(reinforced, or(data(timber), data(concreteFloor)))), obligation(integralWith(reinforced, concreteFloor))), obligation(complyWith(reinforced, and(nzs_3604, nzs_4229)))))","ABSTRACT
IGNORE"
B1AS3,2.2.2.0.1,2.2.2 Hearth slabs on a timber floor shall be held in position by supporting members on all four sides of the hearth. These members shall each be held by four screws with a minimum shank diameter of 4.88 mm that penetrate the floor framing by 50 mm.,"if(and(expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(timber)))),then(and(expr(fun(of),expr(fun(forEach),atom(var(side))),data(slab),and(obligation(expr(fun(has),atom(var(side)),data(support))),expr(fun(by),atom(rel(fixing),var(support)),data(screw)),expr(fun(greaterThanEqual),expr(fun(count),atom(var(screw))),data(4)))),expr(fun(greaterThanEqual),atom(rel(shankDiameter),var(screw)),data(4.88mm)),expr(fun(equal),atom(rel(embedment),var(screw)),data(50mm))))","if(and(has(chimney, hearth), is(hearth.construction, timber), has(hearth, slab))), then(and(obligation(heldIn(slab, member)), each(member.holding, fourSide), greaterThanEqual(screw.diameter, 4.88mm), penetrate(screw, floorFramingBy50mm)))",ABSTRACT
B1AS3,2.2.3.0.1,2.2.3 Hearth slabs on concrete floors shall be secured in position by four D10 starter rods. The rods shall be located in each corner of the hearth slab and they shall terminate each end with standard hooks complying with NZS 3109.,"if(and(expr(fun(is),atom(rel(type),var(slab)),data(hearth)),expr(fun(supportedOn),atom(var(slab)),data(floor)),expr(fun(is),atom(rel(construction),var(floor)),data(concrete)))),then(and(obligation(expr(fun(securedBy),atom(var(slab)),data(starterRod))),expr(fun(equal),atom(rel(size),var(starterRod)),data(D10)),expr(fun(greaterThanEqual),expr(fun(count),atom(var(starterRod))),data(4)),expr(fun(of),expr(fun(forEach),atom(var(corner))),data(slab),and(expr(fun(has),atom(var(corner)),data(support)),expr(fun(has),atom(rel(end),var(starterRod)),data(hook)),expr(fun(complyWith),atom(var(hook)),data(nzs_3109))))))","if(has(chimney, hearth)), then(and(obligation(securedBy(slab, starterRod)), is(starterRod.location, d10), is(slab.corner, eachCorner)), obligation(has(slab, standardHook)), obligation(complyWith(standardHook.standardHook, nzs_3109)))",IGNORE
B1AS3,2.2.4.0.1,"2.2.4 Paragraphs 2.2.1 to 2.2.3 provide an acceptable structural solution, but depending on the particular installation, different hearth dimensions may be necessary to meet the spread of fire requirements of NZBC Clause C2.2. Hearth slabs for solid fuel burning appliances shall comply with AS/NZS 2918.","if(and(expr(fun(is),atom(var(appliance)),data(burner)),expr(fun(is),atom(rel(type),var(appliance)),data(domestic)),expr(fun(has),atom(var(appliance)),data(chimney)),expr(fun(supportedOn),atom(var(appliance)),data(slab)),expr(fun(is),atom(rel(type),var(slab)),data(hearth)))),then(and(obligation(expr(fun(complyWith),atom(var(slab)),data(as/nzs_2918))),expr(fun(complyWith),atom(var(slab)),data(nzbc_c2.2))))","if(and(provide(structure, solution), complyWith(structure, as/nzs_2918))), then(and(permission(complyWith(differentHearthDimension, nzbc_c2.2)), obligation(complyWith(differentHearthDimension, as/nzs_2918))))",
G14VM1,1.1.1.1,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the collection of industrial liquid waste.,"if(and(atom(rel(collectionSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(collectionSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))","if(equal(industrialLiquidWaste.collection, TRUE)), then(obligation(complyWith(specificDesign, nzbc_g12_as2)))",
G14VM1,1.1.1.2,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the storage of industrial liquid waste.,"if(and(atom(rel(storageSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(storageSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))","if(equal(industrialLiquidWaste.storage, TRUE)), then(obligation(complyWith(specificDesign, nzbc_g12_as2)))",
G14VM1,1.1.1.3,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the treatment of industrial liquid waste.,"if(and(atom(rel(treatmentSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(treatmentSystem),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))))","if(equal(industrialLiquidWaste.treatmentClass, TRUE)), then(obligation(complyWith(specificDesign, nzbc_g12_as2)))",
G14VM1,1.1.1.4,1.1.1 This document describes the requirements to be satisfied by specific design for systems used for the disposal of industrial liquid waste.,"if(and(atom(rel(disposalSystem),var(industrialLiquidWaste)),atom(rel(complianceMode),var(collectionSystem),data(specificDesign),operator(equal)))),then(obligation(atom(rel(disposalSystem),var(industrialLiquidWaste),data(nzbc_g14),operator(complyWith))))","if(equal(disposal.medium, industrialLiquidWaste)), then(obligation(complyWith(specificDesign, nzbc_g13_as2)))",
G14VM1,1.1.2,"1.1.2 Where waste is hazardous, the storage facilities shall also comply with NZBC F3 Hazardous Substances and Processes.","if(atom(rel(type),var(industrialLiquidWaste),data(hazardous),operator(equal))),then(and(obligation(atom(rel(storageFacility),var(industrialLiquidWaste),data(nzbc_g14/vm1),operator(complyWith))),atom(rel(storageFacility),var(industrialLiquidWaste),data(nzbc_f3),operator(complyWith))))","if(equal(waste, hazardous)), then(obligation(complyWith(storageFacility, nzbc_f3)))",
G14VM1,1.4.1.1,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(safeArea))))","if(equal(collector.location, TRUE), equal(disposalSystem.location, TRUE)), then(and(obligation(include(location, data(collection, StorageArea))), obligation(include(location, disposalSystem)), obligation(complyWith(location, and(nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2)))))",
G14VM1,1.4.1.2,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(storageFacility))),then(obligation(atom(var(location),data(safeArea))))","if(equal(collector.location, TRUE), equal(disposalSystem.location, TRUE)), then(and(obligation(include(location, data(collection, StorageArea))), obligation(include(location, disposalSystem)), obligation(complyWith(location, and(nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2)))))",
G14VM1,1.4.1.3,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(safeArea))))","if(equal(collector.location, TRUE), equal(disposalSystem.location, TRUE)), then(and(obligation(include(location, data(collection, StorageArea))), obligation(include(location, disposalSystem)), obligation(complyWith(location, and(nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2)))))",
G14VM1,1.4.1.4,"1.4.1 Collection, storage and treatment facilities and disposal systems shall be located: a) In areas that will not create health or safety hazards","if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(safeArea))))","if(equal(collector.location, TRUE), equal(disposalSystem.location, TRUE)), then(and(obligation(include(location, data(collection, StorageArea))), obligation(include(location, disposalSystem)), obligation(complyWith(location, and(nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2, nzbc_g12_as2)))))",
G14VM1,1.4.1.5,1.4.1 Collection facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(bundedArea))))","if(equal(collectionFacility.location, TRUE)), then(obligation(equal(collectionFacility.location, safelyContained)))",
G14VM1,1.4.1.6,1.4.1 Storage facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(storageFacility))),then(obligation(atom(var(location),data(bundedArea))))","if(equal(storageFacility.location, TRUE)), then(obligation(equal(storageFacility.containment, safelyContained)))",
G14VM1,1.4.1.7,1.4.1 Treatment facilities shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(bundedArea))))","if(and(has(pipedWaterSupplySystem, storageTank), has(storageTank, pond))), then(obligation(is(treatmentFacility.activity, safelyContained)))",
G14VM1,1.4.1.8,1.4.1 Disposal systems shall be located: To ensure that spillage from storage tanks or ponds can be safely contained,"if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(bundedArea))))","if(and(equal(disposalSystem.location, TRUE), has(storageTank, or(data(storageTank), data(pond))))), then(obligation(is(disposalSystem, safelyContained)))",
G14VM1,1.4.1.9,"1.4.1 Collection facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(collectionFacility))),then(obligation(atom(var(location),data(accessArea))))","if(equal(collectionFacility.location, area)), then(obligation(include(area, sufficientAccess)))",
G14VM1,1.4.1.10,"1.4.1 Storage facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(storageFacility))),then(obligation(atom(var(location),data(accessArea))))","if(equal(storageFacility.location, area)), then(obligation(include(area, sufficientAccess)))",
G14VM1,1.4.1.11,"1.4.1 Treatment facilities shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(treatmentFacility))),then(obligation(atom(var(location),data(accessArea))))","if(equal(treatmentFacility.location, area)), then(obligation(include(area, sufficientAccess)))",
G14VM1,1.4.1.12,"1.4.1 Disposal systems shall be located: In areas with sufficient access for cleaning, clearing of blockages, and maintenance.","if(atom(var(disposalSystem))),then(obligation(atom(var(location),data(accessArea))))","if(equal(disposalSystem.location, area)), then(obligation(include(disposalSystem, sufficientAccess)))",
G14VM1,1.4.2,"1.4.2 Storage tanks may be placed below ground provided: a) Precautions are taken to avoid: i) health or safety hazards, ii) corrosion that threatens the integrity of the tank or associated plant, and b) Tanks are designed to withstand the effects of associated loads.","if(and(atom(rel(strength),var(storageTank),data(structLoad),operator(greaterThan)),not(atom(rel(type),var(environment),data(hazardous),operator(equal))),not(atom(rel(type),var(environment),data(corrosive),operator(equal))))),then(permission(atom(rel(location),var(storageTank),data(groundLevel),operator(below))))","if(equal(tank.purpose, storage)), then(and(obligation(has(tank, ground)), to(tank.precaution, and(healthOrSafetyHazard, corrosion)), terrify(corrosion, or(data(tank), data(associatedPlant))), is(tank.designed, withstandingTheEffect), is(associatedLoad.effect, associatedLoad)))",LOGIC
G14VM1,1.5.1,"1.5.1 All materials in contact with industrial liquid waste shall be resistant to corrosion, chemical attack, and any abrasion or physical abuse that can be reasonably expected.","if(atom(var(constructionMaterial),data(industrialLiquidWaste),operator(inContact))),then(and(obligation(atom(var(constructionMaterial),data(corrosion),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(chemicalAttack),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(abrasion),operator(resistantTo))),obligation(atom(var(constructionMaterial),data(physicalAbuse),operator(resistantTo)))))","if(and(inContactWith(industrialLiquidWaste, allMaterial), is(industrialLiquidWaste.material, and(corrosion, chemicalAttack, anyAbrasion, physicalAbuse)))), then(obligation(complyWith(industrialMaterial, nzbc_g13_as1)))",LOGIC
G14VM1,1.5.2,1.5.2 Any corrosion allowance provided in the design of equipment handling liquid waste shall be adequate for the intended life of the facilities.,"if(atom(var(handlingEquipment),data(corrosion),operator(resistantTo))),then(obligation(atom(rel(durability),var(handlingEquipment),data(lifetime))))","if(and(has(pipedWaterSupplySystem, equipmentHandlingLiquidWaste), has(equipmentHandlingLiquidWaste, corrosionArea), providedIn(corrosionArea, design))), then(obligation(adequate(corrosionArea, intendedLife)))",HALO
G14VM1,1.6.1,"1.6.1 Industrial liquid waste systems, storage and treatment tanks and piping systems shall be tested on completion to avoid contamination of any soil, ground water or waterways through run-off from washing-down, rain, accidental overflows or other causes.","if(and(atom(var(installation),and(data(industrialLiquidWasteSystem),data(storageTank),data(treatmentTank),data(piping))),atom(rel(status),var(installation),data(completed),operator(equal)))),then(and(obligation(atom(var(installation),data(testing),operator(require))),obligation(atom(rel(protection),var(naturalWaterway),data(contamination),operator(from))),obligation(atom(rel(protection),var(groundWater),data(contamination),operator(from)))))","if(or(equal(liquidWaste.type, or(industrial, storage, treatmentTank)), equal(piping.type, industrial))), then(obligation(equal(piping.complyWith, and(complete, complete))))","REPEAT
IGNORE"
G14VM1,1.6.2,"1.6.2 The area containing waste storage facilities shall be impervious and contained so as to avoid contamination of any soil, ground water or waterways through run-off from washing-down, rain, accidental overflows or other causes.","if(atom(rel(storageFacility),var(industrialLiquidWaste))),then(and(obligation(atom(var(facilityArea),data(impervious),operator(is))),atom(var(facilityArea),data(bunded),operator(is))))","if(equal(areaContainingWasteStorageFacility, TRUE)), then(and(obligation(is(areaContainingWasteStorageFacility, impervious)), obligation(equal(areaContainingWasteStorageFacility.contained, watercourse))))",
G14VM1,1.6.3,"1.6.3 Industrial liquid waste facilities shall be installed to avoid contamination of any potable water supply, as required by NZBC G12 Water Supplies.","if(and(atom(var(waterSupply),data(potable),operator(is)),obligation(atom(rel(protection),var(waterSupply),data(contamination),operator(from))))),then(and(obligation(atom(rel(installation),var(collectionFacility),data(nzbc_g12),operator(complyWith))),obligation(atom(rel(installation),var(storageFacility),data(nzbc_g12),operator(complyWith))),obligation(atom(rel(installation),var(treatmentFacility),data(nzbc_g12),operator(complyWith)))))","if(equal(industrialLiquidWasteFacility.installed, TRUE)), then(obligation(equal(industrialLiquidWasteFacility.contamination, nzbc_g12WaterSupply)))",
G14VM1,1.7.1.1,1.7.1 Separate systems shall be provided to convey and store industrial liquid wastes that require different treatment and/or disposal methods,"if(expr(fun(count),atom(rel(disposalMethod),var(industrialLiquidWaste),data(1),operator(greaterThan)))),then(obligation(expr(fun(atom(var(disposalSystem),data(unique),operator(is))),atom(var(disposalMethod)))))","if(and(has(industrialLiquidWaste, treatment), require(disposal.method, different))), then(obligation(has(industrialLiquidWaste, separateSystem)))",
G14VM1,1.7.1.2,"1.7.1 Separate systems shall be provided to convey and store industrial liquid wastes that require different treatment methods, or where the wastes are incompatible.","if(expr(fun(count),atom(rel(disposalMethod),var(industrialLiquidWaste),data(1),operator(greaterThan)))),then(obligation(expr(fun(atom(var(disposalSystem),data(unique),operator(is))),atom(var(disposalMethod)))))","if(and(has(industrialLiquidWaste, treatmentMethod), require(industrialLiquidWaste, incompatible), contains(industrialLiquidWaste, separateSystem))), then(obligation(has(industrialLiquidWaste, separateSystem)))",
G14VM1,1.8.1.1,1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: a) Comply with NZBC D1 Access Routes.,"if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(area),var(vehicleAccess),data(nzbc_d1),operator(complyWith))))","if(atom(industrialLiquidWaste), atom(var(type), data(vehicleAccessArea))), then(obligation(atom(var(complyWith), data(nzbc_d1AccessRoute))))",
G14VM1,1.8.1.2,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: here possible, access layout shall provide sufficient space for vehicles to drive in and out of the facility without reversing or interference with other activities on the site","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(area),var(vehicleAccess),data(turningSpace),operator(adequte))))","if(and(has(industrialLiquidWaste, access), is(access, vehicle))), then(and(obligation(greaterThanEqual(count(access.spacing), 1)), obligation(greaterThanEqual(access.reversing, site)), obligation(include(access, accessLayout))))",
G14VM1,1.8.1.3,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Drain any spilled waste to a kerbed area sloped so that the waste does not collect under the vehicle, or drain in an uncontrolled manner to other areas of the plant","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(and(obligation(atom(rel(drain),var(spillage),data(kerb),operator(towards))),prohibition(atom(rel(flow),var(spillage),or(data(vehicle),data(plantArea)),operator(towards)))))","if(and(equal(industrialLiquidWaste, TRUE), has(industrialLiquidWaste, accessArea), is(accessArea, vehicle))), then(or(and(obligation(drainTo(accessArea, kerbedArea)), obligation(equal(waste.collection, underVehicle)), obligation(drainTo(accessArea, otherArea)))))",
G14VM1,1.8.1.4,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Any spilled waste shall: i) be contained on-site for subsequent removal, ii) not enter the surface water system, and iii) not enter the sewage system unless the spilled waste is acceptable as a discharge to the sewer by the network utility operator.","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)),permission(not(atom(var(spillage),data(sewer),operator(dischargeInto)))))),then(prohibition(atom(rel(flow),var(spillage),data(sewer),operator(dischargeInto))))","if(atom(wasteLiquidWaste), and(atom(var(type), data(industrial), operator(equal)))), then(and(obligation(atom(var(accessArea), data(on-site), operator(equal))), obligation(and(atom(var(accessArea), data(surfaceWaterSystem)))), obligation(and(not(atom(var(accessArea), data(sewageSystem)))))))",
G14VM1,1.8.1.5,"1.8.1 Vehicle access areas for the collection of industrial liquid waste shall: Any spilled waste shall: i) be contained on-site for subsequent removal, ii) not enter the surface water system, and iii) not enter the sewage system unless the spilled waste is acceptable as a discharge to the sewer by the network utility operator.","if(and(atom(rel(purpose),var(vehicleAccess),data(collection),operator(equal)),atom(rel(type),var(collection),data(industrialLiquidWaste),operator(equal)))),then(obligation(atom(rel(disposalMethod),var(spillage),data(on-site),operator(contained))),and(prohibition(atom(rel(flow),var(spillage),data(surfaceWaterSystem),operator(into)))))","if(atom(wasteLiquidWaste), and(atom(var(type), data(industrial), operator(equal)))), then(and(obligation(atom(var(accessArea), data(on-site), operator(equal))), obligation(and(atom(var(accessArea), data(surfaceWaterSystem)))), obligation(and(not(atom(var(accessArea), data(sewageSystem)))))))",
G14VM1,1.9.1.1,"1.9.1 Where unauthorised access to storage facilities may be hazardous, security shall be provided by: a) Locating the facilities in a lockable enclosed space within a building","if(and(permission(not(atom(var(access),data(storageFacility)))),atom(var(condition),data(hazardous)),atom(var(storageFacility),data(building),operator(within)))),then(obligation(atom(var(storageFacility),data(lockable))))","if(and(has(industrialLiquidWasteStorageFacility, hazardousAccess), is(theFacility.location, lockableEnclosedSpace), within(lockableEnclosedSpace, building))), then(obligation(greaterThanEqual(theFacility.hazardousAccess, min)))",LOGIC
G14VM1,1.9.1.2,"1.9.1 Where unauthorised access to storage and treatment facilities may be hazardous, security shall be provided by: a) Locating the facilities in a lockable enclosed space within a building, or b) An external security fence with lockable gates if located in the open.","if(and(permission(not(atom(var(access),data(storageFacility)))),atom(var(condition),data(hazardous)),atom(var(storageFacility),data(building),operator(outside)))),then(obligation(atom(var(storageFacility),data(lockable))),and(obligation(atom(var(securityFence))),obligation(atom(var(securityGate),data(lockable)))))","if(and(has(industrialLiquidWasteStorageArea, and(hazardous, securityFence)), is(securityFence.location, lockableEnclosedSpace), within(securityFence.location, building))), then(or(and(obligation(is(securityFence.type, externalSecurityFence)), obligation(has(securityFence, lockableGate)))))",
G14VM1,2.0.1,"2.0.1 Where the network utility operator accepts the discharge of industrial liquid waste to a sewer, the waste shall be conveyed in a plumbing and drainage disposal system complying with NZBC G13 Foul Water.","if(permission(atom(rel(disposalMethod),var(industrialLiquidWaste),data(sewer),operator(dischargeInto)))),then(and(obligation(atom(var(industrialLiquidWaste),data(disposalSystem),operator(conveyedIn))),obligation(atom(var(disposalSystem),data(nzbc_g13),operator(complyWith)))))","if(atom(var(industrialLiquidWaste), data(networkUtilityOperator), atom(var(industrialLiquidWaste), data(sewer), operator(equal)))), then(and(obligation(atom(var(disposalSystem), data(plumbing), operator(equal))), obligation(and(atom(var(disposalSystem), data(drainage), operator(equal)))), obligation(and(atom(rel(complyWith), var(disposalSystem), data(nzbc_g13_foulWater))))))",
G14VM1,2.1.1,"2.1.1 Screens, grit chambers, grease traps or similar appropriate equipment should be installed at the head of piping systems if suspended solids or material within the liquid waste might cause blockage of the piping system.","if(and(atom(rel(blockage),var(pipingSystem),data(possible),operator(is)),atom(rel(cause),var(blockage),data(suspendedSolid),operator(equal)))),then(and(obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(screens),operator(has))),obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(gritChamber),operator(has))),obligation(atom(rel(atTheHeadOf),var(pipingSystem),data(greaseTrap),operator(has)))))","if(is(pipingSystem.type, or(screen, gritChamber, greaseTrap, appropriateEquipment))), then(obligation(has(pipingSystem, head)))","LOGIC
IGNORE"
G14VM1,2.1.2,"2.1.2 Wherever possible, piping systems shall convey industrial liquid waste using gravity flow.","if(atom(var(industrialLiquidWaste),data(pipingSystem),operator(conveyedIn))),then(obligation(atom(rel(disposalMethod),var(industrialLiquidWaste),data(gravityFlow),operator(equal))))","if(equal(pipingSystem, TRUE)), then(obligation(contains(industrialLiquidWaste, gravityFlow)))",
G14VM1,2.1.3,2.1.3 Gravity flow pipelines should have sufficient gradient to provide flow velocities that prevent the settlement of entrained solids and grit.,"if(atom(rel(disposalMethod),var(industrialLiquidWaste),data(gravityFlow),operator(equal))),then(and(obligation(atom(rel(slope),var(pipeline),data(sufficient),operator(is))),atom(rel(velocity),var(flow),data(velocityCausingSediment),operator(greaterThan))))","if(equal(flowPipeline.type, gravityFlowPipeline)), then(obligation(greaterThanEqual(flowPipeline.gradient, sufficient)))",
G14VM1,2.3.2,"2.3.2 Joints, fittings and valves â The number of joints, fittings and valves in the piping system shall be kept to a practical minimum.","if(atom(var(industrialLiquidWaste),data(pipingSystem),operator(conveyedIn))),then(and(obligation(expr(fun(count),atom(rel(joint),var(pipingSystem),data(minimum),operator(is)))),expr(fun(count),atom(rel(fitting),var(pipingSystem),data(minimum),operator(is))),expr(fun(count),atom(rel(valve),var(pipingSystem),data(minimum),operator(is)))))","if(and(is(piping.type, pipe), has(piping, joint), is(joint.number, fitting), is(valve.number, valve))), then(obligation(is(joint.number, practicalMinimum)))",
G14VM1,2.3.3,2.3.3 Bends shall have a centreline radius of no less than 1.5 times the nominal pipe diameter.,"if(atom(rel(bend),var(pipingSystem))),then(obligation(atom(rel(centrelineRadius),var(bend),data(1.5*(nominalPipeDiameter)),operator(greaterThanEqual))))","if(equal(bend, TRUE)), then(obligation(greaterThanEqual(bend.centrelineRadius, 1.5timesNPetPipeDiameter)))",
G14VM1,3.2.1,3.2.1 Free-standing tanks shall be secured against earthquake forces. The methods given in NZS 4219 are acceptable.,"if(atom(rel(type),var(tank),data(freeStanding))),then(and(obligation(atom(rel(protection),var(tank),data(seismic),operator(equal))),permission(atom(rel(seismicRestraint),var(tank),data(nzs_4219),operator(comply)))))","if(equal(tank, TRUE)), then(and(obligation(complyWith(tank.securedAgainst, earthQuakeForce)), complyWith(tank.method, nzs_4219)))",
