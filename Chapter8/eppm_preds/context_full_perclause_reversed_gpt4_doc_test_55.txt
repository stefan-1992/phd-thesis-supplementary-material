if( and( part of( building element, building), comply with( building element, publication), as per( publication, and( acceptable solutions, verification methods))), then( obligation( satisfy( building element. b2 requirements, and( condition of use, publication, acceptable solutions, verification methods))))
if( is( person, specifying building element)), then( obligation( and( define( building element. maintenance requirements, x0), or( as per( x0, manufacturer recommendation), include( x0, periodic inspection)), not( readily observable( building element)), require( specific effort( access, or( roof, subfloor space))))))
if( has( building, maintenance)), then( obligation( and( include( maintenance. task, and( following, washing, re-coating, replacing, cleaning, servicing, maintaining)), for( following, manufacturer recommendation), applicable( following, manufacturer recommendation), include( maintenance. task, washing), for( washing, and( surface, exterior building element)), subject to( exterior building element, wind driven salt spray), include( maintenance. task, re-coating), for( re-coating, and( interior finish, exterior finish)), include( maintenance. task, replacing), for( replacing, and( sealant, seal, gasket, valve, washer, high wear component)), in( joint, easily accessed service equipment, building element), include( maintenance. task, cleaning), for( cleaning, filter), in( building service system), include( maintenance. task, replacing), for( replacing, filter), in( building service system), include( maintenance. task, servicing), for( servicing, and( boiler, cooling tower, lift, escalator, emergency lighting, fire protection equipment)), include( maintenance. task, maintaining), for( maintaining, and( sign, access route, escape route, emergency equipment, hazardous area)))))
if( and( has( building, compliance schedule), as per( compliance schedule, building act section 44), has( building, scheduled maintenance))), then( obligation( and( include( scheduled maintenance, inspection), include( scheduled maintenance, maintenance), include( scheduled maintenance, reporting), for( inspection, building element), for( maintenance, building element), for( reporting, building element), may( maintenance. procedure, total replacement))))
if( and( is( material. type, cement plaster), part of( material, or( wall, ceiling, soffit)))), then( permission( comply with( material. durability, nzs 4251 part 1)))
if( and( is( building. material, earth), within( building, scope of( and( nzs 4297, nzs 4299))))), then( obligation( comply with( building. durability, and( nzs 4297, nzs 4299))))
if( is( glass unit. type, insulating)), then( permission( comply with( glass unit. durability, 'nzs 4223 2')))
if( and( is( building element. material, steel), within( building element, scope of snz ts 3404))), then( obligation( comply with( building element. durability, snz ts 3404)))
if( has( building, principal entrance)), then( obligation( has( accessible route, direct access to( accessible route. destination, principal entrance))))
if( not( is( principal entrance. route, practical)), then( obligation( use( alternative route, most direct practical route to space served by principal entrance))))
if( and( is( building. use, community service), exist( accessible unit), for each( accessible unit, connect( accessible unit, and( reception area, office, shop, dining room, kitchen, laundry, ablution block, recreation room, communal facility))))), then( obligation( has( accessible route, connection)))
if( and( as per( approach, nzbc d1as1 f1), for( people, disabilities))), then( obligation( provide( approach, building)))
if( and( is( access route. part of, escape route))), then( obligation( comply with( access route, nzbc c4)))
if( exist( access route)), then( as per( access route. slope, nzbc d1as1 f2))
if( and( not( is( building. risk group, sh1)), not( permission( as per( step. count, d1as1 1.3.2)))), equal( step. count, 1)), then( obligation( not( exist( step, isolated))))
if( and( is( threshold. feature, weather stop), is( step. type, single isolated))), then( obligation( less than equal( weather stop. projection, 20 mm)))
if( exist( access route)), then( obligation( and( has( access route, height clearance), comply with( height clearance, and( nzbc d1as1 t1, nzbc d1as1 f3)))))
if( has( disposal system, location)), then( obligation( ensure( spillage from( and( storage tank, pond)), safely contained)))
if( has( collection facility, location)), then( obligation( in( location, area), and( has( area, sufficient access), for( sufficient access, and( cleaning, clearing of blockages, maintenance)))))
if( has( storage facility, location)), then( obligation( and( for( access, cleaning), for( access, clearing of blockages), for( access, maintenance), is( access, sufficient))))
if( has( treatment facility, location)), then( obligation( in( location, area with sufficient access for and( cleaning, clearing of blockages, maintenance))))
if( exist( disposal system)), then( obligation( in( disposal system. location, area with( and( access for( cleaning), access for( clearing of blockages), access for( maintenance))))))
if( and( has( storage tank, location), is( location, below ground))), then( obligation( and( avoid( storage tank, health hazard), avoid( storage tank, safety hazard), avoid( storage tank, corrosion), is( corrosion. threat, integrity of tank), is( corrosion. threat, integrity of associated plant), designed to( storage tank, withstand effects of associated loads))))
if( and( for( material, contact), with( contact, industrial liquid waste))), then( obligation( and( is( material, resistant to corrosion), is( material, resistant to chemical attack), is( material, resistant to abrasion), is( material, resistant to physical abuse))))
if( and( has( equipment, design), for( equipment, liquid waste handling))), then( obligation( is( design. corrosion allowance, adequate for( intended life, facilities))))
if( or( is( system, industrial liquid waste system), is( system, storage tank), is( system, treatment tank), is( system, piping system))), then( obligation( and( has( system, test), on( system, completion), to( test, avoid), avoid( contamination, or( soil, ground water, waterway)), through( contamination, or( run off, washing down, rain, accidental overflow, other causes)))))
if( has( area, waste storage facilities)), then( obligation( and( is( area. surface, impervious), has( area, containment), not( cause( area. contamination, or( soil, ground water, waterway)), by( or( washing down, rain, accidental overflow))))))
if( is( facility. type, industrial liquid waste)), then( obligation( and( install( facility, to avoid), is( contamination, possible), not( is( contamination, of potable water supply)), as per( contamination, nzbc g12))))
if( and( has( industrial liquid waste, different treatment), has( industrial liquid waste, different disposal method))), then( obligation( has( industrial liquid waste, separate systems)))
if( and( for( waste storage system, industrial liquid waste), requires( industrial liquid waste, treatment method), not( compatible( industrial liquid waste)))), then( obligation( has( waste storage system, separate systems)))
if( for( vehicle access area, collection of industrial liquid waste)), then( obligation( comply with( vehicle access area, nzbc d1)))
if( and( is( vehicle access area. purpose, collection), is( vehicle access area. content, industrial liquid waste))), then( obligation( and( provide( vehicle access area. layout, space), for( space, vehicle maneuver), without( vehicle maneuver, reversing), without( vehicle maneuver, interference), with( interference, other activities), on( site))))
if( for( system, industrial liquid waste)), then( obligation( comply with( system. design, g14vm1 1.1.1)))
if( and( has( treatment facility, hazard), is( hazard, unauthorised access))), then( obligation( and( has( treatment facility, location), is( location, lockable enclosed space), within( location, building))))
if( and( for( vehicle access area, waste collection), is( waste, industrial liquid waste))), then( obligation( or( and( has( vehicle access area, kerbed area), slope( kerbed area, towards( not( under( vehicle))), not( collect( waste, under( vehicle))), not( drain( waste, uncontrolled)), not( towards( waste, other area)))), drain( waste, controlled manner))))
if( and( is( area. use, vehicle access), for( area, collection), is( waste. type, industrial liquid waste), exist( spill)), then( obligation( not( into( spill, sewage system))), permission( and( accept( network utility operator, spill), into( spill, sewer)))))
if( and( for( vehicle access area, collection), for( collection, industrial liquid waste))), then( obligation( and( contain( spill, on site), for( subsequent removal, spill), not( enter( spill, surface water system)))))
if( and( has( storage facility, hazard), is( hazard, unauthorised access))), then( obligation( and( within( storage facility. location, building), has( storage facility, enclosed space), is( enclosed space, lockable))))
if( and( has( storage facility, hazard), is( storage facility. location, open))), then( obligation( and( has( storage facility, security fence), has( security fence, lockable gate))))
if( and( for( disposal system, industrial liquid waste), accept( network utility operator, discharge), into( discharge, sewer))), then( obligation( comply with( disposal system, nzbc g13 foul water)))
if( and( has( piping system, head), or( has( liquid waste, suspended solids), has( liquid waste, material)), might( cause( material, blockage of( piping system)))), then( obligation( or( has( piping system, screen), has( piping system, grit chamber), has( piping system, grease trap), has( piping system, appropriate equipment))))
if( for( piping system, industrial liquid waste)), then( is( piping system. conveyance method, gravity flow))
if( and( for( pipeline, industrial liquid waste), is( pipeline. flow type, gravity))), then( obligation( and( has( pipeline, gradient), provide( gradient, flow velocity), prevent( flow velocity, settlement), of( settlement, and( entrained solids, grit)))))
if( for( piping system, industrial liquid waste)), then( obligation( is( count( and( piping system. joint, piping system. fitting, piping system. valve)), practical minimum)))
if( has( pipe, bend)), then( obligation( greater than equal( bend. centreline radius, 'pipe. nominal diameter * 1.5')))
if( and( is( tank. type, free standing), subject to( tank, earthquake forces))), then( obligation( as per( tank. securing method, nzs 4219)))
if( is( waste. type, hazardous)), then( obligation( comply with( storage facility, nzbc f3)))
if( exist( collection facility)), then( obligation( not( create( collection facility. location, or( health hazard, safety hazard)))))
if( has( facility, storage)), then( obligation( not( create( storage. location, or( health hazard, safety hazard)))))
if( exist( treatment facility)), then( obligation( not( create( treatment facility. location, or( health hazard, safety hazard)))))
if( exist( disposal system)), then( obligation( not( create( disposal system. location, or( health hazard, safety hazard)))))
if( has( collection facility, location)), then( obligation( ensure( spillage from( and( storage tank, pond)), can be( safely contained))))
if( has( storage facility, and( storage tank, pond))), then( obligation( ensure( spillage. containment, safe)))
if( or( has( storage tank, spillage), has( pond, spillage))), then( obligation( ensure( spillage, safely contained)))
if( and( has( treatment facility, hazard), is( treatment facility. location, open))), then( obligation( and( has( treatment facility, security fence), has( security fence, lockable gate))))
