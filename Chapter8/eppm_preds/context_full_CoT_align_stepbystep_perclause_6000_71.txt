For the purposes of risk group SI: is( building. risk group, si)
the term 'bed' means: define( bed, x0)
number of people that are under care or detention: is( x0, people under care or detention)
It can include people on: or( on( people, bed), on( people, recliner chair), on( people, dentist chair), on( people, treatment table), on( people, furniture))
Any other furniture where an occupant may be for a period of treatment, in care or detention: for( furniture, or( treatment, care, detention))

Target: if( is( building. risk group, si)), then( define( bed, x0), obligation( is( x0, people under care or detention), or( on( people, bed), on( people, recliner chair), on( people, dentist chair), on( people, treatment table), for( furniture, or( treatment, care, detention)))))
This Acceptable Solution: apply to( nzbc cas2, building)
means of establishing compliance: comply with( building, nzbc clauses c1 to c6)
NZBC Clauses C1 to C6 Protection from Fire: nzbc clauses c1 to c6
building activities: has( building, activity)
covered by risk groups: is( building. risk group, specified)
specified in Paragraph 1.1.1: as per( building. risk group, nzbc cas2 1.1.1)
described in Table 1.1: as per( building. risk group, nzbc cas2 t1.1)

Target: if( and( apply to( nzbc cas2, building), comply with( building, nzbc clauses c1 to c6), has( building, activity), as per( building. risk group, nzbc cas2 1.1.1), as per( building. risk group, nzbc cas2 t1.1))), then( apply to( nzbc cas2, building))
Structural framing members: exist( framing member)
connected to building elements with an FRR (Fire Resistance Rating): connect( framing member, building element), has( building element, frr)
shall: obligation
framing members rated at no less than the building elements: greater than equal( framing member. rating, building element. rating)
Target: if( and( exist( framing member), connect( framing member, building element), has( building element, frr))), then( obligation( greater than equal( framing member. rating, building element. rating)))
All buildings: exist( building)
shall: obligation
means of escape from fire: has( building, means of escape from fire)
escape routes: include( means of escape from fire, escape route)
An escape route shall provide protection: has( escape route, protection)
protection to any occupant escaping: for( protection, escaping occupant)
escaping to a safe place: towards( escaping occupant, safe place)
from a fire within a building: from( fire, building)

Target: if( exist( building)), then( obligation( and( has( building, means of escape from fire), include( means of escape from fire, escape route), has( escape route, protection), for( protection, escaping occupant), towards( escaping occupant, safe place), from( fire, building))))
Escape routes: exist( escape route)
shall: obligation
comply with NZBC D1: comply with( escape route, nzbc d1)
Target: if( exist( escape route)), then( obligation( comply with( escape route, nzbc d1)))
Ramps, stairs, ladders, landings, handrails, doors, vision panels and openings: or( exist( ramp), exist( stair), exist( ladder), exist( landing), exist( handrail), exist( door), exist( vision panel), exist( opening))
shall: obligation
comply with Acceptable Solution D1/AS1: comply with( or( ramp, stair, ladder, landing, handrail, door, vision panel, opening), nzbc d1as1)
Target: if( or( exist( ramp), exist( stair), exist( ladder), exist( landing), exist( handrail), exist( door), exist( vision panel), exist( opening))), then( obligation( comply with( or( ramp, stair, ladder, landing, handrail, door, vision panel, opening), nzbc d1as1)))
Adjoining firecells: adjoin( firecells)
shall: obligation
fire separated: has( firecells, fire separation)
by the highest: define( max( firecells. fire resistance rating), x0)
Life rating: is( fire resistance rating. type, life)
specified in Paragraph 2.3: as per( fire resistance rating, nzbc cas2 2.3)
if both firecells are under common ownership: is( firecells. ownership, common)
Property rating: is( fire resistance rating. type, property)
if both firecells are under different ownership: not( is( firecells. ownership, common))
Target: if( adjoin( firecells)), then( obligation( or( and( is( firecells. ownership, common), define( max( firecells. fire resistance rating), x0), is( fire separation. fire resistance rating, x0), as per( fire resistance rating, nzbc cas2 2.3)), and( not( is( firecells. ownership, common)), define( max( firecells. fire resistance rating), x0), is( fire separation. fire resistance rating, x0), as per( fire resistance rating, nzbc cas2 2.3)))))
Open vented storage water heaters: is( storage water heater. type, open vented)
shall: obligation
storage water heater vent pipe: has( storage water heater, vent pipe)
vent pipe complying with Paragraph 6.8: comply with( vent pipe, nzbc g12as1 6.8)
Target: if( is( storage water heater. type, open vented)), then( obligation( and( has( storage water heater, vent pipe), comply with( vent pipe, nzbc g12as1 6.8))))
Backflow prevention devices: exist( backflow prevention device)
shall: obligation
Reduced pressure zone devices: is( backflow prevention device. type, reduced pressure zone)
manufactured to AS/NZS 2845.1 Section 12: comply with( backflow prevention device, nzs 2845 1 12)
Target: if( is( backflow prevention device. type, reduced pressure zone)), then( obligation( comply with( backflow prevention device, nzs 2845 1 12)))
NZS 4603: nzs 4603
open vented low pressure storage water heaters: is( storage water heater. type, open vented low pressure)
acceptable solution: permission( comply with)
performance criteria of NZBC G12: nzbc g12. performance criteria
may exceed: may( exceed)

Target: if( is( storage water heater. type, open vented low pressure)), then( permission( and( comply with( storage water heater, nzs 4603), may( exceed( storage water heater. performance, nzbc g12. performance criteria)))))
NZS 4607: nzs 4607
unvented (valve vented) storage water heaters: is( storage water heater. type, or( unvented, valve vented))
acceptable solution: permission( comply with( storage water heater, nzs 4607))
may exceed the performance criteria of NZBC G12: may( exceed( storage water heater. performance, nzbc g12))

Target: if( is( storage water heater. type, or( unvented, valve vented))), then( permission( and( comply with( storage water heater, nzs 4607), may( exceed( storage water heater. performance, nzbc g12)))))
Inspection chambers or access chambers: or( exist( inspection chamber), exist( access chamber))
shall: obligation
changes in both gradient and direction: and( has( drain, change in gradient), has( drain, change in direction))
where either is greater than 22.5Â°: or( greater than( change in gradient, 22.5 deg), greater than( change in direction, 22.5 deg))
Target: if( and( has( drain, change in gradient), has( drain, change in direction), or( greater than( change in gradient, 22.5 deg), greater than( change in direction, 22.5 deg)))), then( obligation( or( exist( inspection chamber), exist( access chamber))))
Pipes penetrating concrete or masonry elements: and( has( pipe, penetration), is( penetration. material, or( concrete, masonry)))
shall: obligation
either: or
wrapped with a flexible material: has( pipe, wrapping), is( wrapping. material, flexible)
or passed through a sleeve or duct: or( has( pipe, sleeve), has( pipe, duct))
to permit free movement for expansion and contraction: for( and( sleeve, duct), and( expansion allowance, contraction allowance))
Target: if( and( has( pipe, penetration), is( penetration. material, or( concrete, masonry)))), then( obligation( or( and( has( pipe, wrapping), is( wrapping. material, flexible)), and( or( has( pipe, sleeve), has( pipe, duct)), for( and( sleeve, duct), and( expansion allowance, contraction allowance))))))
Suspended floors and slabs on ground: or( is( floor. type, suspended), on( slab, ground))
shall: obligation
at least 150 mm above: greater than equal( 'x0 + 150 mm')
the finished level of the surrounding ground: define( surrounding ground. finished level, x0)
immediately adjacent to the building: adjacent( surrounding ground, building)
Target: if( or( is( floor. type, suspended), on( slab, ground))), then( obligation( and( define( surrounding ground. finished level, x0), adjacent( surrounding ground, building), greater than equal( floor. elevation, 'x0 + 150 mm'))))
Drains: exist( drain)
shall: obligation
capable of handling the rainfall during a storm: can( drain, handle( rainfall, storm))
No drain shall have an internal diameter of less than 85 mm: not( less than( drain. diameter, 85 mm))
Target: if( exist( drain)), then( obligation( and( can( drain, handle( rainfall, storm)), not( less than( drain. diameter, 85 mm)))))

Relief valve drains: has( relief valve, drain)
shall: obligation
fitted to: requires( drain, relief valve)
Temperature/pressure relief valves: is( relief valve. type, temperature pressure)
Pressure relief valves: is( relief valve. type, pressure)
Expansion control valves: is( relief valve. type, expansion control)
Target: if( has( relief valve, drain)), then( obligation( requires( drain, or( is( relief valve. type, temperature pressure), is( relief valve. type, pressure), is( relief valve. type, expansion control)))))
Selected compacted fill: is( fill material, selected compacted fill)
fine-grained soil or granular material: is( selected compacted fill, or( fine grained soil, granular material))
shall: obligation
free from topsoil and rubbish: not( include( selected compacted fill, or( topsoil, rubbish)))
maximum particle size of 20 mm: less than equal( selected compacted fill. particle size, 20 mm)
Target: if( is( fill material, selected compacted fill)), then( obligation( and( is( selected compacted fill, or( fine grained soil, granular material)), not( include( selected compacted fill, or( topsoil, rubbish))), less than equal( selected compacted fill. particle size, 20 mm))))
earthquake zone factor: define( earthquake zone. factor, x0)
Canterbury earthquake region: is( location, canterbury earthquake region)
shall: obligation
earthquake zone factor > 0.6: greater than( x0, 0.6)
Target: if( is( location, canterbury earthquake region)), then( obligation( greater than( earthquake zone. factor, 0.6)))
Interlinking rails are not required: permission( not( has( safety barrier, interlinking rail)))
for a heat-strengthened or toughened laminated safety glass barrier: and( is( safety barrier. material, glass), is( glass. type, laminated), or( is( glass, heat strengthened), is( glass, toughened)))
that has two or three edges supported: in between( count( safety barrier. supported edge), 2, 3)
by structural sealant joints or continuous clamps: or( has( supported edge, structural sealant joint), has( supported edge, continuous clamp))
and will, when both panes of the laminate are fractured: and( is( safety barrier. panes, and( laminate, fractured)))
resist a 0.2 kN concentrated load: against( panes. resistance, concentrated load), equal( concentrated load, 0.2 kN)
and not deflect more than 250 mm: less than equal( panes. deflection, 250 mm)
Target: if( and( is( safety barrier. material, glass), is( glass. type, laminated), or( is( glass, heat strengthened), is( glass, toughened)), in between( count( safety barrier. supported edge), 2, 3), or( has( supported edge, structural sealant joint), has( supported edge, continuous clamp)), is( safety barrier. panes, and( laminate, fractured)), against( panes. resistance, concentrated load), equal( concentrated load, 0.2 kN), less than equal( panes. deflection, 250 mm))), then( permission( not( has( safety barrier, interlinking rail))))
Bituminous flashings: is( flashing. material, bituminous)
shall: obligation
only be used in accordance with Table 20: as per( flashing, nzbc e2as1 t20)
Target: if( is( flashing. material, bituminous)), then( obligation( as per( flashing, nzbc e2as1 t20)))
Cladding systems: exist( cladding system)
shall: obligation
meet the requirements of NZBC E2.2 to E2.3.7: comply with( cladding system, nzbc e2 2 to nzbc e2 3.7)
Target: if( exist( cladding system)), then( obligation( comply with( cladding system, nzbc e2 2 to nzbc e2 3.7)))
Glass design: is( glass. design, structural)
Structural balustrade: is( balustrade. type, structural)
Two-edge support: is( balustrade. support, two edge)
shall: obligation
comply with: comply with
Table 16: nzs 4223 3 t16
Target: if( and( is( glass. design, structural), is( balustrade. type, structural), is( balustrade. support, two edge))), then( obligation( comply with( balustrade. design, nzs 4223 3 t16)))
Slatted decks: exist( slatted deck)
May: permission
The level of the upper surface of the slatted deck: define( top of( slatted deck), x0)
at the same level as the threshold: equal( x0.level, threshold.level)
for non-cantilevered decks: not( is( deck. type, cantilevered))
that are formed as shown in Figure 14(c): as per( deck. formation, nzbc e2as1 f14.c)
Target: if( exist( slatted deck)), then( permission( and( define( top of( slatted deck), x0), equal( x0.level, threshold.level), not( is( deck. type, cantilevered)), as per( deck. formation, nzbc e2as1 f14.c))))
Tile profiles: is( tile. profile, type ii)
Single profile tiles: is( tile. type, single profile)
shall: obligation
having one watercourse: has( tile, watercourse)
watercourse depth of a minimum of 25 mm: greater than equal( watercourse. depth, 25 mm)
Target: if( is( tile. type, single profile)), then( obligation( and( has( tile, watercourse), greater than equal( watercourse. depth, 25 mm))))
Roof cladding: exist( roof cladding)
Where required in AS 2050 and Table 20: or( as per( roof cladding, as 2050), as per( roof cladding, nzbc e2as1 t20))
shall: obligation
underlay shall comply with Table 23: comply with( underlay, nzbc e2as1 t23)
Target: if( exist( roof cladding)), then( obligation( and( or( as per( roof cladding, as 2050), as per( roof cladding, nzbc e2as1 t20)), comply with( underlay, nzbc e2as1 t23))))
Fixing of posts for handrails: has( handrail, post fixing)
into membrane roofs or decks: into( post fixing, or( roof. type, deck. type))
membrane roofs or decks: is( or( roof. type, deck. type), membrane)
is not covered by this Acceptable Solution: not( apply to( nzbc e2as1, post fixing))
Target: if( and( has( handrail, post fixing), into( post fixing, or( roof. type, deck. type)), is( or( roof. type, deck. type), membrane))), then( not( apply to( nzbc e2as1, post fixing)))
The top ends of profiled metal roof cladding: has( roof cladding. top end, stopend)
shall: obligation
profiled metal roof cladding: is( roof cladding. type, profiled metal)
trapezoidal and trough profile metal roof cladding: is( roof cladding. profile, or( trapezoidal, trough))
roof pitch is less than 25Â°: less than( roof. pitch, 25 deg)
building is in a High/Very High/Extra High wind zone: is( building. wind zone, or( high, very high, extra high))
stopends as shown in Figure 49: as per( stopend, nzbc e2as1 f49)

Target: if( and( is( roof cladding. type, profiled metal), is( roof cladding. profile, or( trapezoidal, trough)), or( less than( roof. pitch, 25 deg), is( building. wind zone, or( high, very high, extra high)))), then( obligation( and( has( roof cladding. top end, stopend), as per( stopend, nzbc e2as1 f49))))
Suspended timber floors: is( floor. type, suspended timber)
shall: obligation
meet the requirements of NZS 3604: comply with( floor, nzs 3604)
Clearances from surfaces to the wall framing: has( clearance, wall framing)
paved and unpaved surfaces: or( is( surface. type, paved), is( surface. type, unpaved))
shall be in accordance with NZS 3604, and Table 18: as per( clearance, and( nzs 3604, nzbc e2as1 t18))
Target: if( is( floor. type, suspended timber)), then( obligation( and( comply with( floor, nzs 3604), for( clearance, and( wall framing, or( paved surface, unpaved surface))), as per( clearance, and( nzs 3604, nzbc e2as1 t18)))))
Solar collectors: exist( solar collector)
must: obligation
Solar collectors must face: has( solar collector, orientation)
within +/- 90 degrees of geographic north: in between( solar collector. orientation, 'geographic north +/- 90 deg')
to satisfy the requirements of NZBC Clause H1.3.4(a): comply with( solar collector. orientation, nzbc h1 3.4.a)
Target: if( exist( solar collector)), then( obligation( and( has( solar collector, orientation), in between( solar collector. orientation, 'geographic north +/- 90 deg'), comply with( solar collector. orientation, nzbc h1 3.4.a))))
Fixings used for the installation of a solar water heater: has( solar water heater. installation, fixing)
must: obligation
meet the requirements described in Paragraphs: comply with( fixing, and( nzbc g12as2 2.1.1, nzbc g12as2 2.1.2, nzbc g12as2 2.1.3, nzbc g12as2 2.1.4))
Target: if( has( solar water heater. installation, fixing)), then( obligation( comply with( fixing, and( nzbc g12as2 2.1.1, nzbc g12as2 2.1.2, nzbc g12as2 2.1.3, nzbc g12as2 2.1.4))))
Parapets: exist( parapet)
shall: obligation
comply with Paragraph 6.0: comply with( parapet, nzbc e2as1 6.0)
Target: if( exist( parapet)), then( obligation( comply with( parapet, nzbc e2as1 6.0)))
Tanks installed as part of a pumped solar water heater: has( solar water heater. type, pumped), has( solar water heater, tank)
where the tank is separately mounted from the collector: not( adjacent( tank, solar collector))
must: obligation
comply with the minimum tank insulation requirements: comply with( tank. insulation, minimum requirement)
of AS/NZS 4692.2: as per( minimum requirement, nzs 4692 2)
Target: if( and( has( solar water heater. type, pumped), has( solar water heater, tank), not( adjacent( tank, solar collector)))), then( obligation( comply with( tank. insulation, as per( minimum requirement, nzs 4692 2))))
The centre of all fixings: define( fixing. centre, x0)
must: obligation
no closer than 10 fixing diameters: greater than equal( distance, '10 * fixing. diameter')
from the end of a piece of timber: define( timber. end, x1)
Target: if( has( timber, fixing)), then( obligation( and( define( fixing. centre, x0), define( fixing. diameter, x2), define( timber. end, x1), greater than equal( distance( x0, x1), '10 * x2'))))
Solar collectors mounted parallel to the roof: is( solar collector. orientation, parallel to roof)
Solar collectors that are elevated up to 50 mm above the roof cladding: less than equal( solar collector. elevation, 50 mm)
must: obligation
supported by: has( solar collector, support)
underlying purlins: is( support. type, purlin)
conforming to Paragraph 6.4.1 (a) or (b): as per( purlin, or( nzbc g12as2 6.4.1 a, nzbc g12as2 6.4.1 b))
underlying rafters or trusses: is( support. type, or( rafter, truss))
connections conforming with Paragraphs 6.4.1 (a) or (c): as per( support. connection, or( nzbc g12as2 6.4.1 a, nzbc g12as2 6.4.1 c))
collector support rails: is( support. type, collector support rail)
conforming to Paragraph 6.5: as per( collector support rail, nzbc g12as2 6.5)

Target: if( and( is( solar collector. orientation, parallel to roof), less than equal( solar collector. elevation, 50 mm))), then( obligation( or( and( has( solar collector, support), is( support. type, purlin), as per( purlin, or( nzbc g12as2 6.4.1 a, nzbc g12as2 6.4.1 b))), and( has( solar collector, support), is( support. type, or( rafter, truss)), as per( support. connection, or( nzbc g12as2 6.4.1 a, nzbc g12as2 6.4.1 c))), and( has( solar collector, support), is( support. type, collector support rail), as per( collector support rail, nzbc g12as2 6.5)))))
Discharge pipes: exist( discharge pipe)
shall: obligation
vented: has( discharge pipe, vent)
where required by Table 5: as per( vent, nzbc g13as1 t5)
Target: if( exist( discharge pipe)), then( obligation( and( has( discharge pipe, vent), as per( vent, nzbc g13as1 t5))))
Air admittance valves: exist( air admittance valve)
shall: obligation
manufactured to: comply with( air admittance valve, standard)
ASSE 1050, ASSE 1051, EN 12380 or AS/NZS 4936: or( asse 1050, asse 1051, en 12380, nzs 4936)
Target: if( exist( air admittance valve)), then( obligation( comply with( air admittance valve, or( asse 1050, asse 1051, en 12380, nzs 4936))))
Water traps: exist( water trap)
shall: obligation
Water traps shall be removable: is( water trap, removable)
Water traps shall be able to be dismantled: is( water trap, dismantlable)
Water traps shall be fitted with a cleaning eye: has( water trap, cleaning eye)
or: or
Target: if( exist( water trap)), then( obligation( or( is( water trap, removable), is( water trap, dismantlable), has( water trap, cleaning eye))))
Individual floor waste pipes: exist( floor waste pipe)
connected to a floor waste stack: connect( floor waste pipe, floor waste stack)
need not be vented: permission( not( has( floor waste pipe, ventilation)))
Target: if( connect( floor waste pipe, floor waste stack)), then( permission( not( has( floor waste pipe, ventilation))))
Rigid pipes: is( pipe. type, rigid)
shall: obligation
have flexible joints: has( pipe, flexible joint)
to resist damage from differential settlement: for( flexible joint, differential settlement)
Target: if( is( pipe. type, rigid)), then( obligation( has( pipe, flexible joint), for( flexible joint, differential settlement)))
Access points: exist( access point)
may: permission
located in a space: within( access point. location, space)
space containing a soil fixture: has( space, soil fixture)
Target: if( has( space, soil fixture)), then( permission( within( access point. location, space)))
Where a drain or part of a drain is no longer required: is( drain, not required)
shall: obligation
it shall be disconnected: requires( drain, disconnection)
from the foul water drainage system: from( drain, foul water drainage system)
at the junction with the live drain: at( disconnection. location, junction)
or at the property boundary: or( at( disconnection. location, property boundary))

Target: if( is( drain, not required)), then( obligation( requires( drain, disconnection), from( drain, foul water drainage system), or( at( disconnection. location, junction), at( disconnection. location, property boundary))))
Drains: exist( drain)
shall: obligation
Drains be laid at an even grade: is( drain. grade, even)
Drains have no obstructions to flow: not( has( drain, obstruction))
Target: if( exist( drain)), then( obligation( and( is( drain. grade, even), not( has( drain, obstruction)))))
Waste chutes with side-entry hoppers: has( waste chute, side entry hopper)
shall: obligation
waste chute: exist( waste chute)
waste chute alternative to common storage areas: is( waste chute, alternative to common storage area)
waste chute have internal diameter: has( waste chute, internal diameter)
minimum internal diameter of 450 mm: greater than equal( internal diameter, 450 mm)
waste chute be self-cleaning: is( waste chute, self cleaning)
waste chute be vertical: is( waste chute, vertical)
waste chute have smooth joints: has( waste chute, smooth joint)
waste chute be vented: has( waste chute, vent)
vented at the top above the roof line: above( vent. location, roof line)
vented at the bottom above the container: above( vent. location, container)
waste chute terminate over container: above( waste chute. termination, container)
suitable container: is( container, suitable)
container located in a room: within( container. location, room)
room complying with Paragraphs 3.0.1 to 3.0.9: comply with( room, and( nzbc g15as1 3.0.1, nzbc g15as1 3.0.9))

Target: if( and( has( waste chute, side entry hopper), is( waste chute, alternative to common storage area))), then( obligation( and( greater than equal( waste chute. internal diameter, 450 mm), is( waste chute, self cleaning), is( waste chute, vertical), has( waste chute, smooth joint), has( waste chute, vent), above( vent. location, roof line), above( vent. location, container), above( waste chute. termination, container), is( container, suitable), within( container. location, room), comply with( room, and( nzbc g15as1 3.0.1, nzbc g15as1 3.0.9)))))
The acceptable solutions described in this document: apply to( nzbc b1as3, chimney)
chimneys built of brickwork, concrete or precast pumice concrete: is( chimney. construction, or( brickwork, concrete, precast pumice concrete))
that are connected to timber frame or masonry buildings: connect( chimney, or( timber frame building, masonry building))
complying with NZS 3604 or NZS 4229: comply with( or( timber frame building, masonry building), or( nzs 3604, nzs 4229))
Target: if( and( apply to( nzbc b1as3, chimney), is( chimney. construction, or( brickwork, concrete, precast pumice concrete)), connect( chimney, or( timber frame building, masonry building)), comply with( or( timber frame building, masonry building), or( nzs 3604, nzs 4229)))), then( fact))
Walls in spaces where storage bins: has( space. wall, storage bin)
storage bins are likely to receive food wastes: likely( storage bin, receive food waste)
and are subject to spillage: subject to( storage bin, spillage)
shall: obligation
walls shall be constructed of: is( wall. construction, or( concrete, galvanised sheet steel, vinyl, similar material))
Target: if( and( has( space. wall, storage bin), likely( storage bin, receive food waste), subject to( storage bin, spillage))), then( obligation( is( wall. construction, or( concrete, galvanised sheet steel, vinyl, similar material))))
Waste Storage Area: exist( waste storage area)
opening windows: has( waste storage area, opening window)
shall: obligation
windows shall be screened: has( opening window, screen)
to prevent entry by insects and other vermin: prevent( screen, entry)
entry by insects and other vermin: or( insect, vermin)
Target: if( has( waste storage area, opening window)), then( obligation( and( has( opening window, screen), prevent( screen, or( insect, vermin)))))
A water supply tap: has( waste storage area, water supply tap)
shall: obligation
complying with NZBC G12: comply with( water supply tap, nzbc g12)
for washing down common waste storage areas: for( water supply tap, washing down)
common waste storage areas: is( waste storage area. type, common)
Target: if( is( waste storage area. type, common)), then( obligation( and( has( waste storage area, water supply tap), comply with( water supply tap, nzbc g12), for( water supply tap, washing down))))
The bracing described in Paragraphs 1.9.2 to 1.9.6: as per( bracing, nzbc b1as3 1.9.2 to nzbc b1as3 1.9.6)
shall be provided: obligation
in those buildings: exist( building)
where one or more of the following apply: or
The area of the room containing the chimney exceeds 24 m2: greater than( room. area, 24 m2)
The floor area on any level of the building, for a given chimney type: define( building level. floor area, x0)
is less than: less than
50 m2 for chimney Type 1: and( equal( chimney. type, 1), less than( x0, 50 m2))
75 m2 for chimney Types 2, 3 and 4: and( in between( chimney. type, 2, 4), less than( x0, 75 m2))
150 m2 for chimney Types 5, 6 and 7: and( in between( chimney. type, 5, 7), less than( x0, 150 m2))

Target: if( and( exist( building), or( greater than( room. area, 24 m2), and( define( building level. floor area, x0), or( and( equal( chimney. type, 1), less than( x0, 50 m2)), and( in between( chimney. type, 2, 4), less than( x0, 75 m2)), and( in between( chimney. type, 5, 7), less than( x0, 150 m2))))))), then( obligation( as per( bracing, nzbc b1as3 1.9.2 to nzbc b1as3 1.9.6)))
Chimney connection: has( chimney, connection)
shall: obligation
bracing units to be provided: requires( chimney, bracing unit)
number of bracing units: define( count( bracing unit), x0)
given in Table 2: as per( x0, nzbc b1as3 t2)
Target: if( has( chimney, connection)), then( obligation( and( requires( chimney, bracing unit), define( count( bracing unit), x0), as per( x0, nzbc b1as3 t2))))
Chimney at roof level: is( chimney. elevation, roof level)
shall: obligation
chimney held by: has( chimney, holding mechanism)
either by a roof bracket or by a roof tie: or( is( holding mechanism, roof bracket), is( holding mechanism, roof tie))
Target: if( is( chimney. elevation, roof level)), then( obligation( has( chimney, or( roof bracket, roof tie))))
Fixing Ties: has( stack, tie)
shall: obligation
ties located: is( tie. location, within stack)
no less than 320 mm centres: greater than equal( tie. location, 320 mmCentres)
for stacks up to 600 mm wide: less than equal( stack. width, 600 mm)
Target: if( and( has( stack, tie), less than equal( stack. width, 600 mm))), then( obligation( greater than equal( tie. location, 320 mmCentres)))
Disposal systems: exist( disposal system)
shall: obligation
spillage from storage tanks or ponds: or( has( storage tank, spillage), has( pond, spillage))
can be safely contained: is( spillage, safely contained)
Target: if( exist( disposal system)), then( obligation( has( disposal system. location, spillage containment)))
Collection facilities: exist( collection facility)
shall: obligation
located in areas: is( collection facility. location, area)
with sufficient access: has( area, sufficient access)
for cleaning, clearing of blockages, and maintenance: for( sufficient access, or( cleaning, blockage clearing, maintenance))
Target: if( exist( collection facility)), then( obligation( and( is( collection facility. location, area), has( area, sufficient access), for( sufficient access, or( cleaning, blockage clearing, maintenance)))))

Structure Design 8.0 Small Chimneys: is( structure. type, small chimney)
See Acceptable Solution B1/AS3: refer to( structure. design, nzbc b1as3)
Target: if( is( structure. type, small chimney)), then( refer to( structure. design, nzbc b1as3))
Network utility operator accepts the discharge: accept( network utility operator, discharge)
Industrial liquid waste: is( waste. type, industrial liquid)
To a sewer: into( discharge, sewer)
Shall: obligation
Waste shall be conveyed: requires( waste, conveyance)
In a plumbing and drainage disposal system: is( conveyance. system, and( plumbing, drainage))
Complying with NZBC G13 Foul Water: comply with( conveyance. system, nzbc g13)

Target: if( and( accept( network utility operator, discharge), into( discharge, sewer), is( waste. type, industrial liquid))), then( obligation( and( requires( waste, conveyance), is( conveyance. system, and( plumbing, drainage)), comply with( conveyance. system, nzbc g13))))
Screens, grit chambers, grease traps: or( exist( screen), exist( grit chamber), exist( grease trap))
should: permission
installed at the head of piping systems: at( head, piping system)
if suspended solids or material within the liquid waste: if( or( exist( suspended solid), exist( material)), within( material, liquid waste))
might cause blockage of the piping system: might( cause( blockage, piping system))
Target: if( or( exist( suspended solid), exist( material)), within( material, liquid waste)), then( permission( and( or( at( screen. installation, head), at( grit chamber. installation, head), at( grease trap. installation, head)), might( cause( blockage, piping system)))))
piping systems: exist( piping system)
shall: obligation
convey industrial liquid waste: for( piping system, industrial liquid waste)
using gravity flow: is( piping system. method, gravity flow)
wherever possible: if possible( piping system. method)
Target: if( for( piping system, industrial liquid waste)), then( obligation( and( if possible( piping system. method), is( piping system. method, gravity flow))))
Galvanized steel flashings: is( flashing. material, galvanized steel)
shall: obligation
flashings have a BMT: has( flashing, base metal thickness)
BMT of 0.55 mm minimum: greater than equal( base metal thickness, 0.55 mm)
flashings be grade: has( flashing, grade)
grade G550, or G300 for rolled or crimped flashings: or( equal( grade, g550), and( equal( grade, g300), is( flashing. type, or( rolled, crimped))))
flashings be selected for corrosion protection: has( flashing, corrosion protection)
according to the intended exposure zone: for( corrosion protection, intended exposure zone)
as shown in Table 20: as per( intended exposure zone, nzbc e2as1 t20)
Target: if( is( flashing. material, galvanized steel)), then( obligation( and( greater than equal( flashing. base metal thickness, 0.55 mm), or( equal( flashing. grade, g550), and( equal( flashing. grade, g300), is( flashing. type, or( rolled, crimped)))), has( flashing, corrosion protection), for( corrosion protection, intended exposure zone), as per( intended exposure zone, nzbc e2as1 t20))))
Buildings with drained cavities: has( building, drained cavity)
and acoustic requirements: has( building, acoustic requirement)
as specified in NZBC Clause G6: as per( acoustic requirement, nzbc g6)
are outside the scope of this Acceptable Solution: not( apply to( nzbc e2as1, building))
Target: if( and( has( building, drained cavity), has( building, acoustic requirement), as per( acoustic requirement, nzbc g6))), then( not( apply to( nzbc e2as1, building)))
Joins of metal flashings: has( flashing. join, metal)
shall: obligation
Lap joins on other metal flashings: is( join. type, lap)
not rules 4.5.2.0.2.e.1 and 4.5.2.0.2.f.1: not( as per( join, or( nzbc e2as1 4.5.2.0.2.e.1, nzbc e2as1 4.5.2.0.2.f.1)))
shall be sealed: requires( join, sealant)
using a neutral cure silicone sealant: is( sealant. type, neutral cure silicone)
in conjunction with mechanical fasteners: adjoin( sealant, mechanical fastener)
The sealant shall comply with: comply with( sealant, or( iso 11600 type f class 20lm, iso 11600 class 25lm, tts 00230c low modulus type ii class a))

Target: if( and( has( flashing. join, metal), is( join. type, lap), not( as per( join, or( nzbc e2as1 4.5.2.0.2.e.1, nzbc e2as1 4.5.2.0.2.f.1)))), then( obligation( and( requires( join, sealant), is( sealant. type, neutral cure silicone), adjoin( sealant, mechanical fastener), comply with( sealant, or( iso 11600 type f class 20lm, iso 11600 class 25lm, tts 00230c low modulus type ii class a)))))
Flashings: exist(flashing)
shall: obligation
Overlaps and upstands to flashings: has(flashing, or(overlap, upstand))
shall be as specified: as per(overlap and upstand, nzbc e2as1 t7)
Target: if(exist(flashing)), then(obligation(as per(or(flashing.overlap, flashing.upstand), nzbc e2as1 t7)))
Flashings at window and door heads: for( flashing, or( window head, door head))
shall: obligation
Overlap cover of cladding to the flashing upstand: has( flashing, upstand), above( flashing, cladding), in between( overlap cover, and( cladding, upstand))
clearance from the bottom of the cladding to top of head flashing slope: has( cladding, bottom), has( flashing. head, slope), has( slope, top), in between( clearance, and( bottom, top))
shall be in accordance with Table 7: as per( overlap cover, nzbc e2as1 t7), as per( clearance, nzbc e2as1 t7)
Target: if( for( flashing, or( window head, door head))), then( obligation( and( has( flashing, upstand), above( flashing, cladding), in between( overlap cover, and( cladding, upstand)), has( cladding, bottom), has( flashing. head, slope), has( slope, top), in between( clearance, and( bottom, top)), as per( overlap cover, nzbc e2as1 t7), as per( clearance, nzbc e2as1 t7))))
Change in metal roof pitches: for( flashing, change in pitch)
shall: obligation
minimum effective lap under roof cladding: has( flashing, lap)
lap under roof cladding: below( lap, roof cladding)
in accordance with Table 7: as per( lap, nzbc e2as1 t7)
with a hem at upper edge: has( lap, hem)
hem at upper edge: top of( lap, hem)

Target: if( for( flashing, change in pitch)), then( obligation( and( has( flashing, lap), below( lap, roof cladding), as per( lap, nzbc e2as1 t7), top of( lap, hem))))
Profiled Metal Roof Cladding: is( roof cladding. type, profiled metal)
Fixings shall: obligation
Be fixed through crests: through( fixing. location, crest)
Penetrate purlins by a minimum of 40 mm for nail fixings: and( greater than equal( nail fixing. penetration, 40 mm), through( nail fixing, purlin))
Penetrate purlins by a minimum of 30 mm for screw fixings: and( greater than equal( screw fixing. penetration, 30 mm), through( screw fixing, purlin))
Include sealing washers of neoprene: include( fixing, sealing washer)
neoprene with carbon black content of 15% or less by weight: and( is( sealing washer. material, neoprene), less than equal( neoprene. carbon black content, 15 percent))
Target: if( is( roof cladding. type, profiled metal)), then( obligation( and( through( fixing. location, crest), and( greater than equal( nail fixing. penetration, 40 mm), through( nail fixing, purlin)), and( greater than equal( screw fixing. penetration, 30 mm), through( screw fixing, purlin)), and( include( fixing, sealing washer), is( sealing washer. material, neoprene), less than equal( neoprene. carbon black content, 15 percent)))))
Bottom of wall claddings for concrete ground slabs: has( wall cladding. bottom, concrete ground slab)
except masonry veneer: not( is( wall cladding. type, masonry veneer))
At concrete slab level: is( wall cladding. bottom, concrete slab level)
shall: obligation
the base of the cladding system shall be as shown in Table 18: as per( wall cladding. base, nzbc e2as1 t18)
Finish a minimum of 100 mm above a paved surface: greater than equal( wall cladding. finish, 100 mm)
Finish a minimum of 175 mm above finished unpaved surface: greater than equal( wall cladding. finish, 175 mm)
Overlap the concrete slab by 50 mm: greater than equal( wall cladding. overlap, 50 mm)
Be offset horizontally by a minimum of 6 mm for direct fixed claddings: greater than equal( wall cladding. offset, 6 mm)
to prevent capillary action: for( wall cladding. offset, capillary action)
Target: if( and( has( wall cladding. bottom, concrete ground slab), not( is( wall cladding. type, masonry veneer)), is( wall cladding. bottom, concrete slab level))), then( obligation( and( as per( wall cladding. base, nzbc e2as1 t18), or( greater than equal( wall cladding. finish, 100 mm), greater than equal( wall cladding. finish, 175 mm)), greater than equal( wall cladding. overlap, 50 mm), and( is( wall cladding. type, direct fixed), greater than equal( wall cladding. offset, 6 mm), for( wall cladding. offset, capillary action)))))
All gully traps: exist( gully trap)
shall: obligation
Wastepipes that discharge to the gullytrap: has( wastepipe, discharge)
discharge to the gullytrap: towards( discharge, gully trap)
arranged to permit easy cleaning of the gullytrap: is( discharge arrangement, easy cleaning)
easy cleaning of the gullytrap: for( easy cleaning, gully trap)
Target: if( exist( gully trap)), then( obligation( and( has( wastepipe, discharge), towards( discharge, gully trap), is( discharge arrangement, easy cleaning), for( easy cleaning, gully trap))))
All gully traps: exist( gully trap)
shall: obligation
gully traps have water seal: has( gully trap, water seal)
top of the water seal: define( top of( water seal), x0)
top of the gully dish: define( top of( gully dish), x1)
no more than 600 mm below: less than equal( 'x1 - x0', 600 mm)
Target: if( exist( gully trap)), then( obligation( and( has( gully trap, water seal), define( top of( water seal), x0), define( top of( gully dish), x1), less than equal( 'x1 - x0', 600 mm))))
Metal cappings installed over parapets and enclosed balustrades: and( is( capping. material, metal), above( capping. installation, or( parapet, balustrade)), is( balustrade, enclosed))
shall: obligation
both ends of a capping are constrained: loop( for each( capping. end), is( capping. end, constrained))
allowance shall be made for expansion: has( capping, expansion allowance)
Target: if( and( is( capping. material, metal), above( capping. installation, or( parapet, balustrade)), is( balustrade, enclosed), loop( for each( capping. end), is( capping. end, constrained)))), then( obligation( has( capping, expansion allowance)))
Fire safety system types: has( firecell, fire safety system)
risk group VP: is( firecell. risk group, vp)
shall: obligation
as specified in: as per
Table 2.2d: nzbc cas2 t2.2.d
Target: if( is( firecell. risk group, vp)), then( obligation( as per( firecell. fire safety system, nzbc cas2 t2.2.d)))
Reconstituted wood products: is( material. type, reconstituted wood)
shall: obligation
maximum moisture content: has( material, moisture content)
18% at all times: equal( moisture content, 18 percent)
Target: if( is( material. type, reconstituted wood)), then( obligation( equal( material. moisture content, 18 percent)))
Timber moisture content: has( timber, moisture content)
Measurement shall be by the recommended procedure: as per( moisture content. measurement, scion publication)
using electrical resistance type moisture meters: by( moisture content. measurement, moisture meter)
moisture meters with insulated probes: has( moisture meter, insulated probe)
Representative samplings of measurements shall be taken: define( moisture content. measurement, x0)
meters calibrated to AS/NZS 1080.1 Appendix E: as per( moisture meter. calibration, 'nzs 1080 1 appendix e')
inserting probes to at least 1/3 the depth of timber: greater than equal( probe. insertion depth, '1/3 * timber. depth')
at a distance exceeding 200 mm from board ends: greater than( probe. distance from end, 200 mm)
Using correction factors for timber species, temperature, and treatment type: include( moisture content. measurement, correction factor)
correction factors (outlined in Scion publication above): as per( correction factor, scion publication)

Target: if( has( timber, moisture content)), then( obligation( and( as per( moisture content. measurement, scion publication), by( moisture content. measurement, moisture meter), has( moisture meter, insulated probe), define( moisture content. measurement, x0), as per( moisture meter. calibration, 'nzs 1080 1 appendix e'), greater than equal( probe. insertion depth, '1/3 * timber. depth'), greater than( probe. distance from end, 200 mm), include( moisture content. measurement, correction factor), as per( correction factor, scion publication))))
