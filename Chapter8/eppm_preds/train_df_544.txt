if( is( space. occupancy, occupied)), then( obligation( and( has( space, window or opening), greater than equal( window or opening. area, 0.05 * space. floor area))))
if( and( has( fence, purpose), is( fence. purpose, security), towards( fence. access, storage and treatment facilities))), then( obligation( comply with( fence, nzbc f5as1)))
if( and( for( disposal system, industrial liquid waste), is( disposal system. disposal method, discharge), accept( network utility operator, discharge), has( industrial liquid waste, treatment))), then( obligation( comply with( disposal system, nzbc g13as2)))
if( has( building, activity)), then( obligation( and( calculate( occupant load, based on( activity. floor area, nzbc cas2 t1.2)), as per( activity, nzbc cas2 t1.2))))
if( exist( building)), then( obligation( and( avoid( duplication), by( counting, people), only( once))))
if( has( building, fixed seating)), then( obligation( and( assess( building. occupant load), as per( occupant load, nzbc cas2 3.7.4), if( and( has( additional floor area, abutment), not( obstructed( escape route))), additional( occupant load, standing space density), as per( standing space density, nzbc cas2 t1.2)))))
if( or( is( building. risk group, or( sm, si)), is( firecell. risk group, or( sm, si)))), then( not( require( additional calculations)))
if( and( has( situation, occupant load), greater than( derived( occupant load, nzbc cas2 t1.2), actual( occupant load))), then( obligation( substantiate( proposal, building consent authority)))
if( greater than( building. occupant load, as per( building, nzbc cas2 t1.2))), then( obligation( and( use( higher number, as basis), justify( higher number, to( building consent authority)))))
if( exist( firecell)), then( obligation( and( less than equal( firecell. area, value), as per( value, nzbc cas2 t2.1))))
if( is( building. risk group, sh)), then( apply to( nzbc cas2, and( building, nzbc cas1)))
if( is( building. type, backcountry hut)), then( obligation( refer to( nzbc bchas1)))
if( is( building. risk group, not( sh))), then( apply to( nzbc cas2))
if( is( building. activity, sleep), or( is( building. risk group, sm), and( has( building, part), is( part. activity, sleep), is( part. risk group, sm)))), then( apply to( nzbc cas2, and( building, part)))
if( or( is( building. activity, or( congregation, group activity, professional services, retail)), is( building. risk group, ca), and( has( building, part), or( is( part. activity, or( congregation, group activity, professional services, retail)), is( part. risk group, ca))))), then( apply to( nzbc cas2, and( building, part)))
if( is( building. activity, work) and is( building. risk group, wb)), then( apply to( nzbc cas2, building))
if( and( is( building. activity, storage), is( building. risk group, ws))), then( apply to( nzbc cas2, and( building, part)))
if( is( building. activity, vp)), then( apply to( nzbc cas2, and( building, part)))
if( and( has( building, firecell), has( firecell, multiple risk groups))), then( obligation( and( define( firecell. primary risk group, x0), for each( risk group), if( is( risk group, onerous)), then( set( x0, risk group))), is( firecell. risk group, x0)))
if( and( is( element, primary), integral( element, fire separation))), then( obligation( greater than equal( element. frr, fire separation. frr)))
if( exist( escape route)), then( obligation( and( is( escape route. component, or( open path, exitway, final exit)), in ascending order( escape route. component), as per( escape route. component, nzbc cas2 f3.1), at least( escape route. component, 2))))
if( exist( exitway)), then( obligation( and( is( exitway, or( smoke lobby, safe path)), as per( exitway, nzbc cas2 3.1.2))))
if( and( is( escape route, open path), is( escape route, final exit)), then( obligation( less than equal( escape route. length, as per( escape route, nzbc cas2 t3.2)))))
if( exist( occupied space)), then( obligation( and( has( occupied space, escape route), greater than equal( count( escape route), 2), as per( escape route, nzbc cas2 3.13))))
if( exist( water supply system)), then( obligation( and( not( has( water supply system. component, contamination)), towards( contamination, potable water))))
if( has( water supply system, pipe), then( obligation( comply with( pipe. material, nzbc g12as1 t1)))
if( is( water tank. location, roof space)), then( obligation( as per( water tank. support, nzbc g12as1 f4)))
if( has( water supply system, potable water tank)), then( obligation( and( has( potable water tank, cover), prevent( contamination, potable water tank), prevent( entry of vermin, potable water tank))))
if( is( water tank. cover, or( removable, covered opening))), then( obligation( and( has( water tank, access), greater than equal( access. height clearance, 350 mm))))
if( and( is( water tank. capacity, less than equal to( 150 litre)), less than equal( water tank. height to breadth ratio, 1:1))), then( obligation( as per( water tank. support method, nzbc g12as1 f4)))
if( exist( pipe)), then( obligation( or( and( towards( pipe. flow rate, nzbc g12as1 t3), is( pipe. size, as per( pipe. flow rate, nzbc g12as1 t3))), and( is( pipe. size, as per( pipe, nzbc g12as1 t4))))))
if( exist( water heater)), then( obligation( comply with( water heater, nzbc g12as1 t5)))
if( is( water heater. type, storage)), then( obligation( and( has( water heater, cold water supply), less than equal( cold water supply. pressure, water heater. working pressure), or( is( cold water supply, water tank), is( cold water supply, pressure reducing valve), is( cold water supply, pressure limiting valve), is( cold water supply, mains pressure supply)))))
if( and( is( water heater. type, storage), not( is( water heater. supply, tank))), then( obligation( and( has( water heater, non-return valve), as per( non-return valve, and( nzbc g12as1 f7, nzbc g12as1 f8, nzbc g12as1 f9, nzbc g12as1 f10)), prevent( water heater. emptying, hot water flowing), towards( hot water, cold water taps))))
if( or( is( water heater. type, electric), is( water heater. type, gas)), has( water heater, thermostat)), then( obligation( control( water heater. temperature, thermostat)))
if( is( water heater system. type, valve vented), or( is( water heater system. type, unvented))), then( obligation( and( has( water heater system, expansion control valve), has( water heater system, vacuum relief valve), comply with( water heater system. valves, nzbc g12as1 t6))))
if( is( water heater. type, free outlet), then( obligation( has( water heater, relief valve))))
if( exists( potable water supply system)), then( obligation( has( potable water supply system, backflow protection)))
if( exist( backflow prevention device)), then( obligation( test( device, effective performance)))
if( has( water supply system, backflow protection), is( backflow protection. type, air gap)), then( obligation( and( greater than equal( overflow pipe. flow rate, inlet pipe. flow rate), towards( overflow pipe. discharge, air gap))))
if( or( has( fixture, multiple supply pipes), has( tank, multiple supply pipes))), then( obligation( and( greater than equal( air gap separation, 25 mm), greater than equal( air gap separation, multiply( 2, sum( inlet pipe. diameter))), comply with( air gap separation, nzbc g12as1 3.5.2))))
if( has( backflow prevention device, pressure type vacuum breaker)), then( obligation( comply with( device. manufacture, as/nzs 2845.1 section 9), as per( device. manufacture, nzbc g12as1 f2c)))
if( has( backflow prevention device, atmospheric vacuum breaker)), then( obligation( comply with( device, as/nzs 2845.1 section 4), as per( device, nzbc g12as1 f2(d))))
if( is( backflow prevention device. type, hose tap vacuum breaker)), then( obligation( comply with( backflow prevention device. manufacture, as/nzs 2845.1 section 5)))
if( has( water supply system, reduced pressure zone device)), then( obligation( and( test( device, as per( device, or( as 2845.3, nz backflow testing standard))))))
if( has( water supply system, double check valve)), then( obligation( and( test( double check valve, meeting requirements), as per( requirements, or( as 2845.3, nz backflow testing standard)))))
if( is( building. classification, community care)), then( obligation( and( has( cold water storage, greater than equal( 50 litres)), per( person, building))))
if( and( exist( fire and emergency new zealand), not( has( building, direct connection)), and( has( building, automatic detection system))), then( not( apply to( nzbc cas2, building)))
if( and( is( building. type, early childhood centre), is( building. storey, single), has( building, dedicated sleeping area))), then( obligation( and( has( sleeping area, supplementary smoke detector), comply with( alarm system, nzs 4512), comply with( smoke detection system, nzs 4512))))
if( and( is( building. type, early childhood centre), greater than( building. escape height, 2.0 m))), then( obligation( has( building, fire safety system), is( fire safety system. type, type 7), throughout( building)))
if( is( building. type, early childhood centre)), then( obligation( and( if( not( is( building. location, ground floor)), has( building, place of safety), greater than equal( count( place of safety), 2)), for each( place of safety), and( is( place of safety, separated), by( separation, fire), is( separation. rating, property), has( separation, access), to( access, safe path), to( access, final exit)))))
if( and( is( firecell. risk group, vp), requires( firecell, fire sprinkler system), is( firecell. fire separation, adjacent))), then( obligation( and( greater than equal( fire separation. rating, adjacent firecells. rating), as per( fire separation. rating, nzbc cas2 t2.4), not( extend( fire sprinkler system, remainder of building)))))
if( and( not( need( fire separation, between( risk group))), same( floor level), is( firecell. risk group, primary)), then( apply( fire safety systems, firecell))
if( exist( building), then( obligation( configure( alarm system, to alert( all occupants), in case of( fire)))))
if( exist( risk group)), then( obligation( as per( risk group. fire resistance rating, nzbc cas2 t2.4)))
if( and( is( building. storey, single), not( requires( structural element, frr))), then( not( apply to( nzbc cas2, structural element)))
if( is( water heater. type, open vented storage)), then( obligation( comply with( vent pipe, and( nzbc g12as1 6.8.2, nzbc g12as1 6.8.3))))
if( exist( water heater)), then( obligation( comply with( water heater. installation, manufacturer's instructions)))
if( and( has( hot water supply, storage water heater), to( hot water supply, sanitary fixture))), then( obligation( greater than equal( hot water supply. diameter, value), as per( value, nzbc g12as1 t4)))
if( is( water heater. type, wet-back)), then( obligation( and( or( is( water heater. connection, open vented storage), is( water heater. connection, water storage vessel)), is( water heater. material, copper))))
if( exist( wet-back water heater)), then( obligation( has( pipework. material, copper), between( wet-back, water tank)))
if( exist( storage water heater)), then( obligation( and( is( storage water heater. control thermostat, set), greater than equal( thermostat. temperature, 60 deg C), to( prevent, legionella bacteria))))
if( is( drain. type, or( stormwater, wastewater)), then( obligation( and( is( joint, watertight), prevent( joint. infiltration, groundwater), prevent( joint. intrusion, tree roots))))
if( is( drain. type, or( surface water, foul water)), then( obligation( and( as per( drain. jointing method, nzbc e1as1 t3), test( drain. jointing, as per( nzbc e1as1 3.8))))))
if( and( is( water. type, surface), not( collected( water, roof))), then( obligation( has( water, sump)))
if( has( surface water inlet, drain), then( obligation( and( has( sump, surface water inlet), has( sump, grating), or( is( grating, hinged), is( grating, removable)), greater than equal( grating. opening percentage, 35%), less than equal( grating. opening size, 35 mm), as per( grating, nzbc e1as1 3.6))))
if( has( surface water inlet, drain), then( obligation( and( has( sump, surface water inlet), has( sump, capacity), for( capacity, bottom), allow( capacity, settlement), of( settlement, silt), of( settlement, debris))))
if( has( surface water inlet, drain), then( obligation( and( has( sump, surface water inlet), has( sump, outlet), is( outlet. type, submerged), or( is( outlet. type, trapped), not( has( outlet, floatable solids))))))
if( exist( drain)), then( obligation( has( drain, access for maintenance)))
if( has( access point, rodding)), then( obligation( and( less than equal( distance( access point), 50 m), as per( distance, nzbc e1as1 3.7.2a))))
if( or( has( point of access, inspection point), has( point of access, inspection chamber), has( point of access, access chamber))), then( obligation( less than equal( distance between( point of access), 100 m)))
if( has( drain, point of access)), then( obligation( and( is( access point, required), for( access point, and( change in direction, greater than( 45 deg))))))
if( has( drain, change in gradient)), then( obligation( and( greater than( gradient. angle, 45 deg), has( drain, point of access))))
if( and( is( drain. type, other than single downpipe), greater than( drain. length, 2.0 m), has( drain, junction)), then( obligation( has( drain, point of access)))
if( and( is( drain. depth, greater than 1.0 m), not( is( drain. type, inspection chamber))), then( obligation( use( access chamber, for( drain, access))))
if( exist( drain), below( drain, building)), then( obligation( is( drain. layout, straight line)))
if( is( drain. location, under building)), then( obligation( and( has( inlet, roof-water downpipe), is( inlet, sealed))))
if( exist( circulating system)), then( obligation( greater than equal( circulating system. water temperature, 60 deg C)))
if( exist( water supply system)), then( obligation( comply with( water supply system, nzbc b2 durability requirements)))
if( exist( pipe)), then( obligation( and( is( pipe. material, compatible), with( pipe. support))))
if( is( water supply system. pipe material, upvc)), then( obligation( comply with( water supply system. pipe installation, nzs 7643)))
if( and( less than equal( building. catchment area, 0.25 hectares), not( has( building, history of flooding)), not( adjacent( building, watercourse)), not( is( building. location, low lying)), not( is( building. location, secondary flow path)))), then( apply to( nzbc e1as1, building))
if( or( is( floor. type, suspended), is( floor. type, slab on ground)), and( is( site. level, or( above, same)), as per( site. level, road)), then( obligation( greater than equal( floor. height, 150 mm))))
if( or( is( floor. type, suspended), is( floor. type, slab on ground)), below( site, road)), then( obligation( greater than equal( floor. height, 150 mm), above( floor. height, lowest point. site boundary), as per( lowest point. site boundary, nzbc e1as1 f2)))
if( exist( pipe)), then( obligation( comply with( pipe. material, as per( nzbc e1as1 t1))))
if( has( area, being drained)), then( define( modified catchment area, 0.01 times( area)), as per( modified catchment area, nzbc e1as1 f3)))
if( exist( drain)), then( obligation( and( is( drain. layout, uniform), is( drain. gradient, between( access points)), as per( access points, nzbc e1as1 3.7))))
if( exist( drain)), then( obligation( and( is( drain. change in direction, less than equal to( 90 deg)), at( point, drain))))
if( exist( drain)), then( obligation( and( is( drain. change in direction, less than 45 deg), as per( drain. change in direction, nzbc e1as1 f4))))
if( and( has( drain, intersection), towards( drain. flow, intersection), is( intersection. angle, less than equal( 60 deg))), then( obligation( as per( intersection. flow direction, nzbc e1as1 f5))))
if( and( is( drainage system. type, surface water), has( drainage system, outlet), less than( gradient, as per( nzbc e1as1 t2))), then( obligation( use( bubble-up chamber system, as per( nzbc e1as1 f6, nzbc e1as1 f7))))
if( has( downpipe, bubble-up chamber)), then( obligation( greater than equal( ground level. adjacent, and( outlet, 150 mm)), towards( outlet, chamber)))
if( is( drainage system. type, bubble-up chamber)), then( obligation( has( drainage system, sealed connection), between( connection, and( drain, downpipes)), as per( connection, nzbc e1as1 f6, nzbc e1as1 f7)))
if( has( device, or( electric thermostat, energy cut-off)), comply with( device, or( nzs 6214, as 1308)))
if( has( energy cut-off device, design)), then( obligation( is( device. reset, manual)))
if( has( storage water heater, expansion control valve)), then( obligation( and( greater than equal( expansion control valve. pressure rating, water supply pressure), less than( expansion control valve. pressure rating, relief valve. pressure rating))))
if( exist( storage water heater)), then( obligation( and( has( pressure relief valve, location), towards( location, storage water heater), less than equal( distance, 1 m))))
if( and( has( building, component), is( component, or( downpipe, gutter, roofing, fastening))), then( obligation( and( is( component. material, same or compatible), with( component, eliminate( risk of galvanic corrosion)))))
if( has( downpipe, cross-sectional area)), then( obligation( or( comply with( downpipe. size, nzbc e1as1 t5), and( greater than equal( downpipe. cross-sectional area, value), as per( value, nzbc e1as1 t5)), has( downpipe, sphere passage), greater than equal( sphere passage. diameter, 50 mm))))
if( and( has( downpipe, thermal movement), not( can( accommodate( movement, guttering)))), then( obligation( has( downpipe, expansion joint)))
if( has( downpipe, internal)), then( obligation( or( withstand( downpipe, water test, 1.5 m), pass( downpipe, high pressure air test, nzbc e1vm1 8.3))))
if( has( roof, gutter)), then( obligation( and( has( gutter, discharge), is( discharge, downpipe), comply with( downpipe. size, nzbc e1as1 4.2))))
if( is( gutter, roof)), then( obligation( greater than equal( gutter. cross-sectional area, 4000 mm2)))
if( has( roof, gutter)), then( obligation( comply with( gutter. material, nzbc e1as1 t6)))
if( has( roof, gutter)), then( obligation( towards( gutter, outlet)))
if( is( gutter. location, internal)), then( obligation( and( has( gutter, overflow outlet), towards( overflow outlet. drainage, exterior), define( outlet. top, x0), below( x0, gutter. top), less than equal( distance( x0, gutter. top), 50 mm))))
if( is( gutter. location, external)), then( obligation( and( not( has( gutter, overflow outlet)), towards( gutter. overflow, outside of building))))
if( is( slab. type, on-ground)), then( obligation( and( extend( slab. reinforcing, within 75 mm), is( reinforcing. type, welded), is( reinforcing. grade, 500e), is( reinforcing. weight, 2.27 kg/m2), is( reinforcing. lap, sheet joints), greater than equal( lap. overlap, or( add( lap. spacing of cross wires, 50 mm), 150 mm, manufacturer's requirements)), less than equal( slab. dimension, 18 m), as per( slab, nzbc b1as1)))
if( is( structure. material, timber)), then( obligation( comply with( timber design, nzs 3604)))
if( is( location, christchurch city council)), then( is( location. zone, 2))
if( exist( building)), then( obligation( and( follow( manufacturer. maintenance recommendations), wash( surface), recoat( protective finish), replace( sealant, seal, gasket), replace( valve, washer, high wear component), clean( filter), service( boiler, cooling tower, lift, escalator, emergency lighting, fire protection equipment), maintain( sign))))
if( has( building element, compliance schedule)), then( obligation( and( is( maintenance, scheduled), includes( maintenance, inspection), includes( maintenance, reporting), includes( maintenance, total replacement))))
if( is( building element. material, steel)), then( obligation( comply with( building element, snz ts 3404)))
if( exist( building. structure)), then( obligation( comply with( building. structure, nzbc b1as1)))
if( is( chimney. size, small)), then( obligation( apply to( nzbc b1as1, and( structure design, nzbc b1as1 8.0))))
if( and( is( drain. location, under building), has( drain, inlet), has( downpipe, access point), is( access point. location, immediately above ground floor level), is( access point. seal, sealed))), then( obligation( has( drain, access)))
if( is( drain. type, surface water)), then( obligation( pass( drain, test), as per( test, nzbc e1vm1 8.0)))
if( has( drainage pipe, listed in( nzbc e1as1 t1))), then( obligation( and( as per( bedding and backfilling, nzbc e1as1 f13), not( in( trench, peat)), not( likely( scouring, trench, unstable soils)), less than equal( cover, 2.5 m))))
if( and( is( trench. slope, greater than equal(1:8)), has( trench, anti-scour blocks))), then( obligation( provide( anti-scour blocks)))
if( has( anti-scour block, construction)), then( obligation( and( is( construction. material, concrete), is( concrete. thickness, 150 mm), is( concrete. strength, 17 MPa))))
if( and( is( drain. type, trench), has( drain, anti-scour blocks), less than( drain. cover height, 300 mm))), then( obligation( extend( anti-scour blocks, ground level)))
if( is( trench. slope, between( 1 in 8, 1 in 5))), then( obligation( and( has( anti-scour block, spacing), equal( spacing. distance, 7.5 m))))
if( is( trench. slope, greater than( 1 in 5))), then( obligation( and( has( anti-scour block, spacing), equal( spacing. distance, 5.0 m))))
if( has( trench, width)), then( obligation( and( greater than equal( trench. width, add( pipe. diameter, 200 mm)), less than equal( trench. width, or( 600 mm, and( is( pipe. covered, concrete), as per( pipe. cover, nzbc e1as1 f13c))))))
if( is( fill material, acceptable)), then( obligation( and( is( material, clean granular non-cohesive), less than equal( material. max particle size, 20 mm), as per( material, nzbc e1as1 f13), has( material, bedding))))
if( is( fill material, ordinary)), then( as per( fill material, nzbc e1as1 f13))
if( is( trench. type, granular bedding or selected fill)), then( obligation( and( in layers( trench. material, 100 mm), loose thickness), compact( trench. material))))
if( is( downpipe. material, unspecified)), then( obligation( comply with( downpipe, nzbc e1as1 t4)))
if( and( has( foundation, supporting), is( supporting. cladding, masonry veneer))), then( as per( foundation, and( nzbc b1as1 f7.15(b), or( nzbc b1as1 f7.16(b), nzbc b1as1 f7.16(c)))))
if( is( joint, free)), then( obligation( and( terminate( slab reinforcement), not( bond( vertical concrete faces)), by( prevention, either( building paper, bituminous coating)))))
if( is( building. structure, earth)), then( obligation( comply with( building. structure, nzs 4299)))
if( and( is( foundation. type, single storey), is( foundation. material, masonry), is( masonry. series, 15)), then( obligation( greater than equal( footing. width, 190 mm))))
if( is( floor. type, slab-on-ground)), then( obligation( and( comply with( floor. reinforcement, and( nzbc b1as1 7.5.8.3, nzbc b1as1 7.5.8.4, nzbc b1as1 7.5.8.6.4)), has( reinforcement. steel, ductility class e), as per( reinforcement. steel, nzs 4671))))
if( is( welded steel mesh. grade, 500e)), then( obligation( comply with( welded steel mesh, nzbc b1vm1 14)))
if( and( is( barrier. type, laminated safety glass), or( is( barrier. glass type, heat-strengthened), is( barrier. glass type, toughened))), and( or( has( barrier, top capping), has( barrier, corner brackets), has( barrier, proprietary system))), and( will( barrier, resist( concentrated load, 0.2 kn))), and( not( deflect( barrier, more than, 250 mm)))), then( not( require( interlinking rails)))
if( is( barrier. type, glass)), then( obligation( and( test( barrier, all components), apply( load, horizontally), measure( deflection, at( barrier. height, midspan)), define( load. area, x0), is( x0.size, 100 mm x 100 mm), apply( concentrated load, over( x0)), for( at least, 1 minute))))
if( is( barrier. material, glass)), then( obligation( and( not( has( barrier. connection, standard design)), has( barrier. connection, specific design))))
if( or( is( wall cladding. material, or( masonry veneer, stucco, timber weatherboards, fibre cement weatherboards, profiled metal, fibre cement sheet, plywood sheet, eifs)), not( is( wall cladding. material, other))), then( apply to( nzbc e2as1, wall cladding))
if( and( is( cladding. risk score, 3.4.1.1), is( cladding. face score, low)), then( obligation( or( and( is( cladding. type, direct fixed), is( cladding. material, timber weatherboards)), and( is( cladding. type, direct fixed), is( cladding. material, fibre cement weatherboards)), and( is( cladding. type, direct fixed), is( cladding. material, vertical profiled metal), is( metal. type, or( corrugated, symmetrical trapezoidal))), and( is( cladding. type, direct fixed), is( cladding. material, fibre cement sheet), not( is( fibre cement sheet. finish, flush))), and( is( cladding. type, direct fixed), is( cladding. material, plywood sheet))))
if( and( is( material. location, wet), or( is( material. location, flow path), is( material. type, metal), or( is( material. type, plastic), and( is( material, certain), is( material. type, metal))))), then( obligation( and( comply with( material, or( nzbc e2as1 t21, nzbc e2as1 t22)))))
if( has( flashing, material)), then( obligation( as per( flashing. material, and( nzbc e2as1 t20, nzbc e2as1 t21, nzbc e2as1 t22))))
if( and( is( flashing. material, upvc), is( flashing. exposure, weather)), then( obligation( comply with( flashing, as/nzs 4256: part 2 section 8))))
if( is( flashing. material, upvc)), then( obligation( and( has( flashing, finish colour), greater than equal( reflectance, 40%), as per( reflectance, nzbc e2as1 2.4))))
if( is( flashing. material, stainless steel)), then( obligation( and( greater than equal( flashing. thickness, 0.45 mm), comply with( flashing. grade, iso/ts 15510 table 1), is( flashing. grade, or( 304, 316)))))
if( is( flashing. material, copper)), then( obligation( and( greater than equal( copper. thickness, 0.5 mm), comply with( copper, as 1566), is( copper. alloy, or( c11000, c12200)))))
if( is( flashing. material, lead)), then( obligation( and( comply with( flashing. material, as 1804), greater than equal( flashing. unit mass, 17 kg/m2))))
if( is( flashing. material, butyl rubber)), then( obligation( comply with( flashing, and( nzbc e2as1 t20, nzbc e2as1 t21, nzbc e2as1 t22))))
if( has( flashing. material, or( butyl rubber, epdm))), then( obligation( and( greater than equal( flashing. thickness, 1.0 mm), comply with( flashing, and( nzbc e2as1 t1, astm d6134), has( flashing, tensile strength), has( flashing, elongation), has( flashing, water absorption), has( flashing, water vapour permeance), has( flashing, heat aging), has( heat aging, tensile strength), has( heat aging, elongation)))))
if( is( flashing. material, bitumen-impregnated)), then( obligation( and( comply with( flashing. material, as/nzs 2904), is( flashing. application, fully concealed))))
if( is( building. entrance, principal), then( obligation( provide( accessible route))))
if( not( is( route. practical, principal entrance)), then( obligation( use( alternative route, space served))))
if( and( is( building. type, community service), has( building, accessible unit)), then( obligation( and( connect( accessible unit, reception area), connect( accessible unit, office), connect( accessible unit, shop), connect( accessible unit, dining room), connect( accessible unit, kitchen), connect( accessible unit, laundry), connect( accessible unit, ablution block), connect( accessible unit, recreation room), connect( accessible unit, communal facility))))
if( is( building. accessibility, for people with disabilities)), then( as per( building. approach, nzbc d1as1 f1))
if( and( is( access route, part of escape route)), then( obligation( comply with( access route, nzbc c4)))
if( has( access route, slope)), then( obligation( and( is( slope. direction, towards travel), as per( slope, nzbc d1as1 f2))))
if( has( access route, height clearance)), then( obligation( and( comply with( clearance, nzbc d1 t1), as per( clearance, nzbc d1 f3))))
if( is( garage, attached), is( garage. integration, integral), is( garage. envelope, weathertightness)), then( apply to( nzbc e2as1, garage))
if( is( building. type, outbuilding), and( is( building. lining, unlined))), then( not( apply to( nzbc e2as1, building)))
if( is( wall cladding. system, or( masonry veneer, stucco, timber weatherboards, fibre cement weatherboards, profiled metal wall claddings, fibre cement sheet, plywood sheet, eifs))), then( apply to( nzbc e2as1, wall cladding))
if( is( design. element, structure), has( structure, drain)), then( obligation( comply with( drain. design, and( nzs 2566.1, nzs 2566.2, nzs 2032, nzs 2033))))
if( is( glass. type, structural balustrade), is( glass. design, cantilevered)), then( obligation( comply with( glass. design, nzbc b1as1 t14)))
if( is( glass. type, structural balustrade), is( glass. fixing, two-edge point fixed)), then( obligation( comply with( glass. design, nzbc b1as1 t15)))
if( is( glass. type, structural balustrade), has( glass, three-edge support)), then( obligation( comply with( glass. design, nzs 4223.3 t17)))
if( and( is( barrier. type, structural glass), safeguards( fall, greater than equal( 1000 mm))), then( obligation( has( barrier, interlinking rails)))
if( has( rail, glass pane)), then( obligation( and( is( rail. height, required barrier height), resists( rail. load, and( line design load, concentrated design load)), as per( rail. load, or( nzbc b1as1 t14, nzbc b1as1 t15, nzbc b1as1 t16, nzbc b1as1 t17)), not( deflect( rail, more than 100 mm)), in any direction, under( rail. load, design load))))
if( and( is( capping. material, metal), above( capping. installation, or( parapet, balustrade)), is( balustrade, enclosed))), then( obligation( and( has( capping, expansion joint), as per( expansion joint, nzbc e2as1 f9.g), has( expansion joint, lap), greater than equal( lap. size, 200 mm), has( lap, sliding clip), at( sliding clip, both sides))))
if( is( capping. type, membrane), is( capping. material, or( butyl rubber, epdm))), then( obligation( and( as per( capping, nzbc e2as1 4.3.9), define( top of( capping), x0), not( has( x0, penetration)), greater than equal( x0.slope, 10 deg))))
if( and( is( capping. material, or( butyl rubber, epdm)), has( capping, joint)), then( obligation( as per( joint, nzbc e2as1 8.5.5.2)))
if( is( junction. type, slatted timber deck to wall)), then( obligation( and( is( junction, weathertight), as per( junction, and( nzbc e2as1 7.2.1, nzbc e2as1 f15, nzbc e2as1 f16)))))
if( is( tile. profile, type i)), then( obligation( and( is( tile, double profile), has( tile, watercourse), is( watercourse. depth, greater than equal( 18 mm)))))
if( is( tile. profile, type iii)), then( define( tile. category, or( flat, slate, shake, shingle)))
if( is( roof cladding. type, masonry tile)), then( obligation( and( comply with( cladding. installation, or( nzs 4206, as 2050)), has( roof cladding, minimum pitch), as per( minimum pitch, nzbc e2as1 t10), has( timber battens, treatment), is( timber battens. treatment, h1.2), has( roof cladding, battens), is( battens. material, timber), greater than equal( battens. thickness, value), as per( value, nzbc e2as1 t10))))
if( is( roof cladding. type, roof), then( obligation( and( comply with( fixing, nzs 4206), greater than equal( nail. penetration, 35 mm), as per( nail. penetration, nzbc e2as1 t10), as per( roof. pitch, nzbc e2as1 t10), as per( roof. underlay, nzbc e2as1 t23))))
if( is( corrosion zone, or( d, e)), for( fixing, corrosion zone)), then( obligation( and( is( fixing. material, stainless steel), is( stainless steel. grade, or( 304, 316)))))
if( is( roof cladding. material, masonry tiles)), then( obligation( and( comply with( dynamic weathertightness test, as 4046 part 9), less than equal( roof pitch, table 10), greater than equal( roof pitch, 15 deg))))
if( is( roof cladding. type, any), then( obligation( and( comply with( roof cladding, nzbc e2.2), as per( roof cladding, and( nzbc e2as1 8.1.2, nzbc e2as1 8.5)))))
if( is( roof cladding. system, or( masonry tiles, pressed metal tiles, profiled metal roof claddings, membrane roofing))), then( apply to( nzbc e2as1, roof cladding. system))
if( is( roof cladding. type, or( masonry tiles, pressed metal tiles, profiled metal roof claddings, membrane roofing))), then( apply to( nzbc e2as1, and( roof cladding, as per( roof cladding. type, and( paragraph 8.2, paragraph 8.3, paragraph 8.4, paragraph 8.5)))))
if( has( eave, projecting)), then( obligation( and( has( eave, soffit), has( eave, verge), is( soffit. closure, closed), is( verge. closure, closed))))
if( is( roof cladding. type, roof), then( obligation( and( as per( roof cladding, nzbc e2as1 8.2 to 8.5), if( has( roof cladding, flashing), select( fixing material, from( or( nzbc e2as1 t20, nzbc e2as1 t21, nzbc e2as1 t22)), to( minimise, corrosion))))))
if( has( roof, underlay)), then( obligation( and( comply with( underlay, and( nzbc e2as1 t23, nzs 2295)), or( is( underlay. type, r1 heavy weight kraft), is( underlay. type, r2 self supporting kraft)))))
if( has( roof, underlay)), then( obligation( and( is( underlay, laid with minimum laps), has( underlay, lap), greater than equal( lap. size, 150 mm), is( underlay. direction, or( horizontal, vertical)), if( is( roof. pitch, below 10 deg), is( underlay. direction, horizontal)), if( is( roof. pitch, above 10 deg), has( roof, anti-ponding board), as per( anti-ponding board, and( nzbc e2as1 f25(b), nzbc e2as1 8.2.5))))))
if( has( roof, water), then( obligation( and( has( gutter, roof water drainage), has( downpipe, roof water drainage), has( spreader, roof water drainage), has( eaves gutter, roof water drainage))))
if( has( roof, water drainage)), then( obligation( and( is( gutter. type, general), has( gutter, dimension), or( greater than equal( dimension, as per( nzbc e2as1, minimum dimensions)), greater than equal( dimension, as per( nzbc e1as1, calculated dimensions))))))
if( is( gutter. type, internal)), then( obligation( or( and( is( gutter. material, or( butyl, epdm)), comply with( strip, nzbc e2as1 4.3.9), not( has( gutter, cross-joint))), and( is( gutter. material, or( aluminium, copper, stainless steel, zinc sheet)), comply with( gutter, nzbc e2as1 4.3), has( gutter, welded joint)))))
if( is( gutter. type, internal)), then( obligation( and( or( is( gutter. material, butyl), is( gutter. material, epdm)), or( greater than equal( gutter. membrane thickness, 1.5 mm), and( less than( gutter. width, 1 m), greater than equal( gutter. membrane thickness, 1 mm))))))
if( is( gutter. type, internal)), then( obligation( greater than equal( gutter. slope, 1:100)))
if( is( gutter. type, internal), not( is( roof. type, membrane)), then( obligation( and( has( gutter, discharge), is( discharge. type, rainwater head), as per( discharge, nzbc e2as1 f63))))
if( is( gutter. type, hidden)), then( obligation( and( greater than equal( gutter. slope, 8 deg), not( has( gutter, discharge)), from( discharge, or( downpipe, spreader)))))
if( has( roof, penetration)), then( obligation( and( is( penetration, weathertight), as per( penetration, and( nzbc e2as1 8.2, nzbc e2as1 8.5)))))
if( has( flashing. material, metal)), then( obligation( comply with( flashing. fixing, and( nzbc e2as1 t20, nzbc e2as1 t21, nzbc e2as1 t22))))
if( exist( flashing)), then( obligation( as per( flashing. dimensions, nzbc e2as1)))
if( has( flashing, metal)), then( obligation( and( has( flashing, join), if( and( is( join. end, constrained), requires( join, expansion allowance)), then( define( join. allowance, x0), has( x0, expansion allowance), towards( x0, join))))))
if( requires( expansion joint)), then( obligation( and( has( joint, sliding clips), is( joint. lap, greater than equal( 200 mm)), as per( joint, nzbc e2as1 f6))))
if( and( has( flashing, material), is( flashing. material, or( uncoated galvanized steel, zinc, stainless steel, copper))), then( obligation( and( is( joint, or( riveted, soldered)), as per( joint, nz metal roof and wall cladding code of practice))))
if( has( flashing, notched turn-down)), then( obligation( and( has( flashing, gap), between( gap, and( flashing. edge, roof cladding. pan)), less than equal( gap. size, 5 mm))))
if( is( parapet. capping, and( stucco, eifs, flush-finished fibre cement))), then( not( apply to( nzbc e2as1, parapet. capping)))
if( is( roof. type, pressed metal tiles)), then( obligation( and( has( roof, flashing), not( at( flashing, gutter discharge)), as per( flashing, and( nzbc e2as1 f34, nzbc e2as1 f37)))))
if( and( is( roof cladding. type, pressed metal tiles), has( roof cladding, penetration)), then( obligation( and( is( penetration. type, pipe), has( penetration, flashing), is( flashing. material, epdm), is( flashing. type, similar to), as per( flashing. type, nzbc e2as1 f29))))
if( and( is( roof cladding. type, profiled metal), is( roof cladding. material, aluminium), is( aluminium. finish, pre-painted))), then( obligation( comply with( aluminium. finish, as/nzs 2728)))
if( is( roof cladding. type, profiled metal)), then( obligation( and( as per( profile, nzbc e2as1 f38), or( and( is( profile, corrugated), greater than equal( profile. crest height, 16.5 mm)), and( is( profile, trapezoidal), greater than equal( profile. crest height, 19 mm), or( and( is( profile, asymmetrical), less than equal( profile. pan width, 210 mm), greater than equal( profile. crest height, 19 mm)), and( is( profile, trough), greater than equal( profile. rib height, 38 mm), less than equal( profile. pan width, 210 mm)))))))
if( and( is( roof cladding. type, profiled metal), less than equal( roof. length, 18 m), not( has( roof, end laps))), then( obligation( or( and( is( roof cladding. profile, corrugated), greater than equal( roof. pitch, 8 deg)), and( is( roof cladding. profile, trapezoidal), or( and( less than equal( roof cladding. crest height, 27 mm), greater than equal( roof. pitch, 4 deg)), and( greater than( roof cladding. crest height, 27 mm), greater than equal( roof. pitch, 3 deg)))), and( is( roof cladding. profile, trough), greater than equal( roof. pitch, 3 deg)))))
if( is( roof cladding. material, steel)), then( obligation( comply with( roof cladding, and( or( nzbc e2as1 t11, nzbc e2as1 t12, nzbc e2as1 t13), and( nzbc e2as1 t14, nzbc e2as1 t15)))))
if( or( is( gutter. type, hidden), is( gutter. type, valley), is( gutter. type, internal))), then( obligation( as per( gutter, nzbc e2as1 8.1.6)))
if( is( gutter. type, parallel hidden)), then( obligation( as per( gutter, and( nzbc e2as1 f50, nzbc e2as1 8.1.6.2))))
if( and( is( roof cladding. type, profiled metal), has( roof cladding, penetration)), then( obligation( and( less than equal( length, table 17. maximum length), as per( length, nzbc e2as1 t17))))
if( and( is( roof cladding. type, profiled metal), has( roof cladding, penetration))), then( obligation( and( is( penetration, flashed), or( and( is( penetration. type, pipe), less than equal( penetration. diameter, 85 mm), has( penetration, epdm boot flashing), as per( epdm boot flashing, nzbc e2as1 f53)), and( is( penetration. type, pipe), less than equal( penetration. diameter, 500 mm), has( penetration, soaker flashing), has( penetration, epdm boot flashing), as per( soaker flashing, nzbc e2as1 f54)), and( is( penetration. type, rectangular), less than equal( penetration. width, 1200 mm), has( penetration, soaker type flashing), as per( soaker type flashing, nzbc e2as1 f55))))))
if( and( is( membrane. material, or( butyl, epdm)), above( membrane. installation, plywood substrate)), then( obligation( and( is( plywood substrate, dry), is( or( plywood substrate, timber substructure), less than equal( moisture content, 20%)), when( adhering( membrane, substrate)), as per( adhering, nzbc e2as1 8.5.5.1))))
if( is( roof. type, membrane)), then( obligation( and( has( roof, falls), as per( falls, nzbc e2as1 f56), as per( details, and( nzbc e2as1 f57, nzbc e2as1 f64)))))
if( and( is( roof. type, membrane), or( is( roof. type, deck), is( roof. type, membrane deck))), then( obligation( as per( roof. penetration, and( nzbc e2as1 f59, nzbc e2as1 f60))))
if( has( wall, cladding)), then( obligation( and( comply with( cladding, nzbc e2.3.2 to e2.3.7), as per( cladding, nzbc e2as1 9.1.1 to 9.9))))
if( is( wind zone, extra high), has( wall cladding, cladding), then( obligation( and( has( cladding, rigid underlay), as per( rigid underlay, nzbc e2as1 9.1.7.2), has( cladding, drained cavity), as per( drained cavity, nzbc e2as1 9.1.8), has( flashing, upstand), is( upstand. type, hook and hem), as per( upstand, nzbc e2as1 9.0))))
if( is( roof cladding. type, profiled metal), then( obligation( and( has( roof cladding, underlay), as per( underlay, nzbc e2as1 t23), as per( installation details, nzbc e2as1 8.1.5))))
if( and( is( roof cladding. type, profiled metal), is( roof cladding. profile, or( corrugated, trapezoidal))), then( obligation( and( as per( roof cladding. fixing, and( nzbc e2as1 t11, nzbc e2as1 t12, nzbc e2as1 t14, nzbc e2as1 t15)), is( fixing. type, screw), greater than equal( fixing. gauge, 12), as per( fixing. compliance, as 3566: part 2, class 4)))))
if( is( roof cladding. type, or( corrugated, trapezoidal))), then( obligation( and( has( roof cladding, expansion allowance), as per( expansion allowance, nzbc e2as1 t16))))
if( has( flashing, fixing)), then( obligation( and( use( fixing, screws), as per( screws, nzbc e2as1 8.4.8))))
if( and( is( flashing. material, or( galvanized steel, aluminium-zinc coated steel, aluminium)), for( flashing, fixing)), then( obligation( or( and( is( fixing. type, rivet), is( rivet. diameter, 4 mm), is( rivet. material, or( monel metal, stainless steel)), as per( rivet. compatibility, nzbc e2as1 t21)), and( is( fixing. type, rivet), is( rivet. diameter, 4 mm), is( rivet. material, aluminium)), and( is( fixing. type, rivet), is( rivet. diameter, 4 mm), is( rivet. material, aluminium))))))
if( and( is( roof cladding. type, profiled metal), has( roof cladding, fixing flashing), is( fixing flashing. type, c), has( fixing flashing, join)), then( obligation( and( as per( join, and( nzbc e2as1 4.5.2, nzbc e2as1 f6)), requires( join, expansion joint))))
if( and( is( roof cladding. type, profiled metal), has( roof cladding, turn-down), is( roof pitch, less than 10 deg))), then( obligation( and( is( turn-down. end, lower), is( turn-down. profile, or( trapezoidal, trough)), towards( turn-down, gutter), is( turn-down. angle, 30 deg))))
if( and( is( roof. type, masonry tile), has( roof, underlay)), then( obligation( and( has( roof, anti-ponding board), as per( anti-ponding board, nzbc e2as1 f25), greater than equal( anti-ponding board. fall, 5 deg), is( anti-ponding board. treatment, or( h1.2, h3))))))
if( is( tile. type, masonry)), then( obligation( and( has( tile, penetration), is( penetration. type, pipe), is( penetration. cutting method, machine-cut), less than( penetration. size, tile. size))))
if( is( roof. type, pressed metal tile)), then( apply to( nzbc e2as1, roof))
if( is( roof cladding. type, pressed metal tiles)), then( obligation( comply with( tiles and accessories, nzs 4217)))
if( and( is( roof cladding. type, pressed metal tiles), is( roof cladding. material, steel))), then( obligation( and( comply with( coating, as/nzs 2728), has( coating, factory-applied))))
if( and( is( roof cladding. type, pressed metal tiles), is( roof cladding. material, aluminium))), then( obligation( and( comply with( cladding. material, nzs 1734), greater than equal( aluminium. base metal thickness, 0.7 mm), is( aluminium. grade, 5000 series), is( aluminium. finish, pre-painted), comply with( aluminium. finish, nzs 2728))))
if( and( is( roof cladding. type, pressed metal tiles), greater than( rafter length, 12 m))), then( obligation( and( greater than equal( roof pitch, minimum pitch), define( additional pitch, divide( subtract( rafter length, 12 m), 0.5 m)), increase( minimum pitch, additional pitch, 1 deg))))
if( is( roof. type, metal tile)), then( obligation( and( has( roof, underlay), as per( underlay, nzbc e2as1 t23), as per( installation details, nzbc e2as1 8.1.5))))
if( is( roof. type, pressed metal tiles)), then( obligation( and( has( roof, fixing), is( fixing. location, top), has( fixing, neoprene washer), less than equal( washer. carbon black content, 15%))))
if( and( has( garage, space), within( building. envelope, garage), or( attached( building. envelope, garage))), then( obligation( and( has( opening, garage), greater than equal( total level change, 50 mm), towards( water, away from( opening. threshold)), has( wall, underlay), as per( underlay, nzbc e2as1 t23), where( wall, external, unlined), has( wall, lining), adjoining( wall, habitable space), has( garage, door), is( door. type, weather resisting), has( garage, window), as per( window, and( nzbc e2as1 9.2, nzbc e2as1 9.9)))))
if( exist( solar water heater), has( solar water heater, storage tank)), then( obligation( comply with( storage tank. devices, nzbc g12as1 6)))
if( exist( solar water heater), then( obligation( and( has( pressure relief valve, vent pipe), towards( vent pipe, drain point), is( drain point, suitable))))
if( exist( solar collector)), then( obligation( and( in between( angle, and( latitude, +/- 20 deg)), towards( collector. inclination, angle), satisfy( inclination, nzbc h1.3.4(a)))))
if( and( exist( water heater), exist( solar collector)), then( obligation( and( has( water heater, wetback), independent( water pipe circuit, for( heat source, or( water heater, solar collector))))))
if( and( is( roof. material, masonry tile), has( roof, penetration))), then( obligation( as per( penetration, nzbc g12as2 f5)))
if( and( is( roof. type, pressed metal tile), has( roof, penetration)), then( obligation( and( has( penetration, flashing), is( flashing. type, or( epdm, silicone rubber)), as per( flashing, nzbc g12as2 f6))))
if( and( is( roof. type, profiled metal), has( roof, penetration), is( penetration. type, pipe), less than equal( penetration. diameter, 60 mm))), then( obligation( and( has( penetration, flashing), is( flashing. type, epdm boot), as per( flashing, nzbc g12as2 f6))))
if( and( is( roof. type, profiled metal), has( roof, penetration), is( penetration. shape, rectangular), less than equal( penetration. width, 1200 mm))), then( obligation( and( has( penetration, flashing), is( flashing. type, soaker), as per( flashing, nzbc g12as2 f7))))
if( is( roof. type, membrane)), then( obligation( as per( roof. penetration, nzbc g12as2 f8)))
if( is( wall cladding. type, fibre cement sheet)), then( obligation( and( is( wall cladding. system, flush-finished), has( wall cladding, drained cavity), greater than equal( wall cladding. thickness, 7.5 mm), is( wall cladding. edge, rebated), or( is( wall cladding. sheet, purpose-made), is( wall cladding. joint, sealed)), as per( wall cladding. joint, nzbc e2as1 9.7.10.4))))
if( is( wall cladding. type, fibre cement sheet)), then( obligation( comply with( cladding. material, as/nzs 2908: part 2)))
if( and( has( wall cladding, eifs), has( wall cladding. penetration, or( pipe, service))), then( obligation( is( penetration, weatherproof)))
if( is( balustrade, enclosed)), then( obligation( comply with( balustrade, nzbc e2as1 7.4)))
if( exist( solar water heater)), then( apply to( nzbc g12as2, and( solar water heater, building)))
if( exist( solar water heater)), then( obligation( comply with( solar water heater, nzbc g12as1)))
if( exist( solar water heater)), then( obligation( comply with( nzbc clauses, or( b1, b2, e2, g12, h1))))
if( and( not( is( building. designed for solar water heater, true)), is( building, structurally compliant), or( comply with( building, nzbc g12as2 t1.1.1), and( less than equal( solar collector. weight, 22 kg/m2), not( has( hot water storage tank, on or above roof))))), then( apply to( nzbc g12as2, solar collector support and fixing))
if( exist( solar water heater)), then( obligation( and( comply with( installation material, nzbc b2), is( installation material, suitable), as per( suitability, nzbc g12as2 t1), is( installation material, compatible), as per( compatibility, or( nzbc g12as2 t2, nzbc g12as2 t3)), not( is( installation material, incompatible)), as per( incompatibility, nzbc g12as2 2.1.2))))
if( and( is( solar water heater. installation, not met), or( has( roofing, epdm boots), has( roofing, galvanized))), then( obligation( and( or( has( epdm boots, protective coating), has( galvanized roofing, protective coating)), as per( protective coating, suitable))))
if( and( is( solar water heater. component, or( mounting bracket, strap)), in contact with( solar water heater. cladding, or( galvanized, zinc-aluminium-magnesium))), then( obligation( and( is( fixing. material, galvanized), as per( fixing. material, nzbc g12as2 t2))))
if( exist( solar water heater)), then( obligation( comply with( solar water heater, as/nzs 2712)))
if( exist( solar water heater), has( solar water heater, controller)), then( obligation( comply with( controller, as/nzs 2712:6.3)))
if( and( is( water heater. type, solar), satisfies( water heater, and( nzbc g12as2 3.2.1, nzbc g12as2 3.2.2)))), then( satisfies( nzbc h1.3.4, water heater)))
if( exist( solar water heater)), then( obligation( greater than equal( hot water storage. capacity, product( collector area, 50 litres/m2))))
if( has( wall cladding. system, limitation)), then( obligation( as per( wall cladding. system, nzbc e2as1 3.3)))
if( has( wall cladding, maintenance)), then( obligation( and( carry out( maintenance, as necessary), towards( durability, expected), as per( durability, nzbc e2as1 2.5))))
if( has( wall cladding, separation) or has( wall cladding, clearance to ground level) or has( wall cladding, overlap)), then( obligation( as per( wall cladding, and( nzbc e2as1 f65, nzbc e2as1 t18))))
if( has( wall cladding, clearance)), then( obligation( and( towards( clearance, roof cladding), greater than equal( clearance. size, 35 mm), as per( clearance, and( nzbc e2as1 t7, nzbc e2as1 f18)))))
if( is( solar collector. installation, fixed to roof)), then( obligation( and( as per( solar collector, nzbc g12as2 6.3), meet( solar collector. requirements))))
if( and( is( solar collector. location, roof), is( solar collector. material, as per( nzbc g12as2 2))), then( obligation( comply with( solar collector, nzbc g12as2 2)))
if( is( solar collector. support, rail)), then( obligation( or( and( is( rail. direction, horizontal), as per( rail, and( nzbc g12as2 6.5.2, nzbc g12as2 f17))), and( is( rail. direction, vertical), as per( rail, and( nzbc g12as2 6.5.3, nzbc g12as2 f18))))))
if( and( is( solar collector. pitch, different), not( is( solar collector. pitch, roof pitch)), has( solar collector, fixing points))), then( obligation( and( comply with( solar collector, nzbc g12as2 6.6), as per( solar collector. installation, nzbc g12as2 f19))))
if( and( is( panel. type, elevated), above( panel. elevation, roof plane))), then( obligation( and( has( panel. edge, support), is( support. material, or( hot dip galvanized steel, stainless steel)), is( support. type, angle strut), is( support. size, 25 x 25 x 3 mm), less than equal( support. length, 1.0 m))))
if( and( is( panel. type, elevated), above( panel. elevation, roof plane), has( panel, support), is( support. material, or( hot dip galvanized steel, stainless steel))), then( obligation( and( is( support. type, angle strut), is( support. size, 30 x 30 x 3 mm), less than equal( support. length, 1.4 m))))
if( and( is( steel. material, galvanized), has( steel, cut or hole)), then( obligation( protect( cut or hole, from corrosion))))
if( exist( discharge pipe)), then( obligation( has( discharge pipe, access point), for( access point, clearance), is( access point. purpose, blockage clearance)))
if( has( discharge pipe, gradient)), then( obligation( greater than equal( discharge pipe. gradient, value), as per( value, nzbc g13as1 t4)))
if( has( waste water fixture, discharge pipe)), then( obligation( or( and( towards( discharge pipe, gully trap), as per( gully trap, and( nzbc g13as1 f5, nzbc g13as2 f3))), and( towards( discharge pipe, discharge stack), as per( discharge stack, and( nzbc g13as1 4.7, nzbc g13as1 f7, nzbc g13as1 f8))))))
if( has( waste water fixture, discharge pipe)), then( obligation( and( comply with( waste water fixture. venting, nzbc g13as1 5.0), as per( waste water fixture. venting, nzbc g13as1 t5))))
if( has( fixture, soil), then( obligation( or( direct( fixture. discharge pipe, drain), to( fixture. discharge pipe, stack), as per( stack, nzbc g13as1 4.7), as per( figures, and( nzbc g13as1 f6(1), nzbc g13as1 f7, nzbc g13as1 f8)))))
if( has( soil fixture, discharge pipe)), then( obligation( and( comply with( soil fixture. venting, nzbc g13as1 5.0), as per( soil fixture. venting, nzbc g13as1 t5), as shown in( nzbc g13as1 f6(2)))))
if( and( has( discharge stack, vent pipe), not( for( vent pipe, drain vent))), then( obligation( greater than equal( vent pipe. diameter, as per( vent pipe. diameter, nzbc g13as1 t6)))))
if( has( vent pipe, open)), then( obligation( and( as per( vent pipe. termination, and( nzbc g13as1 5.7.2, nzbc g13as1 5.7.3)), or( as per( vent pipe. termination, nzbc g13as1 5.7.4), outside( vent pipe. termination, building)))))
if( has( venting, air admittance valve)), then( obligation( as per( venting, nzbc g13as1 t5)))
if( exist( solar water heating system)), then( obligation( and( has( solar water heating system, label), is( label. type, permanent), is( label. location, prominent), includes( label. markings, as per( nzbc g12as2 3.1.1)))))
if( exist( solar water heater)), then( obligation( comply with( solar water heater. durability, nzbc b2)))
if( exist( solar water heater)), then( obligation( and( is( solar water heater, easy to access), is( solar water heater, moderately difficult to replace), has( solar water heater, durability), greater than equal( durability. years, 15))))
if( and( less than equal( building. levels, 3), has( building, non-pressure sanitary plumbing), includes( non-pressure sanitary plumbing, all pipework), within( pipework, building), or( on( pipework, building), is( pipework, basement)))), then( apply to( nzbc g13as1, building))
if( is( plumbing system. type, gravity flow)), then( obligation( comply with( plumbing system. material, nzbc g13as1 t1)))
if( or( is( fixture. type, sanitary), is( appliance. type, sanitary))), then( obligation( has( discharge point, water trap)))
if( has( fixture, trap)), then( obligation( greater than equal( trap. water seal depth, 25 mm), as per( trap. water seal depth, nzbc g13as1 f1)))
if( has( water trap, diameter)), then( obligation( greater than equal( water trap. diameter, value), as per( value, nzbc g13as1 t2)))
if( has( floor waste outlet, grating)), then( obligation( and( is( grating, removable), is( grating. level, flush with floor))))
if( exist( floor waste)), then( obligation( greater than equal( floor waste. diameter, 40 mm)))
if( has( floor waste, diameter)), then( obligation( greater than equal( floor waste. diameter, 40 mm), if( has( floor waste, water trap), greater than equal( water trap. diameter, 40 mm))))
if( has( trap charging system, backflow prevention)), then( obligation( comply with( backflow prevention, nzbc g12as1)))
if( exist( solar water heater)), then( obligation( and( has( solar water heater, sealant), is( sealant. type, neutral cure silicone), has( sealant, mechanical fasteners), comply with( sealant, or( and( is( sealant. class, or( 2olm, 25lm)), is( sealant. type, f), is( sealant. standard, iso 11600)), and( is( sealant. class, a), is( sealant. type, ii), is( sealant. standard, federal specification tt-s-00230c))))))
if( and( is( sealant. type, acetic cured silicone), has( sealant, compatibility)), then( obligation( and( is( compatibility. material, stainless steel), not( is( compatibility. coating, or( zinc, aluminium-zinc))))))
if( has( roof, cladding)), then( obligation( and( for( penetration, roof), is( penetration. location, crest))))
if( exist( pipe)), then( obligation( and( is( pipe. material, or( copper, stainless steel, galvanized steel, plastic)), or( is( pipe. material, other), as per( pipe. material, nzbc g12as2 t2)), is( pipe. support, electrochemically compatible), or( is( pipe. support, electrolytically separated), as per( pipe. support, nzbc g12as2 t2)))))
if( exist( pipe)), then( obligation( and( permit( pipe. thermal movement), except( where( anchor point, necessary)))))
if( exist( hot water pipe)), then( obligation( or( comply with( hot water pipe. insulation, nzbc h1.3.4), and( connected( hot water pipe, heat dissipation device), not( has( hot water pipe, insulation))))))
if( exist( solar collector)), then( obligation( and( not( has( roof cladding, damage)), by( damage, solar collector))))
if( is( cladding. material, metal)), then( obligation( and( has( cladding, fixing), is( fixing. penetration, true), has( fixing, sealing washer), or( is( sealing washer. type, washer), is( sealing washer. type, boot)), as per( sealing washer, nzbc g12as2 5.2))))
if( exist( solar collector)), then( obligation( and( has( solar collector, support), greater than equal( support. points, 4))))
if( exist( solar collector)), then( obligation( and( define( outermost support point, x0), towards( x0, outside edge), less than equal( distance( x0, outside edge), 200 mm))))
if( and( is( fixing. type, screw), into( fixing, roof framing timber), greater than equal( fixing. gauge, 8))), then( obligation( greater than equal( distance( fixing. centre, edge of( timber)), 20 mm)))
if( and( is( fixing. type, screw), into( fixing, roof framing timber), greater than equal( distance( fixing. centre, edge of timber), 25 mm), is( fixing. gauge, 14))), then( obligation( has( fixing, minimum distance)))
if( and( is( fixing. type, bolt), into( fixing, roof framing timber), greater than equal( fixing. diameter, 10 mm))), then( obligation( greater than equal( distance( fixing. centre, timber. edge), 40 mm)))
if( exist( drain)), then( obligation( and( not( is( drain. connection, vent pipe)), is( drain. connection, or( sweep junction, oblique junction)), define( branch, x0), is( x0.angle, at point of entry), less than equal( x0.angle, 60 deg), as per( x0.angle, nzbc g13as2 f1))))
if( exist( gully trap)), then( obligation( and( not( into( gully trap, surface water)), not( into( gully trap, foreign bodies)), within( gully trap, legal boundary))))
if( exist( gully trap)), then( obligation( and( has( gully trap, overflow level), greater than equal( overflow level. height, 25 mm), above( overflow level. height, paved surface))))
if( exist( gully trap)), then( obligation( has( gully trap, grating), allows( grating, surcharge)))
if( exist( gully trap)), then( obligation( and( has( gully trap, water seal), greater than equal( water seal. depth, 65 mm))))
if( is( pipe. material, pvc-u)), then( obligation( comply with( pipe. jointing, as/nzs 2032)))
if( and( has( drainage pipe, listed in table 1), as per( table 1, nzbc g13as2)), not( or( is( trench. location, peat), is( trench. stability, unstable), greater than( cover, 2.5 m)))), then( obligation( as per( acceptable methods, nzbc g13as2 f7)))
if( exist( trench)), then( obligation( and( greater than equal( trench. width, trench. pipe diameter + 200 mm), define( trench. pipe diameter, D))))
if( and( has( drainage, junction), below( junction, building), less than equal( junction. angle, 45 deg), as per( junction. angle, nzbc g13as2 f13))), then( obligation( is( junction, beneath building)))
if( and( has( branch drain, soil fixtures), below( soil fixtures, building), has( branch drain, rodding point), is( rodding point. location, downstream), is( rodding point. type, sealed floor level), towards( rodding point, highest fixture connection), as per( rodding point, nzbc g13as2 f10, nzbc g13as2 f13))), then( obligation( provide( access for cleaning)))
if( exist( drainage system)), then( obligation( test( drainage system, watertightness)))
if( exist( drain)), then( obligation( or( comply with( air test, as 3500.2 c15.3), comply with( air test, nzbc e1vm1 8.3))))
if( and( is( building. construction, proposed), over( existing drain, building)), then( obligation( and( test( existing drain, soundness), before( construction), test( existing drain, soundness), after( construction)))))
if( and( is( building. type, or( multi-unit dwelling, group dwelling)), has( building, solid waste disposal)), then( obligation( and( has( container, moveable), greater than equal( container. capacity, 80 litres), for( container, dwelling unit))))
if( and( has( container, stored), in( container. area, building), or( in( container. area, part of building), has( part of building, common area))), then( obligation( and( has( dwelling unit, space), greater than equal( space. width, 0.5 m), greater than equal( space. depth, 0.5 m), greater than equal( space. height, 1 m))))
if( has( building, common storage area)), then( obligation( and( is( common storage area, adequately ventilated), comply with( ventilation, nzbc g4))))
if( exist( gully trap)), then( obligation( and( has( gully trap, support), with( support, and( concrete, greater than equal( concrete. thickness, 75 mm), separated from( concrete, building foundation))), has( gully trap, access space), greater than equal( access space. height, 600 mm))))
if( is( building. activity, housing)), then( obligation( has( building, gully trap), for( gully trap, overflow relief)))
if( exist( gully trap)), then( obligation( and( below( gully trap. top, overflow level), greater than equal( overflow level. distance, 150 mm), for( fixture, drainage system), is( fixture. type, sanitary), serves( fixture, drainage system)))))
if( exist( gully trap)), then( obligation( has( gully trap, grating), allows( grating, surcharge)))
if( exist( gully trap)), then( obligation( is( gully trap. location, visible)))
if( and( has( discharge pipe, sink), towards( sink. discharge, soak pit))), then( obligation( has( sink, grease trap)))
if( and( is( building. type, not housing), has( waste water, grease)), then( obligation( has( building, grease trap)))
if( is( building. activity, or( restaurant, cafe))), then( obligation( and( greater than equal( grease trap. capacity, product( 5, seating. provided)), greater than equal( grease trap. capacity, as per( nzbc g13as2 3.4.3)))))
if( and( is( grease trap. location, outside), has( grease trap, configuration))), then( obligation( as per( grease trap. configuration, nzbc g13as2 f4)))
if( is( grease trap. outlet, junction)), then( obligation( and( extend( outlet. junction, to( finished ground level)), has( outlet. junction, access cover), is( access cover, watertight), is( access cover. type, rodding point), as per( access cover, and( nzbc g13as2 f4, nzbc g13as2 f10)))))
if( exist( drain)), then( obligation( and( is( drain. gradient, maximum practicable))))
if( has( drainage pipe, gradient)), then( obligation( and( greater than equal( drainage pipe. gradient, value), as per( value, nzbc g13as2 t2))))
if( exist( drain)), then( obligation( not( decrease in size( drain. diameter, direction of flow))))
if( and( is( drain. type, waste water), has( drain, fixture)), then( obligation( greater than equal( drain. diameter, 80 mm))))
if( not( for( drain, waste water fixture))), then( obligation( greater than equal( drain. diameter, 100 mm)))
if( exist( drainage system)), then( obligation( and( is( drainage system. ventilation, present), allow( ventilation. flow, air), minimise( foul air. build up))))
if( or( is( drain. type, main), and( is( drain. type, branch), greater than( drain. length, 10 m))), then( obligation( comply with( drain. ventilation, nzbc g13as2 t3)))
if( is( drain. type, main), then( obligation( and( greater than equal( drain. diameter, 80 mm), comply with( drain. termination requirements, nzbc g13as1 5.7.3))))
if( and( is( valve, air admittance), is( valve. part, fixture trap))), then( obligation( use( valve, trap vent)))
if( exist( pipe)), then( obligation( and( is( pipe. support, at centre), less than equal( support. centre, value), as per( value, nzbc g13as1 t7))))
if( and( is( drain. type, foul water), is( drain. pressure, non-pressure), less than equal( drain. diameter, 150 mm))), then( apply to( nzbc g13as2, drain))
if( or( for( foul water drain, or( industrial liquid waste, chemical waste, toxic waste)), and( for( foul water drain, waste), towards( waste. disposal, sewer), requires( waste. disposal, pretreatment)))), then( not( apply to( nzbc g13as2, foul water drain)))
if( exist( drainage pipe)), then( obligation( comply with( drainage pipe. material, as per( nzbc g13as2 t1))))
if( has( building, waste chute)), then( obligation( and( has( water supply, tap), on( every second floor, adjacent to( waste chute)), for( cleaning, waste chute))))
if( exist( chimney)), then( obligation( less than equal( height. measurement, 9 m), as per( height, nzbc b1as3 1.1.2)))
if( is( chimney. cantilever, true)), then( obligation( less than equal( chimney. height, 2.4 m), above( chimney. height, roof level), as per( roof level, nzbc b1as3 1.7)))
if( or( is( element. type, foundation), is( element. type, chimney base))), then( obligation( and( is( element. material, precast pumice concrete), define( element. width, x0), is( x0.measurement, along building line), define( element. depth, x1), is( x1.measurement, perpendicular building line), less than equal( x0, 1600 mm), less than equal( x1, 1050 mm))))
if( or( is( element, foundation), is( element, chimney base))), then( obligation( and( is( element. material, or( brickwork, concrete)), define( element. width, x0), is( x0.measurement, along building line), define( element. depth, x1), is( x1.measurement, perpendicular building line), less than equal( x0, 1200 mm), less than equal( x1, 1050 mm))))
if( or( is( structure, foundation wall), is( structure, chimney base))), then( obligation( and( has( structure, reinforcing), is( reinforcing. bar, d12), less than equal( reinforcing. spacing, 400 mm), greater than equal( reinforcing. lap, 300 mm), is( reinforcing. bar, r6), is( reinforcing. spacing, 200 mm), is( reinforcing. shape, u bar), as per( reinforcing, and( nzbc b1as3 f2, nzbc b1as3 f3, nzbc b1as3 f4, nzbc b1as3 f5)))))
if( is( chimney stack. reinforcement, required)), then( obligation( and( has( chimney stack. reinforcement, d12 bars), less than equal( distance( d12 bars. centres, vertical), 400 mm), greater than equal( lap( d12 bars), 300 mm), has( chimney stack. reinforcement, r6 bars), is( r6 bars. type, closed stirrups), less than equal( distance( r6 bars. centres, horizontal), 200 mm), as per( chimney stack. reinforcement, and( nzbc b1as3 f2, nzbc b1as3 f3, nzbc b1as3 f4, nzbc b1as3 f5)))))
if( or( is( structure, foundation wall), is( structure, chimney base), is( structure, chimney stack))), then( obligation( and( has( structure, reinforcing), has( reinforcing, horizontal), is( reinforcing. quantity, double), at( reinforcing. location, change in direction of( vertical steel)), as per( reinforcing. location, and( nzbc b1as3 f2, nzbc b1as3 f3, nzbc b1as3 f4, nzbc b1as3 f5)))))
if( exist( chimney)), then( obligation( and( has( chimney, bracket), is( bracket. material, hot dip galvanized steel), is( bracket. size, and( 50 mm, 4 mm)), around( bracket, chimney))))
if( and( is( chimney. width, less than equal to 600 mm), has( chimney, wall ties))), then( obligation( and( locate( wall ties, mortar joints), maximum( wall ties. centres, 225 mm), up( wall ties, each side of chimney), as per( wall ties, nzbc b1as3 f7(a)))))
if( is( chimney. width, greater than 600 mm)), then( obligation( and( has( chimney, wall ties), is( wall ties. location, mortar joint), less than equal( wall ties. centres, 225 mm), on( wall ties. side, chimney))))
if( is( chimney stack. material, brick), is( chimney stack. skin, single)), then( obligation( and( define( chimney stack. width, x0), is( x0.measurement, along building line), define( chimney stack. depth, x1), is( x1.measurement, perpendicular building line), less than equal( x0, 500 mm), less than equal( x1, 500 mm))))
if( is( chimney stack. material, brick), is( chimney stack. construction, double skin)), then( obligation( and( define( chimney stack. width, x0), is( x0.measurement, along building line), define( chimney stack. depth, x1), is( x1.measurement, perpendicular building line), less than equal( x0, 1200 mm), less than equal( x1, 680 mm))))
if( exist( chimney liner)), then( obligation( and( separate( liner, chimney), achieve( separation, by( or( coating( liner, debonding agent), wrapping( liner, combustible material))), greater than equal( thickness( combustible material), 0.25 mm)))))
if( is( chimney. material, brick), is( chimney. wall thickness, single skin)), then( obligation( greater than equal( chimney. wall thickness, 155 mm)))
if( is( chimney. material, brick)), then( obligation( greater than equal( chimney. wall thickness, 245 mm), as per( chimney. wall thickness, nzbc b1as3 f3)))
if( is( chimney. material, concrete)), then( obligation( greater than equal( chimney. wall thickness, 170 mm)))
if( is( chimney. foundation, wall)), then( obligation( and( or( and( is( wall. material, concrete), is( wall. thickness, 150 mm)), and( is( wall. material, concrete masonry), is( wall. thickness, 190 mm)), and( is( wall. material, brick))), comply with( wall. construction, and( nzbc b1as3 f2, nzbc b1as3 f3)), has( wall, reinforcing steel), as per( reinforcing steel, nzbc b1as3 1.6))))
if( is( hearth. type, slab)), then( obligation( and( is( hearth. material, concrete), greater than equal( hearth. thickness, 75 mm), has( hearth, reinforcement), is( reinforcement. type, d10 bar), is( reinforcement. spacing, 225 mm), as per( hearth, nzbc b1as3 f1))))
if( is( chimney breast. opening, present)), then( obligation( comply with( opening. width, nzbc b1as3 t1)))
if( and( is( building. type, or( multi-unit dwelling, group dwelling)), has( building, occupancy), has( building, waste storage)), then( obligation( less than equal( distance( occupancy, waste storage), 30 m))))
if( exist( common storage area)), then( obligation( and( is( common storage area, acceptable), has( common storage area, interior surface), is( interior surface, easily cleaned))))
if( exist( solid waste storage area)), then( obligation( and( is( storage area, enclosed), not( adjacent( storage area, habitable space)), not( adjacent( storage area, food preparation area)))))
if( exist( solid waste storage area)), then( obligation( and( is( storage area, common), as per( storage area, nzbc g15as1 f1), not( has( storage area, high temperature)), hasten( putrefaction, storage area))))
if( exist( common storage area)), then( obligation( and( is( common storage area, screened), from( screened, habitable spaces), to( reduce, visual impact))))
if( has( solid waste storage area, concrete floor)), then( obligation( and( comply with( concrete floor. finish, nzs 3114 u5 trowelled), is( concrete floor. gradient, 1 in 50), has( concrete floor, floor drain), comply with( floor drain, nzbc g13))))
if( and( has( food waste storage area, window), is( window. orientation, north))), then( obligation( screen( window, from( sunlight)), to( reduce( likelihood, putrefaction))))
if( has( perishable waste, storage)), then( alternative( solution( and( is( storage, refrigerated), is( storage. room, store room)), nzbc g15as1)))
if( and( is( storage area. location, indoor), has( storage area, ventilation))), then( obligation( comply with( ventilation, nzbc g4)))
if( has( storage area, mechanical ventilation)), then( obligation( and( greater than equal( ventilation. air changes, 6), is( ventilation. pressure, negative), towards( ventilation. discharge, safe place), not( into( ventilation. exhaust air, building)))))
if( and( has( storage area, access), towards( access, collection vehicle)), then( obligation( comply with( access, nzbc d1)))
if( is( chimney. material, precast pumice concrete)), then( obligation( and( or( has( chimney, restraint), has( chimney, fixing)), satisfy( restraint. requirements, and( nzbc b1as3 1.7.6, nzbc b1as3 1.7.12)), as per( fixing, nzbc b1as3 f7(b)))))
if( has( fixing bracket, thickness(5.0 mm))), then( obligation( and( is( fixing bracket. material, mild steel angle), has( fixing bracket, hole), is( hole. diameter, 50 mm), towards( hole, reinforcing duct), has( hole, diameter(14 mm)), towards( hole, double stud), has( double stud, fixing), is( fixing. diameter, 12 mm), towards( fixing, fixing bracket))))
if( exist( fixing bracket)), then( obligation( and( is( fixing bracket. location, mortar joint), between( fixing bracket, units))))
if( and( is( stack. width, less than equal to( 600 mm)), has( stack, fixing bracket)), then( obligation( greater than equal( distance between( fixing bracket), 480 mm))))
if( is( chimney, connected to building)), then( obligation( or( has( chimney, floor bracket), is( chimney. base, integral with( building. foundation wall)))))
if( is( chimney, connected to building)), then( obligation( and( at( chimney. level, intermediate floor), or( has( chimney, floor bracket), has( chimney, closely spaced wall ties)))))
if( exist( chimney), then( obligation( and( has( chimney, structural diaphragm), at( diaphragm, or( roof/ceiling level, floor level)), comply with( diaphragm, all relevant clauses of nzs 3604 and nzs 4229))))
if( is( appliance. fuel type, solid), then( obligation( or( comply with( chimney, nzbc b1as3 1.0), comply with( chimney, as/nzs 3869, as/nzs 2918)))))
if( and( is( stack. width, greater than 600 mm), has( stack, fixing bracket))), then( obligation( greater than equal( distance between( fixing bracket), 320 mm)))
if( is( wall. type, masonry)), then( obligation( and( has( wall, fixing tie), is( fixing tie. material, galvanized wire), is( fixing tie. diameter, 4 mm), hooked( fixing tie, reinforcing duct), secured( fixing tie, adjacent double studding), with( fixing tie, four heavy duty fencing staples))))
if( is( stack. width, greater than 600 mm)), then( obligation( and( has( stack, fixing tie), greater than equal( tie. spacing, 160 mm))))
if( is( chimney. material, brick)), then( obligation( comply with( chimney construction, nzs 4210)))
if( is( chimney. material, concrete)), then( obligation( comply with( chimney, nzs 3109)))
if( is( chimney. foundation, reinforced concrete)), then( obligation( comply with( chimney. foundation, nzs 3109 ordinary grade concrete)))
if( is( chimney. type, hearth slab), is( hearth slab. material, reinforced concrete)), then( obligation( comply with( hearth slab, relevant clauses of nzs 3109 for ordinary grade concrete)))
if( is( precast chimney. material, pumice concrete)), then( obligation( and( is( pumice aggregate, free of combustible and organic matter), less than equal( pumice aggregate. max size, 19 mm), between( pumice aggregate. retained, 40%, 60%), has( precast chimney, mix ratio), less than equal( mix ratio, 5:1), has( precast chimney, compressive strength), greater than equal( compressive strength, 7 MPa), as per( compressive strength, nzs 3112: part 2), after( precast chimney. curing, air dry), during( precast chimney. storage, transport, site, cover), is( precast chimney. laying, dry), comply with( precast chimney. mortar, nzs 4210), has( precast chimney. duct, grout), comply with( duct. grout, nzs 4210))))
if( is( chimney foundation wall. material, concrete masonry)), then( obligation( comply with( chimney foundation wall, nzbc b1as3 nzs 4229)))
if( is( chimney. material, brick)), then( obligation( and( has( chimney, reinforcing), is( reinforcing. position, central), in( reinforcing, grout), is( grout. thickness, chimney. thickness))))
if( is( chimney. material, in-situ concrete)), then( obligation( and( has( chimney, reinforcing steel), comply with( reinforcing steel, nzs 3109), has( reinforcing steel, cover))))
if( is( chimney. material, precast pumice concrete)), then( obligation( and( has( chimney, reinforcing steel), place( reinforcing steel, with grout), in( ducts, preformed units))))
if( is( chimney. material, galvanized steel)), then( obligation( comply with( galvanizing, as/nzs 4680)))
if( has( wall, tie)), then( obligation( or( and( is( tie. material, galvanised bar), is( tie. diameter, 4 mm)), and( is( tie. material, zinc coated steel strip), is( tie. width, 25 mm), is( tie. thickness, 1.5 mm), is( tie. load capacity, 1.2 kN), less than equal( tie. elongation, 1.5 mm), less than equal( tie. shortening, 1.5 mm)))))
if( and( is( strap. material, radiata pine), has( strap, fixing)), then( obligation( greater than equal( fixing. spacing, 35 mm))))
if( and( is( fixing. type, nail), has( fixing, strap), towards( strap, roof or ceiling framing), not( is( timber. species, radiata pine)), less than equal( distance between nails, 70 mm))), then( obligation( space( nails, at least 70 mm apart)))
if( exist( storage facility)), then( obligation( has( storage facility. location, sufficient access)))
if( exist( treatment facility)), then( obligation( and( has( treatment facility. location, sufficient access), for( access, and( cleaning, clearing of blockages, maintenance)))))
if( exist( disposal system)), then( obligation( and( has( disposal system. location, sufficient access), for( access, and( cleaning, clearing of blockages, maintenance)))))
if( exist( storage tank)), then( obligation( and( not( has( storage tank, health or safety hazard)), not( has( storage tank, corrosion that threatens integrity)), is( storage tank. design, able to withstand associated loads))))
if( exist( industrial liquid waste)), then( obligation( and( is( material, resistant), to( resistance, or( corrosion, chemical attack, abrasion, physical abuse)), as per( resistance, reasonable expectation))))
if( exist( equipment), then( obligation( and( is( equipment. handling, liquid waste), is( equipment. corrosion allowance, adequate), for( equipment. life, intended))))
if( or( exist( industrial liquid waste system), exist( storage tank), exist( treatment tank), exist( piping system))), then( obligation( test( system, to avoid contamination)))
if( exist( waste storage facility)), then( obligation( and( is( waste storage facility. area, impervious), contained( waste storage facility. area), not( contamination( soil, ground water, waterways)), by( contamination, run-off, washing-down, rain, accidental overflow))))
if( exist( industrial liquid waste facility)), then( obligation( avoid( contamination, potable water supply), as per( contamination, nzbc g12)))
if( or( is( compare( industrial liquid wastes. treatment method), different), is( compare( industrial liquid wastes. compatibility), incompatible))), then( loop( for each( industrial liquid wastes), obligation( and( is( industrial liquid waste. conveying system, separate), is( industrial liquid waste. storage system, separate)))))
if( and( for( vehicle access area, collection), is( collection. type, industrial liquid waste))), then( obligation( and( is( access layout, sufficient), for( access layout, vehicle), not( require( vehicle, reversing)), not( interfere( vehicle, other activities)), as per( access layout, nzbc g14vm1 1.8.1))))
if( and( is( drain. material, or( concrete, ceramic, vitrified clay, rubber ring jointed steel, upvc)), has( drain, flexible joint), within( flexible joint, 225 mm, outside( access chamber, base line))), then( obligation( as per( flexible joint, nzbc e1as1 f11, nzbc e1as1 f12))))
if( or( is( area, landscaped), is( area, sealed))), then( preference( has( point, rodding), over( has( point, inspection))))
if( has( anti-scour block, installation)), then( obligation( and( is( installation, keyed), into( trench, and( sides, floor)), by( keying, 150 mm))))
if( is( building. element, glazing)), then( obligation( comply with( glazing, nzbc b1as1 7.0)))
if( or( is( construction, roof), is( construction, ceiling))), then( obligation( greater than equal( r-value, 1.5)))
if( is( document, g14vm1)), then( obligation( and( is( system. type, industrial liquid waste), towards( system, collection), towards( system, storage), towards( system, treatment), towards( system, disposal))))
if( has( treatment facility, unauthorised access)), then( obligation( and( is( facility. location, lockable enclosed space), within( space, building), has( space, lock)))
if( and( for( vehicle access area, collection), is( collection. type, industrial liquid waste))), then( obligation( or( and( has( vehicle access area, kerbed area), is( kerbed area. slope, towards( waste. drainage, non-collection)), not( below( waste. drainage, vehicle))), and( has( waste. drainage, uncontrolled), towards( waste. drainage, other areas))))
if( and( for( vehicle access area, collection), is( collection. type, industrial liquid waste))), then( obligation( and( not( into( spilled waste, sewage system)), accept( network utility operator, spilled waste))))
if( and( for( vehicle access area, collection), is( collection. type, industrial liquid waste))), then( obligation( and( contain( spilled waste, on-site), not( into( spilled waste, surface water system)))))
if( has( storage facility, hazard), then( obligation( and( is( storage facility. location, lockable enclosed space), within( lockable enclosed space, building))))
if( and( has( storage facility, unauthorised access), is( access. hazard, true), is( storage facility. location, open))), then( obligation( and( has( security, fence), is( fence. location, external), has( fence, lockable gate))))
if( and( is( pipeline. type, gravity flow), has( pipeline, industrial liquid waste)), then( obligation( and( has( pipeline, gradient), greater than( pipeline. gradient, minimum), as per( minimum, nzbc g14vm1 2.1.3))))
if( exist( piping system)), then( obligation( and( is( piping system. type, industrial liquid waste), is( piping system. joint, practical minimum), is( piping system. fitting, practical minimum), is( piping system. valve, practical minimum))))
if( has( pipe, bend)), then( obligation( greater than equal( bend. radius, 1.5 times( pipe. diameter))))
if( exist( water heater)), then( obligation( and( has( energy cut-off device, water heater), is( device. design, to( disconnect, energy supply)), before( water temperature, exceeds( 95 deg C)))))
if( exist( site development), then( obligation( not( significantly hamper( flow of( surface water, from( site))))))
if( and( is( appliance. type, solid fuel burning domestic), less than equal( appliance. weight, 130 kg))), then( obligation( and( has( appliance, hearth slab), is( hearth slab. thickness, 65 mm), has( hearth slab, reinforcement), or( is( reinforcement. type, mesh), and( is( reinforcement. size, 665), is( reinforcement. placement, central))), or( is( reinforcement. type, rod), and( is( reinforcement. size, d10), is( reinforcement. spacing, 300 mm))), supported by( hearth slab, or( timber floor, concrete floor)), comply with( floor, or( nzbc nzs 3604, nzbc nzs 4229)), is( hearth slab. material, ordinary grade concrete), comply with( hearth slab, nzbc nzs 3109)))
if( and( is( hearth. position, on timber floor), has( hearth, supporting members), for( member, supporting members), has( member, screws), greater than equal( screws. shank diameter, 4.88 mm), penetrate( screws, floor framing), greater than equal( screws. penetration depth, 50 mm))), then( obligation( has( hearth, held in position)))
if( and( is( hearth slab. location, on concrete floor), has( hearth slab, securing), is( securing. type, d10 starter rod), has( securing, location), for each( location, corner of( hearth slab))), then( obligation( and( has( starter rod, diameter), is( starter rod. diameter, d10), has( starter rod, termination), is( termination. type, standard hook), comply with( termination, nzs 3109))))
if( is( appliance. type, solid fuel burning), has( appliance, hearth slab)), then( obligation( comply with( hearth slab, as/nzs 2918)))
if( is( waste, hazardous)), then( obligation( comply with( storage facilities, nzbc f3)))
if( exist( collection facility)), then( obligation( not( create( collection facility. location, health or safety hazard))))
if( exist( treatment facility)), then( obligation( not( create( treatment facility. location, health or safety hazard))))
if( exist( disposal system)), then( obligation( not( create( disposal system. location, health or safety hazards))))
if( exist( treatment facility)), then( obligation( not( has( treatment facility. location, spillage containment))))
if( and( is( panel. type, elevated), above( panel. elevation, roof plane), has( panel, support), is( support. material, or( hot dip galvanized steel, stainless steel))), then( obligation( and( is( support. type, angle strut), is( support. size, 40 x 40 x 3 mm), less than equal( support. length, 2.4 m))))
if( and( is( building. scope, nzbc 3604), less than equal( building. height, 10 m), less than equal( building. storeys, 3), is( wall. orientation, vertical), less than equal( roof. slope, 60 deg))), then( apply to( nzbc e2as1, building))
if( and( is( building. design, specific engineering), based on( building, nzs 3604))), then( obligation( and( is( framing. stiffness, at least equivalent), to( framing provisions, nzs 3604))))
if( and( has( building, drained cavity), is( building. spread of flame requirement, specified in nzbc c clauses))), then( obligation( and( not( apply to( nzbc e2as1, building)), specifically design( cavity, for( both( weathertightness, spread of flame))))))
if( is( building. scope, within( acceptable solution)), then( obligation( and( as per( risk matrix, nzbc e2as1 t2), define( risk score, x0), for( face, building. external face), calculate( x0, risk score, face), select( cladding, from( nzbc e2as1 t3), according to( x0))))))
if( has( flashing, material)), then( obligation( and( select( flashing. material, as per( exposure conditions, nzbc e2as1 t20)), minimize( corrosion))))
if( and( is( material, metal), not( is( metal. coating, coated))), then( obligation( not( allow( accumulation, or( carbon deposits, chemical contaminants))))))
if( is( flashing. material, upvc)), then( obligation( and( greater than equal( upvc. thickness, 0.75 mm), comply with( upvc, and( nzbc e2as1 9.2, nzbc e2as1 9.3, nzbc e2as1 9.4))))
if( is( flashing. material, aluminium)), then( obligation( and( greater than equal( aluminium. thickness, 0.7 mm), is( aluminium. grade, 5000 series), comply with( aluminium, as/nzs 1734))))
if( is( steel. coating, aluminium-zinc-magnesium)), then( obligation( and( greater than equal( steel. base metal thickness, 0.55 mm), or( is( steel. grade, g550), and( is( steel. grade, g300), is( steel. type, or( curved, crimped)))), as per( steel. corrosion protection, nzbc e2as1 t20))))
if( is( flashing. material, zinc sheet)), then( obligation( and( comply with( flashing, or( nzbc e2as1 t20, nzbc e2as1 t21, nzbc e2as1 t22)), greater than equal( zinc sheet. thickness, 0.7 mm), comply with( zinc sheet, bs en 988))))
if( and( is( roof. construction, likely to cause snow build-up), greater than( nzbc e2as1 sg, 1.0 kPa))), then( obligation( specific design( for( preventing( ingress of snow melt water), as per( nzbc e2as1, nzs 3604)))))
if( not( included( building, component, junction)), then( obligation( specific design( for( building, component, junction)))))
if( has( building, cladding system)), then( obligation( comply with( cladding system, nzbc e2.2 to e2.3.7), as per( nzbc e2as1)))
if( has( building, envelope)), then( obligation( and( comply with( envelope. material, nzbc b2), is( envelope. material, suitable), as per( envelope. material, nzbc e2as1 t20), is( envelope. material, compatible), as per( envelope. material, or( nzbc e2as1 t21, nzbc e2as1 t22)))))
if( exist( building product)), then( obligation( is( building product, part of system)))
if( is( building. envelope, constructed), then( obligation( is( cladding. system, complete), not( separate( cladding. items)))))
if( or( is( finish. material, flush-finished fibre cement sheet), is( finish. material, eifs))), then( obligation( and( has( finish, colour), is( colour. reflectivity, greater than equal( 40%)), as per( reflectivity, astm c1549))))
if( exist( building)), then( obligation( and( has( building, material), has( building, component), has( building, junction), towards( maintenance, durability), as per( maintenance, nzbc e2as1 r2.5.0.2))))
if( exist( building)), then( obligation( and( define( maintenance, x0), is( x0. extent, dependent on( and( is( cladding. type, or( component, cladding)), is( cladding. position, on building), is( building. location, geographical), is( site. condition, specific)))), as per( x0, nzbc e2as1)))
if( is( building. maintenance, regular)), then( obligation( and( wash( building. exterior), inspect( and( surface, junction)), repair( when( necessary, item)), preserve( weathertightness( building)), maintain( clearance( cladding, external ground or paving), as per( clearance, nzbc e2as1 9.1.3)), maintain( clearance( roofing, membrane decking), greater than equal( clearance. size, 35 mm)), maintain( finish coating( for( cladding, or( stucco, eifs, fibre cement))))))
if( is( design. proposed, true)), then( obligation( carry out( risk assessment, using( building envelope risk matrix)), aggregate( risks, related to( design. features)), calculate( risk score, for( design))))
if( and( is( treatment facility, hazardous), requires( treatment facility. security, unauthorised access), is( treatment facility. location, open))), then( obligation( and( has( treatment facility, security fence), is( security fence. location, external), has( security fence, lockable gates))))
if( and( exist( solar water heater), is( solar water heater. water storage, potable), is( solar water heater. pre-heater, instantaneous water heater))), then( obligation( or( and( has( hot water storage tank, supplementary heating), has( hot water storage tank, controller), comply with( controller. conditions, nzbc g12as2 3.5.1)), and( is( instantaneous water heater, heating), greater than equal( instantaneous water heater. temperature, 70 deg))))
if( and( is( climate zone, 3), has( solar water heater, collector))), then( obligation( or( pass( collector, level 2 test), has( collector, automatic drain-down system))))
if( is( water heater. type, wetback), then( obligation( and( has( water heater, open-vent), connected to( or( water tank, wetback water heater. flow pipe)), as per( open-vent, nzbc g12as1 f5))))
if( is( flashing. material, metal)), then( obligation( and( or( and( is( flashing. material, lead), or( less than equal( lead. weight, 17 kg), less than equal( lead. length, 1300 mm))), and( or( greater than( flashing. pitch, 15 deg), greater than equal( lap. size, 100 mm))), and( or( less than equal( flashing. pitch, 15 deg), greater than equal( lap. size, 200 mm), has( flashing. edge, hook)))), as per( flashing. features, nzbc e2as1 f)))
if( is( cladding. type, profiled metal)), then( obligation( and( has( cladding, cover flashing), is( cover flashing. type, soft edge), for( cover flashing, corrugated profiles))))
if( and( is( cladding. type, profiled metal), requires( cladding. turn-down, cover flashing))), then( obligation( and( or( is( cladding. profile, trapezoidal), less than equal( cladding. rib height, 30 mm), less than equal( cladding. rib centres, 200 mm)), is( cladding. turn-down, or( notched, soft edge flashing)))))
if( and( is( cladding. type, profiled metal), has( cladding, cover flashing), requires( cover flashing, turn-down))), then( obligation( and( is( turn-down. type, notched), for( profile, trapezoidal), above( profile. rib height, 30 mm), above( profile. rib centres, 200 mm))))
if( is( cladding. type, profiled metal)), then( obligation( and( has( cladding, cover flashing), is( cover flashing. turn-down, notched), for( turn-down, trough profiles))))
if( and( is( flashing. type, apron), is( flashing. cover, metal roofing), is( flashing. transverse, notched turn-downs))), then( obligation( and( has( flashing, gap), between( gap, and( flashing, roof cladding. pan)), less than equal( gap. size, 5 mm))))
if( has( flashing, apron)), then( obligation( and( greater than equal( flashing. cover, value), as per( value, nzbc e2as1 t7), not( has( flashing. cover, soft edge)), not( has( flashing. cover, turn-down)))))
if( and( is( flashing. location, window or door head), has( flashing, slope), has( flashing, cover)), then( obligation( comply with( flashing. slope and cover, nzbc e2as1 t7)))
if( is( flashing. type, inter-storey junction)), then( obligation( as per( flashing, nzbc e2as1 t7)))
if( is( junction. type, inter-storey), has( junction, flashing), is( flashing. type, head), as per( flashing, nzbc e2as1 4.6.1.7), has( cladding, overlap cover), towards( overlap cover, flashing. upstand), has( cladding. bottom, clearance), towards( clearance, flashing. slope), as per( overlap cover, nzbc e2as1 t7), as per( clearance, nzbc e2as1 t7)))
if( and( has( roof, finish), within( roof. length, wall), as per( kick-out, nzbc e2as1 f8b))), then( obligation( and( has( kick-out, function), is( kick-out, or( kick-out, stopend)), towards( water, out), from( wall cladding, roof cladding), from( wall cladding, gutter))))
if( or( has( building element, eaves gutter), has( building element, barge), has( building element, fascia))), then( obligation( and( after( wall cladding. installation, building element. installation), after( protective finish. application, building element. installation))))
if( or( has( eaves, gutter), has( eaves, spouting), has( barge), has( fascia))), then( obligation( and( terminate( eaves, gap), towards( gap, finished wall cladding), greater than equal( gap. size, 10 mm), as per( gap, nzbc e2as1 f8b))))
if( has( eave, enclosure)), then( obligation( and( has( soffit lining, direct fixed), is( soffit lining. material, or( 4.5 mm fibre cement sheet, 7 mm h3 plywood)), as per( soffit lining, and( nzbc e2as1 9.7, nzbc e2as1 9.8)), has( soffit lining, joint), has( soffit lining, fixing), has( soffit lining, finish))))
if( has( soffit, lining)), then( obligation( and( as per( lining, and( nzbc e2as1 f8a, or( nzbc e2as1 f114, and( is( lining. material, fibre cement), is( lining. finish, flush)))), towards( lining, fascia), towards( lining, barge), towards( lining, wall cladding), not( require( wall, underlay)), behind( lining, wall))))
if( and( is( flashing. type, apron), is( flashing. cover, parallel), is( flashing. material, metal roofing), is( metal roofing. type, profiled)), then( obligation( and( has( apron, cover), greater than equal( cover. length, 2 * metal roofing. crest height), as per( cover, nzbc e2as1 f7))))
if( and( is( flashing. type, ridge or hip), has( flashing, notched turn-down), in between( gap, and( flashing, roof cladding)), less than equal( gap. size, 5 mm))), then( obligation( has( flashing, gap)))
if( is( flashing. type, ridge or hip)), then( obligation( and( has( flashing, effective cover), is( effective cover. measurement, roof cladding), not( has( effective cover, soft edge)), not( has( effective cover, turn-down)), as per( effective cover, nzbc e2as1 t7))))
if( is( junction. type, roof to wall), has( junction, flashing), is( flashing. type, roof or deck to wall), as per( flashing, nzbc e2as1 4.6.1.4), has( flashing, upstand height), greater than equal( upstand height, 110 mm), as per( upstand height, and( nzbc e2as1 t7, and( has( overlap cover, cladding), greater than equal( overlap cover. size, 75 mm)), and( has( clearance, wall cladding), has( clearance. distance, 35 mm), towards( clearance. direction, roof cladding or finished deck material))))))
if( is( flashing. type, barge)), then( obligation( and( has( flashing, effective overlap), towards( effective overlap, barge board), not( has( effective overlap, drip edge)), as per( effective overlap, nzbc e2as1 t7))))
if( is( flashing. type, barges)), then( obligation( as per( apron cover, nzbc e2as1 4.6.1.1)))
if( has( flashing, flexible tape)), then( obligation( and( comply with( flexible tape, icbo ac148 parts 3.2 and 4), is( flexible tape. compatible, adjacent building wall underlay or roof underlay), is( flexible tape. application, fully concealed))))
if( is( flashing. type, exposed), or( is( flashing. type, barge), is( flashing. type, ridge))), then( obligation( and( fix( flashing, both edges))))
if( exist( flashing)), then( obligation( and( has( flashing, expansion joint), is( expansion joint. type, thermal), as per( expansion joint, nzbc e2as1 4.5.2))))
if( is( area, sensitive)), then( obligation( and( is( area. type, flashing), or( is( area, periphery), and( not( has( area, gutter))), is( area, change of direction), is( area, intersection), is( area, penetration)))))
if( is( wind zone, extra high)), then( obligation( and( use( flashing. attachment, hooks and hems), increase( flashing. upstand dimension, 25 mm), as per( flashing. upstand dimension, nzbc e2as1 t7))))
if( has( flashing, metal)), then( obligation( and( has( flashing. join, feature), is( feature, and( has( feature, rivet), less than equal( rivet. spacing, 50 mm), as per( rivet. compatibility, or( nzbc e2as1 t21, nzbc e2as1 t22)), or( has( rivet, seal), is( rivet. type, or( sealing, blind)))))))
if( has( flashing, metal)), then( obligation( and( define( combined length, sum( flashing. length))), or( and( is( flashing. material, or( light coloured steel, stainless steel)), greater than( combined length, 12 m)), and( is( flashing. material, dark coloured steel), greater than( combined length, 8 m)), and( is( flashing. material, copper), greater than( combined length, 8 m)), and( is( flashing. material, aluminium), greater than( combined length, 8 m))), has( flashing, expansion joint)))
if( exist( floor waste pipe)), then( obligation( and( is( floor waste pipe. type, stack), greater than equal( stack. diameter, value), as per( value, nzbc g13as1 t3), as per( stack, nzbc g13as1 f3))))
if( exist( building)), then( obligation( and( not( has( exitway, occupant load)), not( has( area, occupant load)), towards( area. use, intermittent), towards( area. people, already counted))))
if( is( roof. type, or( hip, ridge, valley, barge))), then( obligation( and( is( roof, weathertight), has( roof, flashing), has( roof, seal), as per( roof. flashing and seal, nzbc e2as1 f23 to f28))))
if( and( is( material, steel), or( is( product, pressed metal tile), is( product, flashing system))), then( obligation( and( greater than equal( base metal thickness, 0.39 mm), is( grade, or( g300, g250)), as per( corrosion protection, nzbc e2as1 t20))))
if( and( is( roof. type, pressed metal tiles), less than equal( roof. rafter length, 12 m))), then( obligation( or( and( is( roof. profile, standard), greater than equal( roof. pitch, 12 deg)), and( or( is( roof. profile, shingle), is( roof. profile, shake)), greater than equal( roof. pitch, 15 deg)))))
if( is( roof cladding. type, pressed metal tiles)), then( obligation( and( has( roof cladding, fixing), is( fixing. material, hot-dipped galvanized), is( fixing. size, 50 x 2.8 mm), is( fixing. head, flat), is( fixing. shank, annular-grooved), as per( fixing, nzbc e2as1 f33))))
if( is( roof cladding. type, pressed metal tiles)), then( obligation( and( comply with( flashing, nzbc e2as1 8.3.4.2), as per( flashing, nzbc e2as1 t7), unless( specifically shown otherwise, in details))))
if( is( roof cladding. type, profiled metal)), then( obligation( and( is( roof cladding, or( outlined in nzbc e2as1 8.4.4, valley gutter without plan change)), not( is( roof cladding, curved)), less than equal( roof cladding. sheet length, 18 m))))
if( is( material, metal), or( is( component, roof cladding), is( component, flashing))), then( obligation( and( select( component, exposure conditions), as per( exposure conditions, or( nzs 3604, as/nzs 2728)))))
if( and( is( roof cladding. type, profiled metal), has( roof cladding, clip fixing), is( clip fixing. profile, trough), is( clip fixing. span, as per( roof cladding, nzbc e2as1 t13))), then( obligation( and( greater than equal( clip fixing. base metal thickness, 0.9 mm), greater than equal( clip fixing. width, 30 mm), is( clip fixing. material, compatible with cladding), as per( clip fixing. material, or( nzbc e2as1 t20, nzbc e2as1 t21)), has( clip fixing, fastening), and( greater than equal( fastening. screw size, 10-gauge), is( fastening. screw type, waferhead), is( fastening. screw coating, hot-dipped galvanized), comply with( fastening. screw, as 3566: part 2, class 3)))))
if( and( is( roof cladding. type, or( corrugated, trapezoidal)), requires( roof cladding, expansion allowance))), then( obligation( and( has( roof cladding, fixing), is( fixing. type, profiled washer), as per( fixing, nzbc e2as1 t16), define( top 50%, x0), define( lower 50%, x1), is( x0, or( top 50%, closest to ridge)), is( x1, or( lower 50%, furthest from ridge)), include( fixing, conventional fixing), include( fixing, sealing washer), is( sealing washer. position, centre of hole), is( sealing washer. type, oversized hole), as per( sealing washer, nzbc e2as1 f39))))
if( has( roofing, boundary)), then( obligation( and( comply with( boundary, and( nzbc e2as1 4.6, nzbc e2as1 t21, nzbc e2as1 t22)), or( and( is( boundary. type, edge), has( boundary, eaves flashing), as per( eaves flashing, nzbc e2as1 f45a)), and( is( boundary. type, soft edge), has( boundary, cover flashing), as per( cover flashing, nzbc e2as1 f41)), and( is( boundary. type, notched turn-down), has( boundary, cover flashing), as per( cover flashing, nzbc e2as1 f42)), is( boundary. material, compatible with( roofing. material)), comply with( boundary, nzbc e2as1 4.3), has( boundary, expansion joint), comply with( expansion joint, nzbc e2as1 4.5.2)))))
if( has( seal, compressible)), then( obligation( not( at( eaves, seal))))
if( is( gutter. type, valley)), then( obligation( and( as per( gutter. catchment area, nzbc e2as1 t8), as per( gutter, and( nzbc e2as1 f51, nzbc e2as1 8.1.6.2)))))
if( and( is( membrane. composition, or( butyl, epdm)), for( substrate, plywood), or( is( roof. type, flat), greater than equal( roof. fall, 2 deg)), and( is( deck. type, flat), greater than equal( deck. fall, 1.5 deg), less than equal( deck. area, 40 m2), not( has( deck, step in level)), not( has( deck, integral roof garden)), not( has( deck, downpipe direct discharge)), for( gutter, internal), is( gutter. fall, 1 in 100), not( has( gutter, cross seam)), for( deck, removable raised surface))), then( apply to( nzbc e2as1, and( membrane, substrate)))
if( is( roof. type, membrane)), then( not( apply to( nzbc e2as1, directly applied wearing or decorative surfaces)))
if( and( is( construction space, closed-in), under( roof. type, membrane), or( under( deck. type, membrane), under( deck. type, slatted))), then( obligation( has( construction space, adequate ventilation), to( prevent( moisture accumulation, under( membrane))))))
if( and( is( substrate, plywood), is( plywood. grade, cd grade structural), is( plywood. face, sanded c), greater than equal( plywood. thickness, 17 mm), is( plywood. treatment, h3), compatible( plywood. treatment, and( membrane, adhesives))), then( obligation( comply with( plywood, as/nzs 2269))))
if( is( roof. type, membrane)), then( obligation( and( has( substrate, control joint), accommodate( control joint, membrane roof))))
if( is( roofing. type, membrane)), then( not( apply to( nzbc e2as1, control joint design)))
if( has( wall cladding. bottom, clearance)), then( obligation( and( adjacent( surface, wall cladding), is( surface. type, horizontal), has( surface, finished plane), towards( clearance. measurement, finished plane))))
if( is( wall cladding. material, concrete), then( obligation( and( set( slab levels), as per( slab levels, and( nzbc e2as1 f65, nzbc e2as1 t18)), for( reinstatement, final landscaped ground levels))))
if( has( floor slab, height above ground)), then( obligation( and( as per( floor slab. height, nzbc e2as1 t18), in between( floor slab. height, and( finished ground level, figure 73D)))))
if( and( is( wall cladding. bottom, for( timber floor framing)), at( wall cladding. level, ground floor)), then( obligation( and( overlap( cladding. base, timber floor structure), greater than equal( overlap. size, 50 mm), is( cladding. fixing, direct), offset( cladding. base, concrete foundation wall), greater than equal( offset. distance, 6 mm), not( has( sub-floor space, direct connection)), between( sub-floor space, drained cavity))))
if( has( wall, external)), then( obligation( has( wall, airflow barrier)))
if( is( wall. location, external)), then( obligation( or( and( is( wind zone, up to very high), has( wall, interior lining), all( joint, stopped)), and( is( wind zone, extra high), has( wall, rigid underlay), has( wall, drained cavity)), and( not( has( wall, lining)), is( wall. type, attic space), is( air barrier, complying with( nzbc e2as1 t23)), fixed( air barrier, framing), before( fixing, cladding), before( fixing, cavity battens)), and( is( wall. location, attached garage), as per( wall, nzbc e2as1 9.1.3.4))))
if( has( wall, opening)), then( obligation( and( has( wall, flexible underlay), cut( flexible underlay, all sides of( opening)), as per( flexible underlay, nzbc e2as1 f72a, nzbc e2as1 f72b))))
if( has( wall cladding, drained cavity)), then( obligation( and( has( drained cavity, wall underlay), is( wall underlay. type, or( flexible, rigid)), comply with( wall underlay, nzbc e2as1 t23), fixed to( wall underlay, wall framing), has( drained cavity, vertical cavity battens), restrict( air movement, and( cavity, or( floor framing, wall framing, roof framing, attic roof space, subfloor space))), has( cavity, drainage), open( drainage, exterior), has( cavity base, vermin-proofing), as per( vermin-proofing, and( nzbc e2as1 9.1.8.3, nzbc e2as1 f66)), has( cavity, cavity spacers), as per( cavity spacers, nzbc e2as1 f67), or( is( fixing, required), is( cavity spacers, alternative)), as per( alternative, nzbc e2as1 9.1.8.4f)))
if( and( is( wall cladding. type, masonry veneer), is( wall framing. material, timber), as per( wall cladding, nzbc e2as1 9.0)), then( obligation( or( is( masonry veneer. material, clay brick), is( masonry veneer. material, concrete brick or block))))
if( is( wall cladding. material, fibre cement sheet)), then( obligation( and( has( sheet, installation), has( sheet, paint seal), to( sheet. edge, and( sheet, cut edge)), including( paint seal, 100 mm), across( paint seal, back face), from( paint seal, each edge))))
if( and( is( balustrade. type, enclosed), is( balustrade. top, eifs)), then( obligation( and( greater than equal( balustrade. top. slope, 10 deg), wrap( balustrade. top, as per( nzbc e2as1 f129, nzbc e2as1 f130)), has( balustrade. top, waterproofing membrane), is( waterproofing membrane. approved, supplier), protect( eifs system, coating), comply with( eifs system, as/nzs 4858 t8), except( not( require( eifs system, bleach and detergent immersion)), as per( eifs system, nzbc e2as1 a1)))))
if( has( parapet, construction)), then( obligation( and( as per( parapet, nzbc e2as1 f10), comply with( timber. material, nzbc b2as1), has( timber, framing), has( timber, cavity battens), is( sloped packers, or( polystyrene, and( timber, comply with( timber. treatment, nzbc b2as1)), and( is( plywood, h3), greater than equal( plywood. thickness, 9 mm)))), has( framing, full enclosure), as per( framing. enclosure, and( nzbc e2as1 t23, specific cladding)), has( cladding, installation), is( installation. type, cavity))))
if( has( parapet, cap)), then( obligation( and( is( cap. material, or( metal, butyl, epdm membrane)), comply with( cap, nzbc e2as1 4.0))))
if( is( fill. location, below ground)), then( obligation( and( is( fill. material, or( bedding material, selected fill, ordinary fill)), as per( fill. material, nzbc g13as2 f7), if( is( fill. material, bedding material)), then( is( fill. material. particle size, less than equal( 20 mm))), if( is( fill. material, selected fill)), then( and( is( fill. material. particle size, less than equal( 20 mm)), not( has( fill. material, topsoil)), not( has( fill. material, rubbish))))))
if( exist( gully trap)), then( obligation( and( has( gully trap, overflow level), greater than equal( overflow level, 100 mm), above( overflow level, unpaved surface))))
if( exist( gully trap)), then( obligation( and( has( gully trap, discharge pipe), greater than equal( count( discharge pipe), 1), towards( discharge pipe, gully trap), not( has( gully trap, waterseal evaporation)))))
if( is( grease trap. type, other)), then( obligation( and( approve( grease trap, network utility operator), as per( approval, nzbc g14vm1 1.2))))
if( or( is( capping. material, or( stucco, eifs, flush-finished fibre cement)), has( capping, parapet))), then( not( has( capping, enclosed balustrade)))
if( or( is( attachment, deck), is( attachment, enclosed balustrade), is( attachment, pergola))), then( obligation( comply with( timber, nzbc b2as1)))
if( and( is( drain. gradient, less than equal( 1:80)), has( drain, levelling device))), then( obligation( and( is( levelling device, verifiable), ensure( uniformity, gradient), ensure( accuracy, gradient))))
if( exist( trench), then( obligation( and( less than equal( trench. width, 600 mm), or( and( is( trench. cover, concrete), as per( trench. cover, nzbc g13as2 f7c))))))
if( exist( floor waste)), then( obligation( and( has( floor waste, trap), discharge( floor waste, 50 mm above( gully trap. grating)))))
if( is( firecell. risk group, or( sm, si))), then( obligation( as per( firecell. fire safety system, nzbc cas2 t2.2.a)))
if( is( firecell. risk group, ca)), then( obligation( as per( firecell. fire safety system, nzbc cas2 t2.2.b)))
if( has( cladding, maintenance)), then( obligation( and( achieve( material. durability, expected), as per( maintenance, nzbc e2as1 2.5))))
if( has( gutter, valley)), then( obligation( and( define( gutter. depth, x0), define( reduced depth, x1), is( x1, less than( x0)), calculate( gutter. capacity, using( reduced depth)))))
if( is( roof. type, or( internal, valley, hidden)), has( roof, gutter), not( has( gutter, fixing)), and( has( gutter, support)), is( support. material, or( h1.2 treated timber, h3 ply)), separated by( support, roof underlay strip)))
if( has( building, firecell)), then( obligation( and( is( firecell, fire separated), by( fire separation, higher of( frr, adjoining firecell. frr)), as per( frr, nzbc cas2 2.3))))
if( include( building. material, moisture)), then( obligation( and( or( is( material, timber), is( material, concrete), is( material, mortar), is( material, plaster)), or( and( is( timber. moisture source, treatment or manufacturing), is( timber. moisture content, green)), and( is( timber. moisture source, weather exposure), is( timber. moisture content, high))), and( is( material. moisture content, high)), as per( moisture, nzbc e2as1 9.0))))
if( has( eaves, gutter), and( has( eaves, spouting))), then( obligation( and( is( gutter. material, or( nzbc e2as1 4.1, not( or( nzbc e2as1 4.3.9, nzbc e2as1 4.3.10, nzbc e2as1 4.3.11)))), greater than equal( spouting. cross sectional area, 2500 mm2), is( spouting, designed to overflow), towards( overflow, outside))))
if( has( downpipe, material)), then( obligation( and( is( downpipe. material, any of( nzbc e2as1 4.1, except( 4.3.9, 4.3.10, 4.3.11))), or( and( is( upper roof, draining), towards( downpipe, ground level)), and( towards( upper roof, lower roof), has( downpipe, spreader), as per( spreader, nzbc e2as1 f20)), less than equal( catchment area, 25 m2)))))
if( is( roof water. drainage, spreader)), then( obligation( and( is( spreader. material, any( nzbc e2as1 4.1, except( nzbc e2as1 4.3.9, nzbc e2as1 4.3.10, nzbc e2as1 4.3.11))), as per( spreader, nzbc e2as1 f20), not( is( roof. type, masonry tile)), has( roof, underlay), discharge( spreader, away from( roofing laps)), clear( spreader. discharge, roof penetrations))))
if( is( gutter. type, internal)), then( obligation( and( as per( gutter. dimensions, nzbc e2as1 f52), or( greater than equal( gutter. capacity, calculate( nzbc e1as1) + 20 mm), has( gutter, freeboard depth, 20 mm)))))
if( and( is( material, timber framing), has( installation, interior lining))), then( obligation( and( less than equal( moisture content, or( 20%, 24%)), as per( moisture content, nzs 3602))))
if( is( weatherboard. material, timber)), then( obligation( less than equal( moisture content, 20%), at( time of painting))))
if( is( joinery. material, timber), is( joinery. location, exterior), has( joinery, moisture content)), then( obligation( less than equal( moisture content. value, 20%), at( moisture content. time, painting)))
if( or( is( gutter. type, valley), is( gutter. type, hidden)), not( is( roof cladding. type, membrane))), then( obligation( and( is( gutter, constructed), as per( gutter. construction, and( nzbc e2as1 f50, nzbc e2as1 f51)), not( change in( gutter. direction, plan)), has( gutter, underlap), as per( underlap, and( nzbc e2as1 f27, nzbc e2as1 f37, nzbc e2as1 f50, nzbc e2as1 f51)), is( gutter. material, or( flashings. material, except( 4.3.10, 4.3.11))), fixed( gutter, upper end), secured( gutter, clip system), towards( clip system, expansion/contraction), discharge( gutter, or( internal gutter, eaves gutter/spouting)))))
if( is( gutter, valley)), then( obligation( and( greater than equal( gutter. slope, value), as per( value, nzbc e2as1 t8), not( has( spreader, direct discharge)), towards( spreader. discharge, gutter))))
if( and( has( roofing penetration, width), greater than( roofing penetration. width, 200 mm)), then( obligation( and( has( roofing penetration, edge), is( edge. supported, additional framing), as per( additional framing, nzbc e2as1 f21))))
if( or( has( flashing, material), has( gutter, material), has( fixing, material))), then( obligation( and( as per( material, nzbc e2as1 4.0), is( material, from( nzbc e2as1 t20))), and( is( material, compatible with( mortar, as per( mortar, nzbc e2as1 t21))), is( material, compatible with( bedding, as per( bedding, nzbc e2as1 t22))))))
if( is( floor. material, concrete)), then( obligation( and( measure( moisture content, floor), as per( moisture content. measurement, branz bulletin 330), using( hygrometer, calibrated to( astm e 104 - 2002))))
